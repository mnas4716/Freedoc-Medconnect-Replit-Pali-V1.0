{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Healthcare Platform\n\n## Overview\n\nThis is a comprehensive healthcare platform built as a full-stack web application. The system connects patients with Australian Partner Doctors through various telemedicine services including online prescriptions, medical certificates, mental health support, telehealth consultations, and pathology referrals. The platform features a multi-tenant architecture supporting patients, doctors, and administrators with role-based access control.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **UI Components**: shadcn/ui component library built on Radix UI primitives\n- **Styling**: Tailwind CSS with custom design tokens and CSS variables for theming\n- **State Management**: TanStack Query (React Query) for server state management\n- **Routing**: Wouter for client-side routing with role-based route protection\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n\n### Backend Architecture\n- **Server**: Express.js with TypeScript running on Node.js\n- **API Design**: RESTful API with structured error handling and request logging middleware\n- **Database ORM**: Drizzle ORM for type-safe database operations\n- **File Structure**: Modular architecture with separate routes, services, and storage layers\n- **Development**: Hot reload setup with Vite integration for seamless development experience\n\n### Authentication & Authorization\n- **Provider**: Replit Auth integration using OpenID Connect\n- **Session Management**: Express session with PostgreSQL session store using connect-pg-simple\n- **Authorization**: Role-based access control (patient, doctor, admin) with protected routes\n- **Registration Flow**: Email verification via OTP system before account activation\n\n### Database Design\n- **Primary Database**: PostgreSQL with Neon serverless hosting\n- **Schema Management**: Drizzle migrations with TypeScript schema definitions\n- **Key Entities**: Users, Doctors, Consultations, Medical Certificates, Prescriptions, OTP Verifications\n- **Relationships**: Proper foreign key relationships between patients, doctors, and consultations\n- **Enums**: PostgreSQL enums for user roles, consultation status, service types, and certificate types\n\n### Service Layer Architecture\n- **Email Service**: Nodemailer integration for OTP delivery and notifications\n- **PDF Generation Service**: HTML-to-PDF generation for medical documents (certificates, prescriptions)\n- **Smart Assignment**: Load balancing algorithm for distributing consultations among available doctors\n- **Document Storage**: File system-based storage for generated medical documents\n\n### Frontend Component Architecture\n- **Design System**: Consistent component library with variant-based styling using class-variance-authority\n- **Form Components**: Reusable service request forms with validation for each healthcare service\n- **Dashboard Views**: Role-specific dashboards (patient, doctor, admin) with service-specific workflows\n- **Modal System**: Dynamic form modals for service requests with type-safe validation\n- **Responsive Design**: Mobile-first approach with adaptive layouts\n\n## External Dependencies\n\n### Database & Infrastructure\n- **Neon Database**: Serverless PostgreSQL hosting with connection pooling\n- **WebSocket Support**: WebSocket implementation for real-time database connections\n\n### Authentication Services\n- **Replit Auth**: OAuth 2.0/OpenID Connect integration for user authentication\n- **Session Storage**: PostgreSQL-backed session management for secure authentication state\n\n### Email Services\n- **SMTP Provider**: Configurable SMTP integration (Gmail, custom providers) for transactional emails\n- **Email Templates**: HTML email templates for OTP verification and notifications\n\n### UI & Styling\n- **Radix UI**: Headless component primitives for accessibility-compliant UI components\n- **Lucide React**: Icon library for consistent iconography\n- **Tailwind CSS**: Utility-first CSS framework with custom configuration\n\n### Development Tools\n- **Vite**: Build tool with hot module replacement and development server\n- **TypeScript**: Type safety across frontend and backend with shared types\n- **ESBuild**: Fast JavaScript bundler for production builds\n\n### Third-party Libraries\n- **React Query**: Server state management with caching and synchronization\n- **React Hook Form**: Form state management with validation\n- **Zod**: Runtime type validation and schema parsing\n- **date-fns**: Date manipulation and formatting utilities","size_bytes":4634},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        \"freedoc-blue\": {\n          DEFAULT: \"var(--freedoc-blue)\",\n          light: \"var(--freedoc-blue-light)\",\n          dark: \"var(--freedoc-blue-dark)\",\n        },\n        \"freedoc-dark\": \"var(--freedoc-dark)\",\n        \"freedoc-secondary\": \"var(--freedoc-secondary)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3039},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"attached_assets/README_1754529389687.md":{"content":"# Healthcare website example\n\n*Automatically synced with your [v0.dev](https://v0.dev) deployments*\n\n[![Deployed on Vercel](https://img.shields.io/badge/Deployed%20on-Vercel-black?style=for-the-badge&logo=vercel)](https://vercel.com/mnas4716s-projects/v0-healthcare-website-example)\n[![Built with v0](https://img.shields.io/badge/Built%20with-v0.dev-black?style=for-the-badge)](https://v0.dev/chat/projects/b1kylOKy24Z)\n\n## Overview\n\nThis repository will stay in sync with your deployed chats on [v0.dev](https://v0.dev).\nAny changes you make to your deployed app will be automatically pushed to this repository from [v0.dev](https://v0.dev).\n\n## Deployment\n\nYour project is live at:\n\n**[https://vercel.com/mnas4716s-projects/v0-healthcare-website-example](https://vercel.com/mnas4716s-projects/v0-healthcare-website-example)**\n\n## Build your app\n\nContinue building your app on:\n\n**[https://v0.dev/chat/projects/b1kylOKy24Z](https://v0.dev/chat/projects/b1kylOKy24Z)**\n\n## How It Works\n\n1. Create and modify your project using [v0.dev](https://v0.dev)\n2. Deploy your chats from the v0 interface\n3. Changes are automatically pushed to this repository\n4. Vercel deploys the latest version from this repository","size_bytes":1207},"attached_assets/pnpm-lock_1754529389687.yaml":{"content":"lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      '@hookform/resolvers':\n        specifier: ^3.9.1\n        version: 3.9.1(react-hook-form@7.54.1(react@19.0.0))\n      '@radix-ui/react-accordion':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-alert-dialog':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-aspect-ratio':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-avatar':\n        specifier: 1.1.2\n        version: 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-checkbox':\n        specifier: 1.1.3\n        version: 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-collapsible':\n        specifier: 1.1.2\n        version: 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-context-menu':\n        specifier: 2.2.4\n        version: 2.2.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-dialog':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-dropdown-menu':\n        specifier: 2.1.4\n        version: 2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-hover-card':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-label':\n        specifier: 2.1.1\n        version: 2.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-menubar':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-navigation-menu':\n        specifier: 1.2.3\n        version: 1.2.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-popover':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-progress':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-radio-group':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-scroll-area':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-select':\n        specifier: 2.1.4\n        version: 2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-separator':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slider':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-switch':\n        specifier: 1.1.2\n        version: 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-tabs':\n        specifier: 1.1.2\n        version: 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-toast':\n        specifier: 1.2.4\n        version: 1.2.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-toggle':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-toggle-group':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-tooltip':\n        specifier: 1.1.6\n        version: 1.1.6(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      autoprefixer:\n        specifier: ^10.4.20\n        version: 10.4.20(postcss@8.5.0)\n      class-variance-authority:\n        specifier: ^0.7.1\n        version: 0.7.1\n      clsx:\n        specifier: ^2.1.1\n        version: 2.1.1\n      cmdk:\n        specifier: 1.0.4\n        version: 1.0.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      date-fns:\n        specifier: 4.1.0\n        version: 4.1.0\n      embla-carousel-react:\n        specifier: 8.5.1\n        version: 8.5.1(react@19.0.0)\n      geist:\n        specifier: ^1.3.1\n        version: 1.3.1(next@15.2.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n      input-otp:\n        specifier: 1.4.1\n        version: 1.4.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      lucide-react:\n        specifier: ^0.454.0\n        version: 0.454.0(react@19.0.0)\n      next:\n        specifier: 15.2.4\n        version: 15.2.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      next-themes:\n        specifier: ^0.4.4\n        version: 0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react:\n        specifier: ^19\n        version: 19.0.0\n      react-day-picker:\n        specifier: 9.8.0\n        version: 9.8.0(react@19.0.0)\n      react-dom:\n        specifier: ^19\n        version: 19.0.0(react@19.0.0)\n      react-hook-form:\n        specifier: ^7.54.1\n        version: 7.54.1(react@19.0.0)\n      react-resizable-panels:\n        specifier: ^2.1.7\n        version: 2.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      recharts:\n        specifier: 2.15.0\n        version: 2.15.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      sonner:\n        specifier: ^1.7.1\n        version: 1.7.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      tailwind-merge:\n        specifier: ^2.5.5\n        version: 2.5.5\n      tailwindcss-animate:\n        specifier: ^1.0.7\n        version: 1.0.7(tailwindcss@3.4.17)\n      vaul:\n        specifier: ^0.9.6\n        version: 0.9.6(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      zod:\n        specifier: ^3.24.1\n        version: 3.24.1\n    devDependencies:\n      '@types/node':\n        specifier: ^22\n        version: 22.0.0\n      '@types/react':\n        specifier: ^19\n        version: 19.0.0\n      '@types/react-dom':\n        specifier: ^19\n        version: 19.0.0\n      postcss:\n        specifier: ^8.5\n        version: 8.5.0\n      tailwindcss:\n        specifier: ^3.4.17\n        version: 3.4.17\n      typescript:\n        specifier: ^5\n        version: 5.0.2\n\npackages:\n\n  '@alloc/quick-lru@5.2.0':\n    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}\n    engines: {node: '>=10'}\n\n  '@babel/runtime@7.27.6':\n    resolution: {integrity: sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==}\n    engines: {node: '>=6.9.0'}\n\n  '@date-fns/tz@1.2.0':\n    resolution: {integrity: sha512-LBrd7MiJZ9McsOgxqWX7AaxrDjcFVjWH/tIKJd7pnR7McaslGYOP1QmmiBXdJH/H/yLCT+rcQ7FaPBUxRGUtrg==}\n\n  '@emnapi/runtime@1.4.3':\n    resolution: {integrity: sha512-pBPWdu6MLKROBX05wSNKcNb++m5Er+KQ9QkB+WVM+pW2Kx9hoSrVTnu3BdkI5eBLZoKu/J6mW/B6i6bJB2ytXQ==}\n\n  '@floating-ui/core@1.7.1':\n    resolution: {integrity: sha512-azI0DrjMMfIug/ExbBaeDVJXcY0a7EPvPjb2xAJPa4HeimBX+Z18HK8QQR3jb6356SnDDdxx+hinMLcJEDdOjw==}\n\n  '@floating-ui/dom@1.7.1':\n    resolution: {integrity: sha512-cwsmW/zyw5ltYTUeeYJ60CnQuPqmGwuGVhG9w0PRaRKkAyi38BT5CKrpIbb+jtahSwUl04cWzSx9ZOIxeS6RsQ==}\n\n  '@floating-ui/react-dom@2.1.3':\n    resolution: {integrity: sha512-huMBfiU9UnQ2oBwIhgzyIiSpVgvlDstU8CX0AF+wS+KzmYMs0J2a3GwuFHV1Lz+jlrQGeC1fF+Nv0QoumyV0bA==}\n    peerDependencies:\n      react: '>=16.8.0'\n      react-dom: '>=16.8.0'\n\n  '@floating-ui/utils@0.2.9':\n    resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}\n\n  '@hookform/resolvers@3.9.1':\n    resolution: {integrity: sha512-ud2HqmGBM0P0IABqoskKWI6PEf6ZDDBZkFqe2Vnl+mTHCEHzr3ISjjZyCwTjC/qpL25JC9aIDkloQejvMeq0ug==}\n    peerDependencies:\n      react-hook-form: ^7.0.0\n\n  '@img/sharp-darwin-arm64@0.33.5':\n    resolution: {integrity: sha512-UT4p+iz/2H4twwAoLCqfA9UH5pI6DggwKEGuaPy7nCVQ8ZsiY5PIcrRvD1DzuY3qYL07NtIQcWnBSY/heikIFQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@img/sharp-darwin-x64@0.33.5':\n    resolution: {integrity: sha512-fyHac4jIc1ANYGRDxtiqelIbdWkIuQaI84Mv45KvGRRxSAa7o7d1ZKAOBaYbnepLC1WqxfpimdeWfvqqSGwR2Q==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [darwin]\n\n  '@img/sharp-libvips-darwin-arm64@1.0.4':\n    resolution: {integrity: sha512-XblONe153h0O2zuFfTAbQYAX2JhYmDHeWikp1LM9Hul9gVPjFY427k6dFEcOL72O01QxQsWi761svJ/ev9xEDg==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@img/sharp-libvips-darwin-x64@1.0.4':\n    resolution: {integrity: sha512-xnGR8YuZYfJGmWPvmlunFaWJsb9T/AO2ykoP3Fz/0X5XV2aoYBPkX6xqCQvUTKKiLddarLaxpzNe+b1hjeWHAQ==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@img/sharp-libvips-linux-arm64@1.0.4':\n    resolution: {integrity: sha512-9B+taZ8DlyyqzZQnoeIvDVR/2F4EbMepXMc/NdVbkzsJbzkUjhXv/70GQJ7tdLA4YJgNP25zukcxpX2/SueNrA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-arm@1.0.5':\n    resolution: {integrity: sha512-gvcC4ACAOPRNATg/ov8/MnbxFDJqf/pDePbBnuBDcjsI8PssmjoKMAz4LtLaVi+OnSb5FK/yIOamqDwGmXW32g==}\n    cpu: [arm]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-s390x@1.0.4':\n    resolution: {integrity: sha512-u7Wz6ntiSSgGSGcjZ55im6uvTrOxSIS8/dgoVMoiGE9I6JAfU50yH5BoDlYA1tcuGS7g/QNtetJnxA6QEsCVTA==}\n    cpu: [s390x]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-x64@1.0.4':\n    resolution: {integrity: sha512-MmWmQ3iPFZr0Iev+BAgVMb3ZyC4KeFc3jFxnNbEPas60e1cIfevbtuyf9nDGIzOaW9PdnDciJm+wFFaTlj5xYw==}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-libvips-linuxmusl-arm64@1.0.4':\n    resolution: {integrity: sha512-9Ti+BbTYDcsbp4wfYib8Ctm1ilkugkA/uscUn6UXK1ldpC1JjiXbLfFZtRlBhjPZ5o1NCLiDbg8fhUPKStHoTA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-libvips-linuxmusl-x64@1.0.4':\n    resolution: {integrity: sha512-viYN1KX9m+/hGkJtvYYp+CCLgnJXwiQB39damAO7WMdKWlIhmYTfHjwSbQeUK/20vY154mwezd9HflVFM1wVSw==}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-linux-arm64@0.33.5':\n    resolution: {integrity: sha512-JMVv+AMRyGOHtO1RFBiJy/MBsgz0x4AWrT6QoEVVTyh1E39TrCUpTRI7mx9VksGX4awWASxqCYLCV4wBZHAYxA==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-linux-arm@0.33.5':\n    resolution: {integrity: sha512-JTS1eldqZbJxjvKaAkxhZmBqPRGmxgu+qFKSInv8moZ2AmT5Yib3EQ1c6gp493HvrvV8QgdOXdyaIBrhvFhBMQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm]\n    os: [linux]\n\n  '@img/sharp-linux-s390x@0.33.5':\n    resolution: {integrity: sha512-y/5PCd+mP4CA/sPDKl2961b+C9d+vPAveS33s6Z3zfASk2j5upL6fXVPZi7ztePZ5CuH+1kW8JtvxgbuXHRa4Q==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [s390x]\n    os: [linux]\n\n  '@img/sharp-linux-x64@0.33.5':\n    resolution: {integrity: sha512-opC+Ok5pRNAzuvq1AG0ar+1owsu842/Ab+4qvU879ippJBHvyY5n2mxF1izXqkPYlGuP/M556uh53jRLJmzTWA==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-linuxmusl-arm64@0.33.5':\n    resolution: {integrity: sha512-XrHMZwGQGvJg2V/oRSUfSAfjfPxO+4DkiRh6p2AFjLQztWUuY/o8Mq0eMQVIY7HJ1CDQUJlxGGZRw1a5bqmd1g==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-linuxmusl-x64@0.33.5':\n    resolution: {integrity: sha512-WT+d/cgqKkkKySYmqoZ8y3pxx7lx9vVejxW/W4DOFMYVSkErR+w7mf2u8m/y4+xHe7yY9DAXQMWQhpnMuFfScw==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-wasm32@0.33.5':\n    resolution: {integrity: sha512-ykUW4LVGaMcU9lu9thv85CbRMAwfeadCJHRsg2GmeRa/cJxsVY9Rbd57JcMxBkKHag5U/x7TSBpScF4U8ElVzg==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [wasm32]\n\n  '@img/sharp-win32-ia32@0.33.5':\n    resolution: {integrity: sha512-T36PblLaTwuVJ/zw/LaH0PdZkRz5rd3SmMHX8GSmR7vtNSP5Z6bQkExdSK7xGWyxLw4sUknBuugTelgw2faBbQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [ia32]\n    os: [win32]\n\n  '@img/sharp-win32-x64@0.33.5':\n    resolution: {integrity: sha512-MpY/o8/8kj+EcnxwvrP4aTJSWw/aZ7JIGR4aBeZkZw5B7/Jn+tY9/VNwtcoGmdT7GfggGIU4kygOMSbYnOrAbg==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [win32]\n\n  '@isaacs/cliui@8.0.2':\n    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}\n    engines: {node: '>=12'}\n\n  '@jridgewell/gen-mapping@0.3.8':\n    resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/resolve-uri@3.1.2':\n    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/set-array@1.2.1':\n    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/sourcemap-codec@1.5.0':\n    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}\n\n  '@next/env@15.2.4':\n    resolution: {integrity: sha512-+SFtMgoiYP3WoSswuNmxJOCwi06TdWE733D+WPjpXIe4LXGULwEaofiiAy6kbS0+XjM5xF5n3lKuBwN2SnqD9g==}\n\n  '@next/swc-darwin-arm64@15.2.4':\n    resolution: {integrity: sha512-1AnMfs655ipJEDC/FHkSr0r3lXBgpqKo4K1kiwfUf3iE68rDFXZ1TtHdMvf7D0hMItgDZ7Vuq3JgNMbt/+3bYw==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@next/swc-darwin-x64@15.2.4':\n    resolution: {integrity: sha512-3qK2zb5EwCwxnO2HeO+TRqCubeI/NgCe+kL5dTJlPldV/uwCnUgC7VbEzgmxbfrkbjehL4H9BPztWOEtsoMwew==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@next/swc-linux-arm64-gnu@15.2.4':\n    resolution: {integrity: sha512-HFN6GKUcrTWvem8AZN7tT95zPb0GUGv9v0d0iyuTb303vbXkkbHDp/DxufB04jNVD+IN9yHy7y/6Mqq0h0YVaQ==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@next/swc-linux-arm64-musl@15.2.4':\n    resolution: {integrity: sha512-Oioa0SORWLwi35/kVB8aCk5Uq+5/ZIumMK1kJV+jSdazFm2NzPDztsefzdmzzpx5oGCJ6FkUC7vkaUseNTStNA==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@next/swc-linux-x64-gnu@15.2.4':\n    resolution: {integrity: sha512-yb5WTRaHdkgOqFOZiu6rHV1fAEK0flVpaIN2HB6kxHVSy/dIajWbThS7qON3W9/SNOH2JWkVCyulgGYekMePuw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@next/swc-linux-x64-musl@15.2.4':\n    resolution: {integrity: sha512-Dcdv/ix6srhkM25fgXiyOieFUkz+fOYkHlydWCtB0xMST6X9XYI3yPDKBZt1xuhOytONsIFJFB08xXYsxUwJLw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@next/swc-win32-arm64-msvc@15.2.4':\n    resolution: {integrity: sha512-dW0i7eukvDxtIhCYkMrZNQfNicPDExt2jPb9AZPpL7cfyUo7QSNl1DjsHjmmKp6qNAqUESyT8YFl/Aw91cNJJg==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@next/swc-win32-x64-msvc@15.2.4':\n    resolution: {integrity: sha512-SbnWkJmkS7Xl3kre8SdMF6F/XDh1DTFEhp0jRTj/uB8iPKoU2bb2NDfcu+iifv1+mxQEd1g2vvSxcZbXSKyWiQ==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [win32]\n\n  '@nodelib/fs.scandir@2.1.5':\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.stat@2.0.5':\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.walk@1.2.8':\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n\n  '@pkgjs/parseargs@0.11.0':\n    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}\n    engines: {node: '>=14'}\n\n  '@radix-ui/number@1.1.0':\n    resolution: {integrity: sha512-V3gRzhVNU1ldS5XhAPTom1fOIo4ccrjjJgmE+LI2h/WaFpHmx0MQApT+KZHnx8abG6Avtfcz4WoEciMnpFT3HQ==}\n\n  '@radix-ui/primitive@1.1.1':\n    resolution: {integrity: sha512-SJ31y+Q/zAyShtXJc8x83i9TYdbAfHZ++tUZnvjJJqFjzsdUnKsxPL6IEtBlxKkU7yzer//GQtZSV4GbldL3YA==}\n\n  '@radix-ui/react-accordion@1.2.2':\n    resolution: {integrity: sha512-b1oh54x4DMCdGsB4/7ahiSrViXxaBwRPotiZNnYXjLha9vfuURSAZErki6qjDoSIV0eXx5v57XnTGVtGwnfp2g==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-alert-dialog@1.1.4':\n    resolution: {integrity: sha512-A6Kh23qZDLy3PSU4bh2UJZznOrUdHImIXqF8YtUa6CN73f8EOO9XlXSCd9IHyPvIquTaa/kwaSWzZTtUvgXVGw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-arrow@1.1.1':\n    resolution: {integrity: sha512-NaVpZfmv8SKeZbn4ijN2V3jlHA9ngBG16VnIIm22nUR0Yk8KUALyBxT3KYEUnNuch9sTE8UTsS3whzBgKOL30w==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-aspect-ratio@1.1.1':\n    resolution: {integrity: sha512-kNU4FIpcFMBLkOUcgeIteH06/8JLBcYY6Le1iKenDGCYNYFX3TQqCZjzkOsz37h7r94/99GTb7YhEr98ZBJibw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-avatar@1.1.2':\n    resolution: {integrity: sha512-GaC7bXQZ5VgZvVvsJ5mu/AEbjYLnhhkoidOboC50Z6FFlLA03wG2ianUoH+zgDQ31/9gCF59bE4+2bBgTyMiig==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-checkbox@1.1.3':\n    resolution: {integrity: sha512-HD7/ocp8f1B3e6OHygH0n7ZKjONkhciy1Nh0yuBgObqThc3oyx+vuMfFHKAknXRHHWVE9XvXStxJFyjUmB8PIw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-collapsible@1.1.2':\n    resolution: {integrity: sha512-PliMB63vxz7vggcyq0IxNYk8vGDrLXVWw4+W4B8YnwI1s18x7YZYqlG9PLX7XxAJUi0g2DxP4XKJMFHh/iVh9A==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-collection@1.1.1':\n    resolution: {integrity: sha512-LwT3pSho9Dljg+wY2KN2mrrh6y3qELfftINERIzBUO9e0N+t0oMTyn3k9iv+ZqgrwGkRnLpNJrsMv9BZlt2yuA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-compose-refs@1.1.1':\n    resolution: {integrity: sha512-Y9VzoRDSJtgFMUCoiZBDVo084VQ5hfpXxVE+NgkdNsjiDBByiImMZKKhxMwCbdHvhlENG6a833CbFkOQvTricw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-compose-refs@1.1.2':\n    resolution: {integrity: sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-context-menu@2.2.4':\n    resolution: {integrity: sha512-ap4wdGwK52rJxGkwukU1NrnEodsUFQIooANKu+ey7d6raQ2biTcEf8za1zr0mgFHieevRTB2nK4dJeN8pTAZGQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-context@1.1.1':\n    resolution: {integrity: sha512-UASk9zi+crv9WteK/NU4PLvOoL3OuE6BWVKNF6hPRBtYBDXQ2u5iu3O59zUlJiTVvkyuycnqrztsHVJwcK9K+Q==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-dialog@1.1.4':\n    resolution: {integrity: sha512-Ur7EV1IwQGCyaAuyDRiOLA5JIUZxELJljF+MbM/2NC0BYwfuRrbpS30BiQBJrVruscgUkieKkqXYDOoByaxIoA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-direction@1.1.0':\n    resolution: {integrity: sha512-BUuBvgThEiAXh2DWu93XsT+a3aWrGqolGlqqw5VU1kG7p/ZH2cuDlM1sRLNnY3QcBS69UIz2mcKhMxDsdewhjg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-dismissable-layer@1.1.3':\n    resolution: {integrity: sha512-onrWn/72lQoEucDmJnr8uczSNTujT0vJnA/X5+3AkChVPowr8n1yvIKIabhWyMQeMvvmdpsvcyDqx3X1LEXCPg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-dropdown-menu@2.1.4':\n    resolution: {integrity: sha512-iXU1Ab5ecM+yEepGAWK8ZhMyKX4ubFdCNtol4sT9D0OVErG9PNElfx3TQhjw7n7BC5nFVz68/5//clWy+8TXzA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-focus-guards@1.1.1':\n    resolution: {integrity: sha512-pSIwfrT1a6sIoDASCSpFwOasEwKTZWDw/iBdtnqKO7v6FeOzYJ7U53cPzYFVR3geGGXgVHaH+CdngrrAzqUGxg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-focus-scope@1.1.1':\n    resolution: {integrity: sha512-01omzJAYRxXdG2/he/+xy+c8a8gCydoQ1yOxnWNcRhrrBW5W+RQJ22EK1SaO8tb3WoUsuEw7mJjBozPzihDFjA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-hover-card@1.1.4':\n    resolution: {integrity: sha512-QSUUnRA3PQ2UhvoCv3eYvMnCAgGQW+sTu86QPuNb+ZMi+ZENd6UWpiXbcWDQ4AEaKF9KKpCHBeaJz9Rw6lRlaQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-id@1.1.0':\n    resolution: {integrity: sha512-EJUrI8yYh7WOjNOqpoJaf1jlFIH2LvtgAl+YcFqNCa+4hj64ZXmPkAKOFs/ukjz3byN6bdb/AVUqHkI8/uWWMA==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-id@1.1.1':\n    resolution: {integrity: sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-label@2.1.1':\n    resolution: {integrity: sha512-UUw5E4e/2+4kFMH7+YxORXGWggtY6sM8WIwh5RZchhLuUg2H1hc98Py+pr8HMz6rdaYrK2t296ZEjYLOCO5uUw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-menu@2.1.4':\n    resolution: {integrity: sha512-BnOgVoL6YYdHAG6DtXONaR29Eq4nvbi8rutrV/xlr3RQCMMb3yqP85Qiw/3NReozrSW+4dfLkK+rc1hb4wPU/A==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-menubar@1.1.4':\n    resolution: {integrity: sha512-+KMpi7VAZuB46+1LD7a30zb5IxyzLgC8m8j42gk3N4TUCcViNQdX8FhoH1HDvYiA8quuqcek4R4bYpPn/SY1GA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-navigation-menu@1.2.3':\n    resolution: {integrity: sha512-IQWAsQ7dsLIYDrn0WqPU+cdM7MONTv9nqrLVYoie3BPiabSfUVDe6Fr+oEt0Cofsr9ONDcDe9xhmJbL1Uq1yKg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-popover@1.1.4':\n    resolution: {integrity: sha512-aUACAkXx8LaFymDma+HQVji7WhvEhpFJ7+qPz17Nf4lLZqtreGOFRiNQWQmhzp7kEWg9cOyyQJpdIMUMPc/CPw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-popper@1.2.1':\n    resolution: {integrity: sha512-3kn5Me69L+jv82EKRuQCXdYyf1DqHwD2U/sxoNgBGCB7K9TRc3bQamQ+5EPM9EvyPdli0W41sROd+ZU1dTCztw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-portal@1.1.3':\n    resolution: {integrity: sha512-NciRqhXnGojhT93RPyDaMPfLH3ZSl4jjIFbZQ1b/vxvZEdHsBZ49wP9w8L3HzUQwep01LcWtkUvm0OVB5JAHTw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-presence@1.1.2':\n    resolution: {integrity: sha512-18TFr80t5EVgL9x1SwF/YGtfG+l0BS0PRAlCWBDoBEiDQjeKgnNZRVJp/oVBl24sr3Gbfwc/Qpj4OcWTQMsAEg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-primitive@2.0.1':\n    resolution: {integrity: sha512-sHCWTtxwNn3L3fH8qAfnF3WbUZycW93SM1j3NFDzXBiz8D6F5UTTy8G1+WFEaiCdvCVRJWj6N2R4Xq6HdiHmDg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-primitive@2.1.3':\n    resolution: {integrity: sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-progress@1.1.1':\n    resolution: {integrity: sha512-6diOawA84f/eMxFHcWut0aE1C2kyE9dOyCTQOMRR2C/qPiXz/X0SaiA/RLbapQaXUCmy0/hLMf9meSccD1N0pA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-radio-group@1.2.2':\n    resolution: {integrity: sha512-E0MLLGfOP0l8P/NxgVzfXJ8w3Ch8cdO6UDzJfDChu4EJDy+/WdO5LqpdY8PYnCErkmZH3gZhDL1K7kQ41fAHuQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-roving-focus@1.1.1':\n    resolution: {integrity: sha512-QE1RoxPGJ/Nm8Qmk0PxP8ojmoaS67i0s7hVssS7KuI2FQoc/uzVlZsqKfQvxPE6D8hICCPHJ4D88zNhT3OOmkw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-scroll-area@1.2.2':\n    resolution: {integrity: sha512-EFI1N/S3YxZEW/lJ/H1jY3njlvTd8tBmgKEn4GHi51+aMm94i6NmAJstsm5cu3yJwYqYc93gpCPm21FeAbFk6g==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-select@2.1.4':\n    resolution: {integrity: sha512-pOkb2u8KgO47j/h7AylCj7dJsm69BXcjkrvTqMptFqsE2i0p8lHkfgneXKjAgPzBMivnoMyt8o4KiV4wYzDdyQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-separator@1.1.1':\n    resolution: {integrity: sha512-RRiNRSrD8iUiXriq/Y5n4/3iE8HzqgLHsusUSg5jVpU2+3tqcUFPJXHDymwEypunc2sWxDUS3UC+rkZRlHedsw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-slider@1.2.2':\n    resolution: {integrity: sha512-sNlU06ii1/ZcbHf8I9En54ZPW0Vil/yPVg4vQMcFNjrIx51jsHbFl1HYHQvCIWJSr1q0ZmA+iIs/ZTv8h7HHSA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-slot@1.1.1':\n    resolution: {integrity: sha512-RApLLOcINYJA+dMVbOju7MYv1Mb2EBp2nH4HdDzXTSyaR5optlm6Otrz1euW3HbdOR8UmmFK06TD+A9frYWv+g==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-slot@1.2.3':\n    resolution: {integrity: sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-switch@1.1.2':\n    resolution: {integrity: sha512-zGukiWHjEdBCRyXvKR6iXAQG6qXm2esuAD6kDOi9Cn+1X6ev3ASo4+CsYaD6Fov9r/AQFekqnD/7+V0Cs6/98g==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-tabs@1.1.2':\n    resolution: {integrity: sha512-9u/tQJMcC2aGq7KXpGivMm1mgq7oRJKXphDwdypPd/j21j/2znamPU8WkXgnhUaTrSFNIt8XhOyCAupg8/GbwQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-toast@1.2.4':\n    resolution: {integrity: sha512-Sch9idFJHJTMH9YNpxxESqABcAFweJG4tKv+0zo0m5XBvUSL8FM5xKcJLFLXononpePs8IclyX1KieL5SDUNgA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-toggle-group@1.1.1':\n    resolution: {integrity: sha512-OgDLZEA30Ylyz8YSXvnGqIHtERqnUt1KUYTKdw/y8u7Ci6zGiJfXc02jahmcSNK3YcErqioj/9flWC9S1ihfwg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-toggle@1.1.1':\n    resolution: {integrity: sha512-i77tcgObYr743IonC1hrsnnPmszDRn8p+EGUsUt+5a/JFn28fxaM88Py6V2mc8J5kELMWishI0rLnuGLFD/nnQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-tooltip@1.1.6':\n    resolution: {integrity: sha512-TLB5D8QLExS1uDn7+wH/bjEmRurNMTzNrtq7IjaS4kjion9NtzsTGkvR5+i7yc9q01Pi2KMM2cN3f8UG4IvvXA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-use-callback-ref@1.1.0':\n    resolution: {integrity: sha512-CasTfvsy+frcFkbXtSJ2Zu9JHpN8TYKxkgJGWbjiZhFivxaeW7rMeZt7QELGVLaYVfFMsKHjb7Ak0nMEe+2Vfw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-controllable-state@1.1.0':\n    resolution: {integrity: sha512-MtfMVJiSr2NjzS0Aa90NPTnvTSg6C/JLCV7ma0W6+OMV78vd8OyRpID+Ng9LxzsPbLeuBnWBA1Nq30AtBIDChw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-escape-keydown@1.1.0':\n    resolution: {integrity: sha512-L7vwWlR1kTTQ3oh7g1O0CBF3YCyyTj8NmhLR+phShpyA50HCfBFKVJTpshm9PzLiKmehsrQzTYTpX9HvmC9rhw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-layout-effect@1.1.0':\n    resolution: {integrity: sha512-+FPE0rOdziWSrH9athwI1R0HDVbWlEhd+FR+aSDk4uWGmSJ9Z54sdZVDQPZAinJhJXwfT+qnj969mCsT2gfm5w==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-layout-effect@1.1.1':\n    resolution: {integrity: sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-previous@1.1.0':\n    resolution: {integrity: sha512-Z/e78qg2YFnnXcW88A4JmTtm4ADckLno6F7OXotmkQfeuCVaKuYzqAATPhVzl3delXE7CxIV8shofPn3jPc5Og==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-rect@1.1.0':\n    resolution: {integrity: sha512-0Fmkebhr6PiseyZlYAOtLS+nb7jLmpqTrJyv61Pe68MKYW6OWdRE2kI70TaYY27u7H0lajqM3hSMMLFq18Z7nQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-size@1.1.0':\n    resolution: {integrity: sha512-XW3/vWuIXHa+2Uwcc2ABSfcCledmXhhQPlGbfcRXbiUQI5Icjcg19BGCZVKKInYbvUCut/ufbbLLPFC5cbb1hw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-visually-hidden@1.1.1':\n    resolution: {integrity: sha512-vVfA2IZ9q/J+gEamvj761Oq1FpWgCDaNOOIfbPVp2MVPLEomUr5+Vf7kJGwQ24YxZSlQVar7Bes8kyTo5Dshpg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/rect@1.1.0':\n    resolution: {integrity: sha512-A9+lCBZoaMJlVKcRBz2YByCG+Cp2t6nAnMnNba+XiWxnj6r4JUFqfsgwocMBZU9LPtdxC6wB56ySYpc7LQIoJg==}\n\n  '@swc/counter@0.1.3':\n    resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}\n\n  '@swc/helpers@0.5.15':\n    resolution: {integrity: sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==}\n\n  '@types/d3-array@3.2.1':\n    resolution: {integrity: sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==}\n\n  '@types/d3-color@3.1.3':\n    resolution: {integrity: sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==}\n\n  '@types/d3-ease@3.0.2':\n    resolution: {integrity: sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==}\n\n  '@types/d3-interpolate@3.0.4':\n    resolution: {integrity: sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==}\n\n  '@types/d3-path@3.1.1':\n    resolution: {integrity: sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==}\n\n  '@types/d3-scale@4.0.9':\n    resolution: {integrity: sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==}\n\n  '@types/d3-shape@3.1.7':\n    resolution: {integrity: sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==}\n\n  '@types/d3-time@3.0.4':\n    resolution: {integrity: sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==}\n\n  '@types/d3-timer@3.0.2':\n    resolution: {integrity: sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==}\n\n  '@types/node@22.0.0':\n    resolution: {integrity: sha512-VT7KSYudcPOzP5Q0wfbowyNLaVR8QWUdw+088uFWwfvpY6uCWaXpqV6ieLAu9WBcnTa7H4Z5RLK8I5t2FuOcqw==}\n\n  '@types/react-dom@19.0.0':\n    resolution: {integrity: sha512-1KfiQKsH1o00p9m5ag12axHQSb3FOU9H20UTrujVSkNhuCrRHiQWFqgEnTNK5ZNfnzZv8UWrnXVqCmCF9fgY3w==}\n\n  '@types/react@19.0.0':\n    resolution: {integrity: sha512-MY3oPudxvMYyesqs/kW1Bh8y9VqSmf+tzqw3ae8a9DZW68pUe3zAdHeI1jc6iAysuRdACnVknHP8AhwD4/dxtg==}\n\n  ansi-regex@5.0.1:\n    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}\n    engines: {node: '>=8'}\n\n  ansi-regex@6.1.0:\n    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}\n    engines: {node: '>=12'}\n\n  ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n\n  ansi-styles@6.2.1:\n    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}\n    engines: {node: '>=12'}\n\n  any-promise@1.3.0:\n    resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}\n\n  anymatch@3.1.3:\n    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}\n    engines: {node: '>= 8'}\n\n  arg@5.0.2:\n    resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}\n\n  aria-hidden@1.2.6:\n    resolution: {integrity: sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==}\n    engines: {node: '>=10'}\n\n  autoprefixer@10.4.20:\n    resolution: {integrity: sha512-XY25y5xSv/wEoqzDyXXME4AFfkZI0P23z6Fs3YgymDnKJkCGOnkL0iTxCa85UTqaSgfcqyf3UA6+c7wUvx/16g==}\n    engines: {node: ^10 || ^12 || >=14}\n    hasBin: true\n    peerDependencies:\n      postcss: ^8.1.0\n\n  balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n\n  binary-extensions@2.3.0:\n    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}\n    engines: {node: '>=8'}\n\n  brace-expansion@2.0.2:\n    resolution: {integrity: sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  browserslist@4.25.0:\n    resolution: {integrity: sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==}\n    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n    hasBin: true\n\n  busboy@1.6.0:\n    resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}\n    engines: {node: '>=10.16.0'}\n\n  camelcase-css@2.0.1:\n    resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}\n    engines: {node: '>= 6'}\n\n  caniuse-lite@1.0.30001723:\n    resolution: {integrity: sha512-1R/elMjtehrFejxwmexeXAtae5UO9iSyFn6G/I806CYC/BLyyBk1EPhrKBkWhy6wM6Xnm47dSJQec+tLJ39WHw==}\n\n  chokidar@3.6.0:\n    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}\n    engines: {node: '>= 8.10.0'}\n\n  class-variance-authority@0.7.1:\n    resolution: {integrity: sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==}\n\n  client-only@0.0.1:\n    resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}\n\n  clsx@2.1.1:\n    resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}\n    engines: {node: '>=6'}\n\n  cmdk@1.0.4:\n    resolution: {integrity: sha512-AnsjfHyHpQ/EFeAnG216WY7A5LiYCoZzCSygiLvfXC3H3LFGCprErteUcszaVluGOhuOTbJS3jWHrSDYPBBygg==}\n    peerDependencies:\n      react: ^18 || ^19 || ^19.0.0-rc\n      react-dom: ^18 || ^19 || ^19.0.0-rc\n\n  color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n\n  color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n\n  color-string@1.9.1:\n    resolution: {integrity: sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==}\n\n  color@4.2.3:\n    resolution: {integrity: sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==}\n    engines: {node: '>=12.5.0'}\n\n  commander@4.1.1:\n    resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}\n    engines: {node: '>= 6'}\n\n  cross-spawn@7.0.6:\n    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n    engines: {node: '>= 8'}\n\n  cssesc@3.0.0:\n    resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}\n    engines: {node: '>=4'}\n    hasBin: true\n\n  csstype@3.1.3:\n    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}\n\n  d3-array@3.2.4:\n    resolution: {integrity: sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==}\n    engines: {node: '>=12'}\n\n  d3-color@3.1.0:\n    resolution: {integrity: sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==}\n    engines: {node: '>=12'}\n\n  d3-ease@3.0.1:\n    resolution: {integrity: sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==}\n    engines: {node: '>=12'}\n\n  d3-format@3.1.0:\n    resolution: {integrity: sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==}\n    engines: {node: '>=12'}\n\n  d3-interpolate@3.0.1:\n    resolution: {integrity: sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==}\n    engines: {node: '>=12'}\n\n  d3-path@3.1.0:\n    resolution: {integrity: sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==}\n    engines: {node: '>=12'}\n\n  d3-scale@4.0.2:\n    resolution: {integrity: sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==}\n    engines: {node: '>=12'}\n\n  d3-shape@3.2.0:\n    resolution: {integrity: sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==}\n    engines: {node: '>=12'}\n\n  d3-time-format@4.1.0:\n    resolution: {integrity: sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==}\n    engines: {node: '>=12'}\n\n  d3-time@3.1.0:\n    resolution: {integrity: sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==}\n    engines: {node: '>=12'}\n\n  d3-timer@3.0.1:\n    resolution: {integrity: sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==}\n    engines: {node: '>=12'}\n\n  date-fns-jalali@4.1.0-0:\n    resolution: {integrity: sha512-hTIP/z+t+qKwBDcmmsnmjWTduxCg+5KfdqWQvb2X/8C9+knYY6epN/pfxdDuyVlSVeFz0sM5eEfwIUQ70U4ckg==}\n\n  date-fns@4.1.0:\n    resolution: {integrity: sha512-Ukq0owbQXxa/U3EGtsdVBkR1w7KOQ5gIBqdH2hkvknzZPYvBxb/aa6E8L7tmjFtkwZBu3UXBbjIgPo/Ez4xaNg==}\n\n  decimal.js-light@2.5.1:\n    resolution: {integrity: sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==}\n\n  detect-libc@2.0.4:\n    resolution: {integrity: sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==}\n    engines: {node: '>=8'}\n\n  detect-node-es@1.1.0:\n    resolution: {integrity: sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==}\n\n  didyoumean@1.2.2:\n    resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}\n\n  dlv@1.1.3:\n    resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}\n\n  dom-helpers@5.2.1:\n    resolution: {integrity: sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==}\n\n  eastasianwidth@0.2.0:\n    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n\n  electron-to-chromium@1.5.168:\n    resolution: {integrity: sha512-RUNQmFLNIWVW6+z32EJQ5+qx8ci6RGvdtDC0Ls+F89wz6I2AthpXF0w0DIrn2jpLX0/PU9ZCo+Qp7bg/EckJmA==}\n\n  embla-carousel-react@8.5.1:\n    resolution: {integrity: sha512-z9Y0K84BJvhChXgqn2CFYbfEi6AwEr+FFVVKm/MqbTQ2zIzO1VQri6w67LcfpVF0AjbhwVMywDZqY4alYkjW5w==}\n    peerDependencies:\n      react: ^16.8.0 || ^17.0.1 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n\n  embla-carousel-reactive-utils@8.5.1:\n    resolution: {integrity: sha512-n7VSoGIiiDIc4MfXF3ZRTO59KDp820QDuyBDGlt5/65+lumPHxX2JLz0EZ23hZ4eg4vZGUXwMkYv02fw2JVo/A==}\n    peerDependencies:\n      embla-carousel: 8.5.1\n\n  embla-carousel@8.5.1:\n    resolution: {integrity: sha512-JUb5+FOHobSiWQ2EJNaueCNT/cQU9L6XWBbWmorWPQT9bkbk+fhsuLr8wWrzXKagO3oWszBO7MSx+GfaRk4E6A==}\n\n  emoji-regex@8.0.0:\n    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}\n\n  emoji-regex@9.2.2:\n    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}\n\n  escalade@3.2.0:\n    resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}\n    engines: {node: '>=6'}\n\n  eventemitter3@4.0.7:\n    resolution: {integrity: sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==}\n\n  fast-equals@5.2.2:\n    resolution: {integrity: sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==}\n    engines: {node: '>=6.0.0'}\n\n  fast-glob@3.3.3:\n    resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}\n    engines: {node: '>=8.6.0'}\n\n  fastq@1.19.1:\n    resolution: {integrity: sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==}\n\n  fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n\n  foreground-child@3.3.1:\n    resolution: {integrity: sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==}\n    engines: {node: '>=14'}\n\n  fraction.js@4.3.7:\n    resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}\n\n  fsevents@2.3.3:\n    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}\n    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}\n    os: [darwin]\n\n  function-bind@1.1.2:\n    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}\n\n  geist@1.3.1:\n    resolution: {integrity: sha512-Q4gC1pBVPN+D579pBaz0TRRnGA4p9UK6elDY/xizXdFk/g4EKR5g0I+4p/Kj6gM0SajDBZ/0FvDV9ey9ud7BWw==}\n    peerDependencies:\n      next: '>=13.2.0'\n\n  get-nonce@1.0.1:\n    resolution: {integrity: sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==}\n    engines: {node: '>=6'}\n\n  glob-parent@5.1.2:\n    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n    engines: {node: '>= 6'}\n\n  glob-parent@6.0.2:\n    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}\n    engines: {node: '>=10.13.0'}\n\n  glob@10.4.5:\n    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}\n    hasBin: true\n\n  hasown@2.0.2:\n    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}\n    engines: {node: '>= 0.4'}\n\n  input-otp@1.4.1:\n    resolution: {integrity: sha512-+yvpmKYKHi9jIGngxagY9oWiiblPB7+nEO75F2l2o4vs+6vpPZZmUl4tBNYuTCvQjhvEIbdNeJu70bhfYP2nbw==}\n    peerDependencies:\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc\n\n  internmap@2.0.3:\n    resolution: {integrity: sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==}\n    engines: {node: '>=12'}\n\n  is-arrayish@0.3.2:\n    resolution: {integrity: sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==}\n\n  is-binary-path@2.1.0:\n    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}\n    engines: {node: '>=8'}\n\n  is-core-module@2.16.1:\n    resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}\n    engines: {node: '>= 0.4'}\n\n  is-extglob@2.1.1:\n    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}\n    engines: {node: '>=0.10.0'}\n\n  is-fullwidth-code-point@3.0.0:\n    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}\n    engines: {node: '>=8'}\n\n  is-glob@4.0.3:\n    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n    engines: {node: '>=0.10.0'}\n\n  is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n\n  isexe@2.0.0:\n    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}\n\n  jackspeak@3.4.3:\n    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}\n\n  jiti@1.21.7:\n    resolution: {integrity: sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==}\n    hasBin: true\n\n  js-tokens@4.0.0:\n    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}\n\n  lilconfig@3.1.3:\n    resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}\n    engines: {node: '>=14'}\n\n  lines-and-columns@1.2.4:\n    resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}\n\n  lodash@4.17.21:\n    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}\n\n  loose-envify@1.4.0:\n    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}\n    hasBin: true\n\n  lru-cache@10.4.3:\n    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}\n\n  lucide-react@0.454.0:\n    resolution: {integrity: sha512-hw7zMDwykCLnEzgncEEjHeA6+45aeEzRYuKHuyRSOPkhko+J3ySGjGIzu+mmMfDFG1vazHepMaYFYHbTFAZAAQ==}\n    peerDependencies:\n      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n\n  merge2@1.4.1:\n    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}\n    engines: {node: '>= 8'}\n\n  micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n\n  minimatch@9.0.5:\n    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  minipass@7.1.2:\n    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  mz@2.7.0:\n    resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}\n\n  nanoid@3.3.11:\n    resolution: {integrity: sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==}\n    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n    hasBin: true\n\n  next-themes@0.4.4:\n    resolution: {integrity: sha512-LDQ2qIOJF0VnuVrrMSMLrWGjRMkq+0mpgl6e0juCLqdJ+oo8Q84JRWT6Wh11VDQKkMMe+dVzDKLWs5n87T+PkQ==}\n    peerDependencies:\n      react: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n\n  next@15.2.4:\n    resolution: {integrity: sha512-VwL+LAaPSxEkd3lU2xWbgEOtrM8oedmyhBqaVNmgKB+GvZlCy9rgaEc+y2on0wv+l0oSFqLtYD6dcC1eAedUaQ==}\n    engines: {node: ^18.18.0 || ^19.8.0 || >= 20.0.0}\n    hasBin: true\n    peerDependencies:\n      '@opentelemetry/api': ^1.1.0\n      '@playwright/test': ^1.41.2\n      babel-plugin-react-compiler: '*'\n      react: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0\n      react-dom: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0\n      sass: ^1.3.0\n    peerDependenciesMeta:\n      '@opentelemetry/api':\n        optional: true\n      '@playwright/test':\n        optional: true\n      babel-plugin-react-compiler:\n        optional: true\n      sass:\n        optional: true\n\n  node-releases@2.0.19:\n    resolution: {integrity: sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==}\n\n  normalize-path@3.0.0:\n    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}\n    engines: {node: '>=0.10.0'}\n\n  normalize-range@0.1.2:\n    resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n    engines: {node: '>=0.10.0'}\n\n  object-assign@4.1.1:\n    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}\n    engines: {node: '>=0.10.0'}\n\n  object-hash@3.0.0:\n    resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}\n    engines: {node: '>= 6'}\n\n  package-json-from-dist@1.0.1:\n    resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}\n\n  path-key@3.1.1:\n    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}\n    engines: {node: '>=8'}\n\n  path-parse@1.0.7:\n    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}\n\n  path-scurry@1.11.1:\n    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}\n    engines: {node: '>=16 || 14 >=14.18'}\n\n  picocolors@1.1.1:\n    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}\n\n  picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n\n  pify@2.3.0:\n    resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}\n    engines: {node: '>=0.10.0'}\n\n  pirates@4.0.7:\n    resolution: {integrity: sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==}\n    engines: {node: '>= 6'}\n\n  postcss-import@15.1.0:\n    resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}\n    engines: {node: '>=14.0.0'}\n    peerDependencies:\n      postcss: ^8.0.0\n\n  postcss-js@4.0.1:\n    resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}\n    engines: {node: ^12 || ^14 || >= 16}\n    peerDependencies:\n      postcss: ^8.4.21\n\n  postcss-load-config@4.0.2:\n    resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}\n    engines: {node: '>= 14'}\n    peerDependencies:\n      postcss: '>=8.0.9'\n      ts-node: '>=9.0.0'\n    peerDependenciesMeta:\n      postcss:\n        optional: true\n      ts-node:\n        optional: true\n\n  postcss-nested@6.2.0:\n    resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}\n    engines: {node: '>=12.0'}\n    peerDependencies:\n      postcss: ^8.2.14\n\n  postcss-selector-parser@6.1.2:\n    resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}\n    engines: {node: '>=4'}\n\n  postcss-value-parser@4.2.0:\n    resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}\n\n  postcss@8.4.31:\n    resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  postcss@8.5.0:\n    resolution: {integrity: sha512-27VKOqrYfPncKA2NrFOVhP5MGAfHKLYn/Q0mz9cNQyRAKYi3VNHwYU2qKKqPCqgBmeeJ0uAFB56NumXZ5ZReXg==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  prop-types@15.8.1:\n    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}\n\n  queue-microtask@1.2.3:\n    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n\n  react-day-picker@9.8.0:\n    resolution: {integrity: sha512-E0yhhg7R+pdgbl/2toTb0xBhsEAtmAx1l7qjIWYfcxOy8w4rTSVfbtBoSzVVhPwKP/5E9iL38LivzoE3AQDhCQ==}\n    engines: {node: '>=18'}\n    peerDependencies:\n      react: '>=16.8.0'\n\n  react-dom@19.0.0:\n    resolution: {integrity: sha512-4GV5sHFG0e/0AD4X+ySy6UJd3jVl1iNsNHdpad0qhABJ11twS3TTBnseqsKurKcsNqCEFeGL3uLpVChpIO3QfQ==}\n    peerDependencies:\n      react: ^19.0.0\n\n  react-hook-form@7.54.1:\n    resolution: {integrity: sha512-PUNzFwQeQ5oHiiTUO7GO/EJXGEtuun2Y1A59rLnZBBj+vNEOWt/3ERTiG1/zt7dVeJEM+4vDX/7XQ/qanuvPMg==}\n    engines: {node: '>=18.0.0'}\n    peerDependencies:\n      react: ^16.8.0 || ^17 || ^18 || ^19\n\n  react-is@16.13.1:\n    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}\n\n  react-is@18.3.1:\n    resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}\n\n  react-remove-scroll-bar@2.3.8:\n    resolution: {integrity: sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-remove-scroll@2.7.1:\n    resolution: {integrity: sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-resizable-panels@2.1.7:\n    resolution: {integrity: sha512-JtT6gI+nURzhMYQYsx8DKkx6bSoOGFp7A3CwMrOb8y5jFHFyqwo9m68UhmXRw57fRVJksFn1TSlm3ywEQ9vMgA==}\n    peerDependencies:\n      react: ^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n      react-dom: ^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n\n  react-smooth@4.0.4:\n    resolution: {integrity: sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==}\n    peerDependencies:\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  react-style-singleton@2.2.3:\n    resolution: {integrity: sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-transition-group@4.4.5:\n    resolution: {integrity: sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==}\n    peerDependencies:\n      react: '>=16.6.0'\n      react-dom: '>=16.6.0'\n\n  react@19.0.0:\n    resolution: {integrity: sha512-V8AVnmPIICiWpGfm6GLzCR/W5FXLchHop40W4nXBmdlEceh16rCN8O8LNWm5bh5XUX91fh7KpA+W0TgMKmgTpQ==}\n    engines: {node: '>=0.10.0'}\n\n  read-cache@1.0.0:\n    resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}\n\n  readdirp@3.6.0:\n    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}\n    engines: {node: '>=8.10.0'}\n\n  recharts-scale@0.4.5:\n    resolution: {integrity: sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==}\n\n  recharts@2.15.0:\n    resolution: {integrity: sha512-cIvMxDfpAmqAmVgc4yb7pgm/O1tmmkl/CjrvXuW+62/+7jj/iF9Ykm+hb/UJt42TREHMyd3gb+pkgoa2MxgDIw==}\n    engines: {node: '>=14'}\n    peerDependencies:\n      react: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n      react-dom: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  resolve@1.22.10:\n    resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}\n    engines: {node: '>= 0.4'}\n    hasBin: true\n\n  reusify@1.1.0:\n    resolution: {integrity: sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==}\n    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}\n\n  run-parallel@1.2.0:\n    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n\n  scheduler@0.25.0:\n    resolution: {integrity: sha512-xFVuu11jh+xcO7JOAGJNOXld8/TcEHK/4CituBUeUb5hqxJLj9YuemAEuvm9gQ/+pgXYfbQuqAkiYu+u7YEsNA==}\n\n  semver@7.7.2:\n    resolution: {integrity: sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  sharp@0.33.5:\n    resolution: {integrity: sha512-haPVm1EkS9pgvHrQ/F3Xy+hgcuMV0Wm9vfIBSiwZ05k+xgb0PkBQpGsAA/oWdDobNaZTH5ppvHtzCFbnSEwHVw==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n\n  shebang-command@2.0.0:\n    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}\n    engines: {node: '>=8'}\n\n  shebang-regex@3.0.0:\n    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}\n    engines: {node: '>=8'}\n\n  signal-exit@4.1.0:\n    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}\n    engines: {node: '>=14'}\n\n  simple-swizzle@0.2.2:\n    resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n\n  sonner@1.7.1:\n    resolution: {integrity: sha512-b6LHBfH32SoVasRFECrdY8p8s7hXPDn3OHUFbZZbiB1ctLS9Gdh6rpX2dVrpQA0kiL5jcRzDDldwwLkSKk3+QQ==}\n    peerDependencies:\n      react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n      react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n\n  source-map-js@1.2.1:\n    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}\n    engines: {node: '>=0.10.0'}\n\n  streamsearch@1.1.0:\n    resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}\n    engines: {node: '>=10.0.0'}\n\n  string-width@4.2.3:\n    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}\n    engines: {node: '>=8'}\n\n  string-width@5.1.2:\n    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}\n    engines: {node: '>=12'}\n\n  strip-ansi@6.0.1:\n    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}\n    engines: {node: '>=8'}\n\n  strip-ansi@7.1.0:\n    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}\n    engines: {node: '>=12'}\n\n  styled-jsx@5.1.6:\n    resolution: {integrity: sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==}\n    engines: {node: '>= 12.0.0'}\n    peerDependencies:\n      '@babel/core': '*'\n      babel-plugin-macros: '*'\n      react: '>= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0'\n    peerDependenciesMeta:\n      '@babel/core':\n        optional: true\n      babel-plugin-macros:\n        optional: true\n\n  sucrase@3.35.0:\n    resolution: {integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==}\n    engines: {node: '>=16 || 14 >=14.17'}\n    hasBin: true\n\n  supports-preserve-symlinks-flag@1.0.0:\n    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n    engines: {node: '>= 0.4'}\n\n  tailwind-merge@2.5.5:\n    resolution: {integrity: sha512-0LXunzzAZzo0tEPxV3I297ffKZPlKDrjj7NXphC8V5ak9yHC5zRmxnOe2m/Rd/7ivsOMJe3JZ2JVocoDdQTRBA==}\n\n  tailwindcss-animate@1.0.7:\n    resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n    peerDependencies:\n      tailwindcss: '>=3.0.0 || insiders'\n\n  tailwindcss@3.4.17:\n    resolution: {integrity: sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==}\n    engines: {node: '>=14.0.0'}\n    hasBin: true\n\n  thenify-all@1.6.0:\n    resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}\n    engines: {node: '>=0.8'}\n\n  thenify@3.3.1:\n    resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}\n\n  tiny-invariant@1.3.3:\n    resolution: {integrity: sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==}\n\n  to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n\n  ts-interface-checker@0.1.13:\n    resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}\n\n  tslib@2.8.1:\n    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}\n\n  typescript@5.0.2:\n    resolution: {integrity: sha512-wVORMBGO/FAs/++blGNeAVdbNKtIh1rbBL2EyQ1+J9lClJ93KiiKe8PmFIVdXhHcyv44SL9oglmfeSsndo0jRw==}\n    engines: {node: '>=12.20'}\n    hasBin: true\n\n  undici-types@6.11.1:\n    resolution: {integrity: sha512-mIDEX2ek50x0OlRgxryxsenE5XaQD4on5U2inY7RApK3SOJpofyw7uW2AyfMKkhAxXIceo2DeWGVGwyvng1GNQ==}\n\n  update-browserslist-db@1.1.3:\n    resolution: {integrity: sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==}\n    hasBin: true\n    peerDependencies:\n      browserslist: '>= 4.21.0'\n\n  use-callback-ref@1.3.3:\n    resolution: {integrity: sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  use-sidecar@1.1.3:\n    resolution: {integrity: sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  use-sync-external-store@1.5.0:\n    resolution: {integrity: sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==}\n    peerDependencies:\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  util-deprecate@1.0.2:\n    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n\n  vaul@0.9.6:\n    resolution: {integrity: sha512-Ykk5FSu4ibeD6qfKQH/CkBRdSGWkxi35KMNei0z59kTPAlgzpE/Qf1gTx2sxih8Q05KBO/aFhcF/UkBW5iI1Ww==}\n    peerDependencies:\n      react: ^16.8 || ^17.0 || ^18.0\n      react-dom: ^16.8 || ^17.0 || ^18.0\n\n  victory-vendor@36.9.2:\n    resolution: {integrity: sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==}\n\n  which@2.0.2:\n    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}\n    engines: {node: '>= 8'}\n    hasBin: true\n\n  wrap-ansi@7.0.0:\n    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}\n    engines: {node: '>=10'}\n\n  wrap-ansi@8.1.0:\n    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}\n    engines: {node: '>=12'}\n\n  yaml@2.8.0:\n    resolution: {integrity: sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==}\n    engines: {node: '>= 14.6'}\n    hasBin: true\n\n  zod@3.24.1:\n    resolution: {integrity: sha512-muH7gBL9sI1nciMZV67X5fTKKBLtwpZ5VBp1vsOQzj1MhrBZ4wlVCm3gedKZWLp0Oyel8sIGfeiz54Su+OVT+A==}\n\nsnapshots:\n\n  '@alloc/quick-lru@5.2.0': {}\n\n  '@babel/runtime@7.27.6': {}\n\n  '@date-fns/tz@1.2.0': {}\n\n  '@emnapi/runtime@1.4.3':\n    dependencies:\n      tslib: 2.8.1\n    optional: true\n\n  '@floating-ui/core@1.7.1':\n    dependencies:\n      '@floating-ui/utils': 0.2.9\n\n  '@floating-ui/dom@1.7.1':\n    dependencies:\n      '@floating-ui/core': 1.7.1\n      '@floating-ui/utils': 0.2.9\n\n  '@floating-ui/react-dom@2.1.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@floating-ui/dom': 1.7.1\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  '@floating-ui/utils@0.2.9': {}\n\n  '@hookform/resolvers@3.9.1(react-hook-form@7.54.1(react@19.0.0))':\n    dependencies:\n      react-hook-form: 7.54.1(react@19.0.0)\n\n  '@img/sharp-darwin-arm64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-darwin-arm64': 1.0.4\n    optional: true\n\n  '@img/sharp-darwin-x64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-darwin-x64': 1.0.4\n    optional: true\n\n  '@img/sharp-libvips-darwin-arm64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-darwin-x64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linux-arm64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linux-arm@1.0.5':\n    optional: true\n\n  '@img/sharp-libvips-linux-s390x@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linux-x64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linuxmusl-arm64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linuxmusl-x64@1.0.4':\n    optional: true\n\n  '@img/sharp-linux-arm64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-arm64': 1.0.4\n    optional: true\n\n  '@img/sharp-linux-arm@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-arm': 1.0.5\n    optional: true\n\n  '@img/sharp-linux-s390x@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-s390x': 1.0.4\n    optional: true\n\n  '@img/sharp-linux-x64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-x64': 1.0.4\n    optional: true\n\n  '@img/sharp-linuxmusl-arm64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linuxmusl-arm64': 1.0.4\n    optional: true\n\n  '@img/sharp-linuxmusl-x64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linuxmusl-x64': 1.0.4\n    optional: true\n\n  '@img/sharp-wasm32@0.33.5':\n    dependencies:\n      '@emnapi/runtime': 1.4.3\n    optional: true\n\n  '@img/sharp-win32-ia32@0.33.5':\n    optional: true\n\n  '@img/sharp-win32-x64@0.33.5':\n    optional: true\n\n  '@isaacs/cliui@8.0.2':\n    dependencies:\n      string-width: 5.1.2\n      string-width-cjs: string-width@4.2.3\n      strip-ansi: 7.1.0\n      strip-ansi-cjs: strip-ansi@6.0.1\n      wrap-ansi: 8.1.0\n      wrap-ansi-cjs: wrap-ansi@7.0.0\n\n  '@jridgewell/gen-mapping@0.3.8':\n    dependencies:\n      '@jridgewell/set-array': 1.2.1\n      '@jridgewell/sourcemap-codec': 1.5.0\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@jridgewell/resolve-uri@3.1.2': {}\n\n  '@jridgewell/set-array@1.2.1': {}\n\n  '@jridgewell/sourcemap-codec@1.5.0': {}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    dependencies:\n      '@jridgewell/resolve-uri': 3.1.2\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  '@next/env@15.2.4': {}\n\n  '@next/swc-darwin-arm64@15.2.4':\n    optional: true\n\n  '@next/swc-darwin-x64@15.2.4':\n    optional: true\n\n  '@next/swc-linux-arm64-gnu@15.2.4':\n    optional: true\n\n  '@next/swc-linux-arm64-musl@15.2.4':\n    optional: true\n\n  '@next/swc-linux-x64-gnu@15.2.4':\n    optional: true\n\n  '@next/swc-linux-x64-musl@15.2.4':\n    optional: true\n\n  '@next/swc-win32-arm64-msvc@15.2.4':\n    optional: true\n\n  '@next/swc-win32-x64-msvc@15.2.4':\n    optional: true\n\n  '@nodelib/fs.scandir@2.1.5':\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      run-parallel: 1.2.0\n\n  '@nodelib/fs.stat@2.0.5': {}\n\n  '@nodelib/fs.walk@1.2.8':\n    dependencies:\n      '@nodelib/fs.scandir': 2.1.5\n      fastq: 1.19.1\n\n  '@pkgjs/parseargs@0.11.0':\n    optional: true\n\n  '@radix-ui/number@1.1.0': {}\n\n  '@radix-ui/primitive@1.1.1': {}\n\n  '@radix-ui/react-accordion@1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collapsible': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-alert-dialog@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dialog': 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-arrow@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-aspect-ratio@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-avatar@1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-checkbox@1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-collapsible@1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-collection@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-compose-refs@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-compose-refs@1.1.2(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-context-menu@2.2.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-menu': 2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-context@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-dialog@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      aria-hidden: 1.2.6\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-remove-scroll: 2.7.1(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-direction@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-dismissable-layer@1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-escape-keydown': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-dropdown-menu@2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-menu': 2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-focus-guards@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-focus-scope@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-hover-card@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-id@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-id@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-label@2.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-menu@2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      aria-hidden: 1.2.6\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-remove-scroll: 2.7.1(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-menubar@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-menu': 2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-navigation-menu@1.2.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-popover@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      aria-hidden: 1.2.6\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-remove-scroll: 2.7.1(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-popper@1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@floating-ui/react-dom': 2.1.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-arrow': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-rect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/rect': 1.1.0\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-portal@1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-presence@1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-primitive@2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-primitive@2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-progress@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-radio-group@1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-roving-focus@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-scroll-area@1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.0\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-select@2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.0\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      aria-hidden: 1.2.6\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-remove-scroll: 2.7.1(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-separator@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-slider@1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.0\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-slot@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-slot@1.2.3(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-switch@1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-tabs@1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-toast@1.2.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-toggle-group@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-toggle': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-toggle@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-tooltip@1.1.6(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-use-callback-ref@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-controllable-state@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-escape-keydown@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-layout-effect@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-layout-effect@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-previous@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-rect@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/rect': 1.1.0\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-size@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-visually-hidden@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/rect@1.1.0': {}\n\n  '@swc/counter@0.1.3': {}\n\n  '@swc/helpers@0.5.15':\n    dependencies:\n      tslib: 2.8.1\n\n  '@types/d3-array@3.2.1': {}\n\n  '@types/d3-color@3.1.3': {}\n\n  '@types/d3-ease@3.0.2': {}\n\n  '@types/d3-interpolate@3.0.4':\n    dependencies:\n      '@types/d3-color': 3.1.3\n\n  '@types/d3-path@3.1.1': {}\n\n  '@types/d3-scale@4.0.9':\n    dependencies:\n      '@types/d3-time': 3.0.4\n\n  '@types/d3-shape@3.1.7':\n    dependencies:\n      '@types/d3-path': 3.1.1\n\n  '@types/d3-time@3.0.4': {}\n\n  '@types/d3-timer@3.0.2': {}\n\n  '@types/node@22.0.0':\n    dependencies:\n      undici-types: 6.11.1\n\n  '@types/react-dom@19.0.0':\n    dependencies:\n      '@types/react': 19.0.0\n\n  '@types/react@19.0.0':\n    dependencies:\n      csstype: 3.1.3\n\n  ansi-regex@5.0.1: {}\n\n  ansi-regex@6.1.0: {}\n\n  ansi-styles@4.3.0:\n    dependencies:\n      color-convert: 2.0.1\n\n  ansi-styles@6.2.1: {}\n\n  any-promise@1.3.0: {}\n\n  anymatch@3.1.3:\n    dependencies:\n      normalize-path: 3.0.0\n      picomatch: 2.3.1\n\n  arg@5.0.2: {}\n\n  aria-hidden@1.2.6:\n    dependencies:\n      tslib: 2.8.1\n\n  autoprefixer@10.4.20(postcss@8.5.0):\n    dependencies:\n      browserslist: 4.25.0\n      caniuse-lite: 1.0.30001723\n      fraction.js: 4.3.7\n      normalize-range: 0.1.2\n      picocolors: 1.1.1\n      postcss: 8.5.0\n      postcss-value-parser: 4.2.0\n\n  balanced-match@1.0.2: {}\n\n  binary-extensions@2.3.0: {}\n\n  brace-expansion@2.0.2:\n    dependencies:\n      balanced-match: 1.0.2\n\n  braces@3.0.3:\n    dependencies:\n      fill-range: 7.1.1\n\n  browserslist@4.25.0:\n    dependencies:\n      caniuse-lite: 1.0.30001723\n      electron-to-chromium: 1.5.168\n      node-releases: 2.0.19\n      update-browserslist-db: 1.1.3(browserslist@4.25.0)\n\n  busboy@1.6.0:\n    dependencies:\n      streamsearch: 1.1.0\n\n  camelcase-css@2.0.1: {}\n\n  caniuse-lite@1.0.30001723: {}\n\n  chokidar@3.6.0:\n    dependencies:\n      anymatch: 3.1.3\n      braces: 3.0.3\n      glob-parent: 5.1.2\n      is-binary-path: 2.1.0\n      is-glob: 4.0.3\n      normalize-path: 3.0.0\n      readdirp: 3.6.0\n    optionalDependencies:\n      fsevents: 2.3.3\n\n  class-variance-authority@0.7.1:\n    dependencies:\n      clsx: 2.1.1\n\n  client-only@0.0.1: {}\n\n  clsx@2.1.1: {}\n\n  cmdk@1.0.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      '@radix-ui/react-dialog': 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      use-sync-external-store: 1.5.0(react@19.0.0)\n    transitivePeerDependencies:\n      - '@types/react'\n      - '@types/react-dom'\n\n  color-convert@2.0.1:\n    dependencies:\n      color-name: 1.1.4\n\n  color-name@1.1.4: {}\n\n  color-string@1.9.1:\n    dependencies:\n      color-name: 1.1.4\n      simple-swizzle: 0.2.2\n    optional: true\n\n  color@4.2.3:\n    dependencies:\n      color-convert: 2.0.1\n      color-string: 1.9.1\n    optional: true\n\n  commander@4.1.1: {}\n\n  cross-spawn@7.0.6:\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n\n  cssesc@3.0.0: {}\n\n  csstype@3.1.3: {}\n\n  d3-array@3.2.4:\n    dependencies:\n      internmap: 2.0.3\n\n  d3-color@3.1.0: {}\n\n  d3-ease@3.0.1: {}\n\n  d3-format@3.1.0: {}\n\n  d3-interpolate@3.0.1:\n    dependencies:\n      d3-color: 3.1.0\n\n  d3-path@3.1.0: {}\n\n  d3-scale@4.0.2:\n    dependencies:\n      d3-array: 3.2.4\n      d3-format: 3.1.0\n      d3-interpolate: 3.0.1\n      d3-time: 3.1.0\n      d3-time-format: 4.1.0\n\n  d3-shape@3.2.0:\n    dependencies:\n      d3-path: 3.1.0\n\n  d3-time-format@4.1.0:\n    dependencies:\n      d3-time: 3.1.0\n\n  d3-time@3.1.0:\n    dependencies:\n      d3-array: 3.2.4\n\n  d3-timer@3.0.1: {}\n\n  date-fns-jalali@4.1.0-0: {}\n\n  date-fns@4.1.0: {}\n\n  decimal.js-light@2.5.1: {}\n\n  detect-libc@2.0.4:\n    optional: true\n\n  detect-node-es@1.1.0: {}\n\n  didyoumean@1.2.2: {}\n\n  dlv@1.1.3: {}\n\n  dom-helpers@5.2.1:\n    dependencies:\n      '@babel/runtime': 7.27.6\n      csstype: 3.1.3\n\n  eastasianwidth@0.2.0: {}\n\n  electron-to-chromium@1.5.168: {}\n\n  embla-carousel-react@8.5.1(react@19.0.0):\n    dependencies:\n      embla-carousel: 8.5.1\n      embla-carousel-reactive-utils: 8.5.1(embla-carousel@8.5.1)\n      react: 19.0.0\n\n  embla-carousel-reactive-utils@8.5.1(embla-carousel@8.5.1):\n    dependencies:\n      embla-carousel: 8.5.1\n\n  embla-carousel@8.5.1: {}\n\n  emoji-regex@8.0.0: {}\n\n  emoji-regex@9.2.2: {}\n\n  escalade@3.2.0: {}\n\n  eventemitter3@4.0.7: {}\n\n  fast-equals@5.2.2: {}\n\n  fast-glob@3.3.3:\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      '@nodelib/fs.walk': 1.2.8\n      glob-parent: 5.1.2\n      merge2: 1.4.1\n      micromatch: 4.0.8\n\n  fastq@1.19.1:\n    dependencies:\n      reusify: 1.1.0\n\n  fill-range@7.1.1:\n    dependencies:\n      to-regex-range: 5.0.1\n\n  foreground-child@3.3.1:\n    dependencies:\n      cross-spawn: 7.0.6\n      signal-exit: 4.1.0\n\n  fraction.js@4.3.7: {}\n\n  fsevents@2.3.3:\n    optional: true\n\n  function-bind@1.1.2: {}\n\n  geist@1.3.1(next@15.2.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)):\n    dependencies:\n      next: 15.2.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n\n  get-nonce@1.0.1: {}\n\n  glob-parent@5.1.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob-parent@6.0.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob@10.4.5:\n    dependencies:\n      foreground-child: 3.3.1\n      jackspeak: 3.4.3\n      minimatch: 9.0.5\n      minipass: 7.1.2\n      package-json-from-dist: 1.0.1\n      path-scurry: 1.11.1\n\n  hasown@2.0.2:\n    dependencies:\n      function-bind: 1.1.2\n\n  input-otp@1.4.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  internmap@2.0.3: {}\n\n  is-arrayish@0.3.2:\n    optional: true\n\n  is-binary-path@2.1.0:\n    dependencies:\n      binary-extensions: 2.3.0\n\n  is-core-module@2.16.1:\n    dependencies:\n      hasown: 2.0.2\n\n  is-extglob@2.1.1: {}\n\n  is-fullwidth-code-point@3.0.0: {}\n\n  is-glob@4.0.3:\n    dependencies:\n      is-extglob: 2.1.1\n\n  is-number@7.0.0: {}\n\n  isexe@2.0.0: {}\n\n  jackspeak@3.4.3:\n    dependencies:\n      '@isaacs/cliui': 8.0.2\n    optionalDependencies:\n      '@pkgjs/parseargs': 0.11.0\n\n  jiti@1.21.7: {}\n\n  js-tokens@4.0.0: {}\n\n  lilconfig@3.1.3: {}\n\n  lines-and-columns@1.2.4: {}\n\n  lodash@4.17.21: {}\n\n  loose-envify@1.4.0:\n    dependencies:\n      js-tokens: 4.0.0\n\n  lru-cache@10.4.3: {}\n\n  lucide-react@0.454.0(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n\n  merge2@1.4.1: {}\n\n  micromatch@4.0.8:\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n\n  minimatch@9.0.5:\n    dependencies:\n      brace-expansion: 2.0.2\n\n  minipass@7.1.2: {}\n\n  mz@2.7.0:\n    dependencies:\n      any-promise: 1.3.0\n      object-assign: 4.1.1\n      thenify-all: 1.6.0\n\n  nanoid@3.3.11: {}\n\n  next-themes@0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  next@15.2.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      '@next/env': 15.2.4\n      '@swc/counter': 0.1.3\n      '@swc/helpers': 0.5.15\n      busboy: 1.6.0\n      caniuse-lite: 1.0.30001723\n      postcss: 8.4.31\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      styled-jsx: 5.1.6(react@19.0.0)\n    optionalDependencies:\n      '@next/swc-darwin-arm64': 15.2.4\n      '@next/swc-darwin-x64': 15.2.4\n      '@next/swc-linux-arm64-gnu': 15.2.4\n      '@next/swc-linux-arm64-musl': 15.2.4\n      '@next/swc-linux-x64-gnu': 15.2.4\n      '@next/swc-linux-x64-musl': 15.2.4\n      '@next/swc-win32-arm64-msvc': 15.2.4\n      '@next/swc-win32-x64-msvc': 15.2.4\n      sharp: 0.33.5\n    transitivePeerDependencies:\n      - '@babel/core'\n      - babel-plugin-macros\n\n  node-releases@2.0.19: {}\n\n  normalize-path@3.0.0: {}\n\n  normalize-range@0.1.2: {}\n\n  object-assign@4.1.1: {}\n\n  object-hash@3.0.0: {}\n\n  package-json-from-dist@1.0.1: {}\n\n  path-key@3.1.1: {}\n\n  path-parse@1.0.7: {}\n\n  path-scurry@1.11.1:\n    dependencies:\n      lru-cache: 10.4.3\n      minipass: 7.1.2\n\n  picocolors@1.1.1: {}\n\n  picomatch@2.3.1: {}\n\n  pify@2.3.0: {}\n\n  pirates@4.0.7: {}\n\n  postcss-import@15.1.0(postcss@8.5.0):\n    dependencies:\n      postcss: 8.5.0\n      postcss-value-parser: 4.2.0\n      read-cache: 1.0.0\n      resolve: 1.22.10\n\n  postcss-js@4.0.1(postcss@8.5.0):\n    dependencies:\n      camelcase-css: 2.0.1\n      postcss: 8.5.0\n\n  postcss-load-config@4.0.2(postcss@8.5.0):\n    dependencies:\n      lilconfig: 3.1.3\n      yaml: 2.8.0\n    optionalDependencies:\n      postcss: 8.5.0\n\n  postcss-nested@6.2.0(postcss@8.5.0):\n    dependencies:\n      postcss: 8.5.0\n      postcss-selector-parser: 6.1.2\n\n  postcss-selector-parser@6.1.2:\n    dependencies:\n      cssesc: 3.0.0\n      util-deprecate: 1.0.2\n\n  postcss-value-parser@4.2.0: {}\n\n  postcss@8.4.31:\n    dependencies:\n      nanoid: 3.3.11\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  postcss@8.5.0:\n    dependencies:\n      nanoid: 3.3.11\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  prop-types@15.8.1:\n    dependencies:\n      loose-envify: 1.4.0\n      object-assign: 4.1.1\n      react-is: 16.13.1\n\n  queue-microtask@1.2.3: {}\n\n  react-day-picker@9.8.0(react@19.0.0):\n    dependencies:\n      '@date-fns/tz': 1.2.0\n      date-fns: 4.1.0\n      date-fns-jalali: 4.1.0-0\n      react: 19.0.0\n\n  react-dom@19.0.0(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      scheduler: 0.25.0\n\n  react-hook-form@7.54.1(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n\n  react-is@16.13.1: {}\n\n  react-is@18.3.1: {}\n\n  react-remove-scroll-bar@2.3.8(@types/react@19.0.0)(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-style-singleton: 2.2.3(@types/react@19.0.0)(react@19.0.0)\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  react-remove-scroll@2.7.1(@types/react@19.0.0)(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-remove-scroll-bar: 2.3.8(@types/react@19.0.0)(react@19.0.0)\n      react-style-singleton: 2.2.3(@types/react@19.0.0)(react@19.0.0)\n      tslib: 2.8.1\n      use-callback-ref: 1.3.3(@types/react@19.0.0)(react@19.0.0)\n      use-sidecar: 1.1.3(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  react-resizable-panels@2.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  react-smooth@4.0.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      fast-equals: 5.2.2\n      prop-types: 15.8.1\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-transition-group: 4.4.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n\n  react-style-singleton@2.2.3(@types/react@19.0.0)(react@19.0.0):\n    dependencies:\n      get-nonce: 1.0.1\n      react: 19.0.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  react-transition-group@4.4.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      '@babel/runtime': 7.27.6\n      dom-helpers: 5.2.1\n      loose-envify: 1.4.0\n      prop-types: 15.8.1\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  react@19.0.0: {}\n\n  read-cache@1.0.0:\n    dependencies:\n      pify: 2.3.0\n\n  readdirp@3.6.0:\n    dependencies:\n      picomatch: 2.3.1\n\n  recharts-scale@0.4.5:\n    dependencies:\n      decimal.js-light: 2.5.1\n\n  recharts@2.15.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      clsx: 2.1.1\n      eventemitter3: 4.0.7\n      lodash: 4.17.21\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-is: 18.3.1\n      react-smooth: 4.0.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      recharts-scale: 0.4.5\n      tiny-invariant: 1.3.3\n      victory-vendor: 36.9.2\n\n  resolve@1.22.10:\n    dependencies:\n      is-core-module: 2.16.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  reusify@1.1.0: {}\n\n  run-parallel@1.2.0:\n    dependencies:\n      queue-microtask: 1.2.3\n\n  scheduler@0.25.0: {}\n\n  semver@7.7.2:\n    optional: true\n\n  sharp@0.33.5:\n    dependencies:\n      color: 4.2.3\n      detect-libc: 2.0.4\n      semver: 7.7.2\n    optionalDependencies:\n      '@img/sharp-darwin-arm64': 0.33.5\n      '@img/sharp-darwin-x64': 0.33.5\n      '@img/sharp-libvips-darwin-arm64': 1.0.4\n      '@img/sharp-libvips-darwin-x64': 1.0.4\n      '@img/sharp-libvips-linux-arm': 1.0.5\n      '@img/sharp-libvips-linux-arm64': 1.0.4\n      '@img/sharp-libvips-linux-s390x': 1.0.4\n      '@img/sharp-libvips-linux-x64': 1.0.4\n      '@img/sharp-libvips-linuxmusl-arm64': 1.0.4\n      '@img/sharp-libvips-linuxmusl-x64': 1.0.4\n      '@img/sharp-linux-arm': 0.33.5\n      '@img/sharp-linux-arm64': 0.33.5\n      '@img/sharp-linux-s390x': 0.33.5\n      '@img/sharp-linux-x64': 0.33.5\n      '@img/sharp-linuxmusl-arm64': 0.33.5\n      '@img/sharp-linuxmusl-x64': 0.33.5\n      '@img/sharp-wasm32': 0.33.5\n      '@img/sharp-win32-ia32': 0.33.5\n      '@img/sharp-win32-x64': 0.33.5\n    optional: true\n\n  shebang-command@2.0.0:\n    dependencies:\n      shebang-regex: 3.0.0\n\n  shebang-regex@3.0.0: {}\n\n  signal-exit@4.1.0: {}\n\n  simple-swizzle@0.2.2:\n    dependencies:\n      is-arrayish: 0.3.2\n    optional: true\n\n  sonner@1.7.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  source-map-js@1.2.1: {}\n\n  streamsearch@1.1.0: {}\n\n  string-width@4.2.3:\n    dependencies:\n      emoji-regex: 8.0.0\n      is-fullwidth-code-point: 3.0.0\n      strip-ansi: 6.0.1\n\n  string-width@5.1.2:\n    dependencies:\n      eastasianwidth: 0.2.0\n      emoji-regex: 9.2.2\n      strip-ansi: 7.1.0\n\n  strip-ansi@6.0.1:\n    dependencies:\n      ansi-regex: 5.0.1\n\n  strip-ansi@7.1.0:\n    dependencies:\n      ansi-regex: 6.1.0\n\n  styled-jsx@5.1.6(react@19.0.0):\n    dependencies:\n      client-only: 0.0.1\n      react: 19.0.0\n\n  sucrase@3.35.0:\n    dependencies:\n      '@jridgewell/gen-mapping': 0.3.8\n      commander: 4.1.1\n      glob: 10.4.5\n      lines-and-columns: 1.2.4\n      mz: 2.7.0\n      pirates: 4.0.7\n      ts-interface-checker: 0.1.13\n\n  supports-preserve-symlinks-flag@1.0.0: {}\n\n  tailwind-merge@2.5.5: {}\n\n  tailwindcss-animate@1.0.7(tailwindcss@3.4.17):\n    dependencies:\n      tailwindcss: 3.4.17\n\n  tailwindcss@3.4.17:\n    dependencies:\n      '@alloc/quick-lru': 5.2.0\n      arg: 5.0.2\n      chokidar: 3.6.0\n      didyoumean: 1.2.2\n      dlv: 1.1.3\n      fast-glob: 3.3.3\n      glob-parent: 6.0.2\n      is-glob: 4.0.3\n      jiti: 1.21.7\n      lilconfig: 3.1.3\n      micromatch: 4.0.8\n      normalize-path: 3.0.0\n      object-hash: 3.0.0\n      picocolors: 1.1.1\n      postcss: 8.5.0\n      postcss-import: 15.1.0(postcss@8.5.0)\n      postcss-js: 4.0.1(postcss@8.5.0)\n      postcss-load-config: 4.0.2(postcss@8.5.0)\n      postcss-nested: 6.2.0(postcss@8.5.0)\n      postcss-selector-parser: 6.1.2\n      resolve: 1.22.10\n      sucrase: 3.35.0\n    transitivePeerDependencies:\n      - ts-node\n\n  thenify-all@1.6.0:\n    dependencies:\n      thenify: 3.3.1\n\n  thenify@3.3.1:\n    dependencies:\n      any-promise: 1.3.0\n\n  tiny-invariant@1.3.3: {}\n\n  to-regex-range@5.0.1:\n    dependencies:\n      is-number: 7.0.0\n\n  ts-interface-checker@0.1.13: {}\n\n  tslib@2.8.1: {}\n\n  typescript@5.0.2: {}\n\n  undici-types@6.11.1: {}\n\n  update-browserslist-db@1.1.3(browserslist@4.25.0):\n    dependencies:\n      browserslist: 4.25.0\n      escalade: 3.2.0\n      picocolors: 1.1.1\n\n  use-callback-ref@1.3.3(@types/react@19.0.0)(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  use-sidecar@1.1.3(@types/react@19.0.0)(react@19.0.0):\n    dependencies:\n      detect-node-es: 1.1.0\n      react: 19.0.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  use-sync-external-store@1.5.0(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n\n  util-deprecate@1.0.2: {}\n\n  vaul@0.9.6(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      '@radix-ui/react-dialog': 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    transitivePeerDependencies:\n      - '@types/react'\n      - '@types/react-dom'\n\n  victory-vendor@36.9.2:\n    dependencies:\n      '@types/d3-array': 3.2.1\n      '@types/d3-ease': 3.0.2\n      '@types/d3-interpolate': 3.0.4\n      '@types/d3-scale': 4.0.9\n      '@types/d3-shape': 3.1.7\n      '@types/d3-time': 3.0.4\n      '@types/d3-timer': 3.0.2\n      d3-array: 3.2.4\n      d3-ease: 3.0.1\n      d3-interpolate: 3.0.1\n      d3-scale: 4.0.2\n      d3-shape: 3.2.0\n      d3-time: 3.1.0\n      d3-timer: 3.0.1\n\n  which@2.0.2:\n    dependencies:\n      isexe: 2.0.0\n\n  wrap-ansi@7.0.0:\n    dependencies:\n      ansi-styles: 4.3.0\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n\n  wrap-ansi@8.1.0:\n    dependencies:\n      ansi-styles: 6.2.1\n      string-width: 5.1.2\n      strip-ansi: 7.1.0\n\n  yaml@2.8.0: {}\n\n  zod@3.24.1: {}\n","size_bytes":138792},"attached_assets/tailwind.config_1754529389688.ts":{"content":"import type { Config } from \"tailwindcss\"\n\nconst config = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n    \"*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  prefix: \"\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        \"freedoc-blue\": {\n          DEFAULT: \"#0d6efd\",\n          light: \"#f0f7ff\",\n        },\n        \"freedoc-dark\": \"#212529\",\n        \"freedoc-secondary\": \"#6c757d\",\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config\n\nexport default config\n","size_bytes":2380},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/replitAuth.ts":{"content":"import * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nif (!process.env.REPLIT_DOMAINS) {\n  throw new Error(\"Environment variable REPLIT_DOMAINS not provided\");\n}\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET!,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  for (const domain of process.env\n    .REPLIT_DOMAINS!.split(\",\")) {\n    const strategy = new Strategy(\n      {\n        name: `replitauth:${domain}`,\n        config,\n        scope: \"openid email profile offline_access\",\n        callbackURL: `https://${domain}/api/callback`,\n      },\n      verify,\n    );\n    passport.use(strategy);\n  }\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      successReturnToOrRedirect: \"/\",\n      failureRedirect: \"/api/login\",\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    return next();\n  } catch (error) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n};\n","size_bytes":4221},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { setupAuth, isAuthenticated } from \"./replitAuth\";\nimport { emailService } from \"./services/emailService\";\nimport { pdfService } from \"./services/pdfService\";\nimport {\n  registrationSchema,\n  otpVerificationSchema,\n  prescriptionRequestSchema,\n  medicalCertificateRequestSchema,\n  mentalHealthRequestSchema,\n  telehealthRequestSchema,\n  pathologyRequestSchema,\n} from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Auth middleware\n  await setupAuth(app);\n\n  // Auth routes\n  app.get(\"/api/auth/user\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const user = await storage.getUser(userId);\n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      res.status(500).json({ message: \"Failed to fetch user\" });\n    }\n  });\n\n  // Registration and OTP routes\n  app.post(\"/api/auth/register\", async (req, res) => {\n    try {\n      const validatedData = registrationSchema.parse(req.body);\n\n      // Check if user already exists\n      const existingUser = await storage.getUserByEmail(validatedData.email);\n      if (existingUser) {\n        return res.status(409).json({ message: \"User already exists with this email\" });\n      }\n\n      // Generate OTP\n      const otp = Math.floor(100000 + Math.random() * 900000).toString();\n      const expiresAt = new Date(Date.now() + 10 * 60 * 1000); // 10 minutes\n\n      // Save OTP\n      await storage.createOtp({\n        email: validatedData.email,\n        otp,\n        expiresAt,\n        verified: false,\n      });\n\n      // Send OTP email\n      await emailService.sendOTP(validatedData.email, otp);\n\n      // Store registration data temporarily in session\n      (req as any).session.pendingRegistration = validatedData;\n\n      res.json({ message: \"OTP sent to email\", email: validatedData.email });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Validation error\", errors: error.errors });\n      }\n      console.error(\"Registration error:\", error);\n      res.status(500).json({ message: \"Registration failed\" });\n    }\n  });\n\n  app.post(\"/api/auth/verify-otp\", async (req, res) => {\n    try {\n      const { email, otp } = otpVerificationSchema.parse(req.body);\n\n      const isValid = await storage.verifyOtp(email, otp);\n      if (!isValid) {\n        return res.status(400).json({ message: \"Invalid or expired OTP\" });\n      }\n\n      // Get pending registration data\n      const pendingData = (req as any).session.pendingRegistration;\n      if (!pendingData || pendingData.email !== email) {\n        return res.status(400).json({ message: \"No pending registration found\" });\n      }\n\n      // Create user account\n      const user = await storage.upsertUser({\n        id: undefined, // Let database generate ID\n        email: pendingData.email,\n        firstName: pendingData.firstName,\n        lastName: pendingData.lastName,\n        dateOfBirth: pendingData.dateOfBirth,\n        medicareNumber: pendingData.medicareNumber,\n        phoneNumber: pendingData.phoneNumber,\n        role: \"patient\",\n        isEmailVerified: true,\n      });\n\n      // Clear pending registration\n      delete (req as any).session.pendingRegistration;\n\n      res.json({ message: \"Registration completed successfully\", userId: user.id });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Validation error\", errors: error.errors });\n      }\n      console.error(\"OTP verification error:\", error);\n      res.status(500).json({ message: \"OTP verification failed\" });\n    }\n  });\n\n  app.post(\"/api/auth/resend-otp\", async (req, res) => {\n    try {\n      const { email } = req.body;\n\n      // Generate new OTP\n      const otp = Math.floor(100000 + Math.random() * 900000).toString();\n      const expiresAt = new Date(Date.now() + 10 * 60 * 1000);\n\n      await storage.createOtp({\n        email,\n        otp,\n        expiresAt,\n        verified: false,\n      });\n\n      await emailService.sendOTP(email, otp);\n\n      res.json({ message: \"OTP resent successfully\" });\n    } catch (error) {\n      console.error(\"Resend OTP error:\", error);\n      res.status(500).json({ message: \"Failed to resend OTP\" });\n    }\n  });\n\n  // Doctor assignment algorithm - equal distribution\n  async function assignDoctorToConsultation(): Promise<string | null> {\n    const activeDoctors = await storage.getActiveDoctors();\n    if (activeDoctors.length === 0) return null;\n\n    // Find doctor with minimum workload\n    const doctorWithMinWorkload = activeDoctors.reduce((min, doctor) =>\n      (doctor.workloadCount || 0) < (min.workloadCount || 0) ? doctor : min\n    );\n\n    return doctorWithMinWorkload.id;\n  }\n\n  // Consultation routes\n  app.post(\"/api/consultations\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const { serviceType, formData } = req.body;\n\n      // Validate form data based on service type\n      let validatedData;\n      switch (serviceType) {\n        case \"prescription\":\n          validatedData = prescriptionRequestSchema.parse(formData);\n          break;\n        case \"medical_certificate\":\n          validatedData = medicalCertificateRequestSchema.parse(formData);\n          break;\n        case \"mental_health\":\n          validatedData = mentalHealthRequestSchema.parse(formData);\n          break;\n        case \"telehealth\":\n          validatedData = telehealthRequestSchema.parse(formData);\n          break;\n        case \"pathology\":\n          validatedData = pathologyRequestSchema.parse(formData);\n          break;\n        default:\n          return res.status(400).json({ message: \"Invalid service type\" });\n      }\n\n      // Create consultation\n      const consultation = await storage.createConsultation({\n        patientId: userId,\n        serviceType,\n        requestData: validatedData,\n        status: \"pending\",\n      });\n\n      // Assign doctor with equal distribution\n      const doctorId = await assignDoctorToConsultation();\n      if (doctorId) {\n        await storage.assignDoctorToConsultation(consultation.id, doctorId);\n      }\n\n      res.json({ message: \"Consultation request submitted successfully\", consultationId: consultation.id });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Validation error\", errors: error.errors });\n      }\n      console.error(\"Consultation creation error:\", error);\n      res.status(500).json({ message: \"Failed to create consultation\" });\n    }\n  });\n\n  app.get(\"/api/consultations/patient\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const consultations = await storage.getConsultationsByPatient(userId);\n      res.json(consultations);\n    } catch (error) {\n      console.error(\"Error fetching patient consultations:\", error);\n      res.status(500).json({ message: \"Failed to fetch consultations\" });\n    }\n  });\n\n  app.get(\"/api/consultations/doctor\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const doctor = await storage.getDoctorByUserId(userId);\n      if (!doctor) {\n        return res.status(403).json({ message: \"Access denied - not a doctor\" });\n      }\n\n      const consultations = await storage.getConsultationsByDoctor(doctor.id);\n      res.json(consultations);\n    } catch (error) {\n      console.error(\"Error fetching doctor consultations:\", error);\n      res.status(500).json({ message: \"Failed to fetch consultations\" });\n    }\n  });\n\n  app.get(\"/api/consultations/pending\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const doctor = await storage.getDoctorByUserId(userId);\n      if (!doctor) {\n        return res.status(403).json({ message: \"Access denied - not a doctor\" });\n      }\n\n      const consultations = await storage.getPendingConsultations();\n      // Filter consultations assigned to this doctor\n      const doctorConsultations = consultations.filter(c => c.doctorId === doctor.id);\n      res.json(doctorConsultations);\n    } catch (error) {\n      console.error(\"Error fetching pending consultations:\", error);\n      res.status(500).json({ message: \"Failed to fetch pending consultations\" });\n    }\n  });\n\n  app.patch(\"/api/consultations/:id/status\", isAuthenticated, async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const { status, doctorNotes } = req.body;\n      const userId = req.user.claims.sub;\n\n      // Verify doctor access\n      const doctor = await storage.getDoctorByUserId(userId);\n      if (!doctor) {\n        return res.status(403).json({ message: \"Access denied - not a doctor\" });\n      }\n\n      const consultation = await storage.getConsultationById(id);\n      if (!consultation || consultation.doctorId !== doctor.id) {\n        return res.status(404).json({ message: \"Consultation not found or access denied\" });\n      }\n\n      await storage.updateConsultationStatus(id, status, doctorNotes);\n\n      // If completed, handle document generation\n      if (status === \"completed\") {\n        const patient = await storage.getUser(consultation.patientId);\n        const doctorWithUser = await storage.getDoctorWithUserById(doctor.id);\n        \n        if (patient && doctorWithUser) {\n          // Generate documents based on service type\n          if (consultation.serviceType === \"prescription\") {\n            const prescData = consultation.requestData as any;\n            const prescription = await storage.createPrescription({\n              consultationId: id,\n              patientId: consultation.patientId,\n              doctorId: doctor.id,\n              medicationName: prescData.medication,\n              dosage: prescData.dosage,\n              quantity: \"30\", // Default quantity\n              repeats: 0,\n              instructions: prescData.reason,\n            });\n\n            // Generate PDF\n            const pdfPath = pdfService.generatePrescription({\n              patientName: `${patient.firstName} ${patient.lastName}`,\n              dateOfBirth: patient.dateOfBirth || \"\",\n              medicationName: prescData.medication,\n              dosage: prescData.dosage,\n              quantity: \"30\",\n              repeats: 0,\n              instructions: prescData.reason,\n              doctorName: `${doctorWithUser.user?.firstName || ''} ${doctorWithUser.user?.lastName || ''}`,\n              doctorLicense: doctorWithUser.licenseNumber,\n              issuedDate: new Date().toLocaleDateString(),\n            });\n\n            await storage.updatePrescriptionPdf(prescription.id, pdfPath);\n          } else if (consultation.serviceType === \"medical_certificate\") {\n            const certData = consultation.requestData as any;\n            const certificate = await storage.createMedicalCertificate({\n              consultationId: id,\n              patientId: consultation.patientId,\n              doctorId: doctor.id,\n              certificateType: certData.certificate_type,\n              dateFrom: new Date(certData.date_from),\n              dateTo: new Date(certData.date_to),\n              condition: certData.symptoms,\n            });\n\n            // Generate PDF\n            const pdfPath = pdfService.generateMedicalCertificate({\n              patientName: `${patient.firstName} ${patient.lastName}`,\n              dateOfBirth: patient.dateOfBirth || \"\",\n              certificateType: certData.certificate_type,\n              dateFrom: certData.date_from,\n              dateTo: certData.date_to,\n              condition: certData.symptoms,\n              doctorName: `${doctorWithUser.user?.firstName || ''} ${doctorWithUser.user?.lastName || ''}`,\n              doctorLicense: doctorWithUser.licenseNumber,\n              issuedDate: new Date().toLocaleDateString(),\n            });\n\n            await storage.updateMedicalCertificatePdf(certificate.id, pdfPath);\n          }\n\n          // Send notification email\n          await emailService.sendConsultationUpdate(\n            patient.email || \"\",\n            `${patient.firstName} ${patient.lastName}`,\n            consultation.serviceType.replace(\"_\", \" \"),\n            status,\n            `${doctorWithUser.user?.firstName || ''} ${doctorWithUser.user?.lastName || ''}`\n          );\n        }\n      }\n\n      res.json({ message: \"Consultation status updated successfully\" });\n    } catch (error) {\n      console.error(\"Error updating consultation status:\", error);\n      res.status(500).json({ message: \"Failed to update consultation status\" });\n    }\n  });\n\n  // Admin routes\n  app.get(\"/api/admin/consultations\", isAuthenticated, async (req: any, res) => {\n    try {\n      const user = await storage.getUser(req.user.claims.sub);\n      if (!user || user.role !== \"admin\") {\n        return res.status(403).json({ message: \"Access denied - admin required\" });\n      }\n\n      const consultations = await storage.getAllConsultations();\n      res.json(consultations);\n    } catch (error) {\n      console.error(\"Error fetching admin consultations:\", error);\n      res.status(500).json({ message: \"Failed to fetch consultations\" });\n    }\n  });\n\n  app.get(\"/api/admin/stats\", isAuthenticated, async (req: any, res) => {\n    try {\n      const user = await storage.getUser(req.user.claims.sub);\n      if (!user || user.role !== \"admin\") {\n        return res.status(403).json({ message: \"Access denied - admin required\" });\n      }\n\n      const stats = await storage.getSystemStats();\n      res.json(stats);\n    } catch (error) {\n      console.error(\"Error fetching admin stats:\", error);\n      res.status(500).json({ message: \"Failed to fetch stats\" });\n    }\n  });\n\n  // Document download routes\n  app.get(\"/api/documents/prescription/:id\", isAuthenticated, async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const userId = req.user.claims.sub;\n\n      const prescriptions = await storage.getPrescriptionsByPatient(userId);\n      const prescription = prescriptions.find(p => p.id === id);\n\n      if (!prescription || !prescription.pdfPath) {\n        return res.status(404).json({ message: \"Prescription not found\" });\n      }\n\n      res.sendFile(prescription.pdfPath);\n    } catch (error) {\n      console.error(\"Error downloading prescription:\", error);\n      res.status(500).json({ message: \"Failed to download prescription\" });\n    }\n  });\n\n  app.get(\"/api/documents/certificate/:id\", isAuthenticated, async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const userId = req.user.claims.sub;\n\n      const certificates = await storage.getMedicalCertificatesByPatient(userId);\n      const certificate = certificates.find(c => c.id === id);\n\n      if (!certificate || !certificate.pdfPath) {\n        return res.status(404).json({ message: \"Certificate not found\" });\n      }\n\n      res.sendFile(certificate.pdfPath);\n    } catch (error) {\n      console.error(\"Error downloading certificate:\", error);\n      res.status(500).json({ message: \"Failed to download certificate\" });\n    }\n  });\n\n  // Cleanup expired OTPs periodically\n  setInterval(async () => {\n    try {\n      await storage.deleteExpiredOtps();\n    } catch (error) {\n      console.error(\"Error cleaning up expired OTPs:\", error);\n    }\n  }, 60 * 60 * 1000); // Every hour\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":15670},"server/storage.ts":{"content":"import {\n  users,\n  doctors,\n  consultations,\n  medicalCertificates,\n  prescriptions,\n  otpVerifications,\n  type User,\n  type UpsertUser,\n  type Doctor,\n  type InsertDoctor,\n  type Consultation,\n  type InsertConsultation,\n  type MedicalCertificate,\n  type InsertMedicalCertificate,\n  type Prescription,\n  type InsertPrescription,\n  type OtpVerification,\n  type InsertOtp,\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, and, desc, asc, sql, count } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // User operations (required for Replit Auth)\n  getUser(id: string): Promise<User | undefined>;\n  upsertUser(user: UpsertUser): Promise<User>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  updateUserEmailVerification(userId: string, verified: boolean): Promise<void>;\n\n  // OTP operations\n  createOtp(otpData: InsertOtp): Promise<OtpVerification>;\n  getOtpByEmail(email: string): Promise<OtpVerification | undefined>;\n  verifyOtp(email: string, otp: string): Promise<boolean>;\n  deleteExpiredOtps(): Promise<void>;\n\n  // Doctor operations\n  createDoctor(doctorData: InsertDoctor): Promise<Doctor>;\n  getDoctorByUserId(userId: string): Promise<Doctor | undefined>;\n  getDoctorWithUserById(doctorId: string): Promise<(Doctor & { user?: User }) | undefined>;\n  getAllDoctors(): Promise<Doctor[]>;\n  getActiveDoctors(): Promise<Doctor[]>;\n  updateDoctorWorkload(doctorId: string, increment: number): Promise<void>;\n\n  // Consultation operations\n  createConsultation(consultationData: InsertConsultation): Promise<Consultation>;\n  getConsultationById(id: string): Promise<Consultation | undefined>;\n  getConsultationsByPatient(patientId: string): Promise<Consultation[]>;\n  getConsultationsByDoctor(doctorId: string): Promise<Consultation[]>;\n  getPendingConsultations(): Promise<Consultation[]>;\n  getAllConsultations(): Promise<Consultation[]>;\n  updateConsultationStatus(\n    id: string,\n    status: \"pending\" | \"assigned\" | \"in_progress\" | \"completed\" | \"cancelled\",\n    doctorNotes?: string\n  ): Promise<void>;\n  assignDoctorToConsultation(consultationId: string, doctorId: string): Promise<void>;\n\n  // Medical certificate operations\n  createMedicalCertificate(certData: InsertMedicalCertificate): Promise<MedicalCertificate>;\n  getMedicalCertificatesByPatient(patientId: string): Promise<MedicalCertificate[]>;\n  updateMedicalCertificatePdf(id: string, pdfPath: string): Promise<void>;\n\n  // Prescription operations\n  createPrescription(prescData: InsertPrescription): Promise<Prescription>;\n  getPrescriptionsByPatient(patientId: string): Promise<Prescription[]>;\n  updatePrescriptionPdf(id: string, pdfPath: string): Promise<void>;\n\n  // Analytics\n  getSystemStats(): Promise<{\n    totalUsers: number;\n    totalDoctors: number;\n    totalConsultations: number;\n    pendingConsultations: number;\n    completedConsultations: number;\n  }>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // User operations (required for Replit Auth)\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user;\n  }\n\n  async updateUserEmailVerification(userId: string, verified: boolean): Promise<void> {\n    await db\n      .update(users)\n      .set({ isEmailVerified: verified, updatedAt: new Date() })\n      .where(eq(users.id, userId));\n  }\n\n  // OTP operations\n  async createOtp(otpData: InsertOtp): Promise<OtpVerification> {\n    const [otp] = await db.insert(otpVerifications).values(otpData).returning();\n    return otp;\n  }\n\n  async getOtpByEmail(email: string): Promise<OtpVerification | undefined> {\n    const [otp] = await db\n      .select()\n      .from(otpVerifications)\n      .where(and(eq(otpVerifications.email, email), eq(otpVerifications.verified, false)))\n      .orderBy(desc(otpVerifications.createdAt));\n    return otp;\n  }\n\n  async verifyOtp(email: string, otp: string): Promise<boolean> {\n    const [verification] = await db\n      .select()\n      .from(otpVerifications)\n      .where(\n        and(\n          eq(otpVerifications.email, email),\n          eq(otpVerifications.otp, otp),\n          eq(otpVerifications.verified, false)\n        )\n      );\n\n    if (verification && new Date() < verification.expiresAt) {\n      await db\n        .update(otpVerifications)\n        .set({ verified: true })\n        .where(eq(otpVerifications.id, verification.id));\n      return true;\n    }\n    return false;\n  }\n\n  async deleteExpiredOtps(): Promise<void> {\n    await db.delete(otpVerifications).where(sql`expires_at < NOW()`);\n  }\n\n  // Doctor operations\n  async createDoctor(doctorData: InsertDoctor): Promise<Doctor> {\n    const [doctor] = await db.insert(doctors).values(doctorData).returning();\n    return doctor;\n  }\n\n  async getDoctorByUserId(userId: string): Promise<Doctor | undefined> {\n    const [doctor] = await db.select().from(doctors).where(eq(doctors.userId, userId));\n    return doctor;\n  }\n\n  async getDoctorWithUserById(doctorId: string): Promise<(Doctor & { user?: User }) | undefined> {\n    const result = await db\n      .select()\n      .from(doctors)\n      .leftJoin(users, eq(doctors.userId, users.id))\n      .where(eq(doctors.id, doctorId));\n\n    if (result.length === 0) return undefined;\n\n    const row = result[0];\n    return {\n      ...row.doctors,\n      user: row.users || undefined,\n    };\n  }\n\n  async getAllDoctors(): Promise<Doctor[]> {\n    return await db.select().from(doctors);\n  }\n\n  async getActiveDoctors(): Promise<Doctor[]> {\n    return await db.select().from(doctors).where(eq(doctors.isActive, true));\n  }\n\n  async updateDoctorWorkload(doctorId: string, increment: number): Promise<void> {\n    await db\n      .update(doctors)\n      .set({\n        workloadCount: sql`${doctors.workloadCount} + ${increment}`,\n        updatedAt: new Date(),\n      })\n      .where(eq(doctors.id, doctorId));\n  }\n\n  // Consultation operations\n  async createConsultation(consultationData: InsertConsultation): Promise<Consultation> {\n    const [consultation] = await db.insert(consultations).values(consultationData).returning();\n    return consultation;\n  }\n\n  async getConsultationById(id: string): Promise<Consultation | undefined> {\n    const [consultation] = await db.select().from(consultations).where(eq(consultations.id, id));\n    return consultation;\n  }\n\n  async getConsultationsByPatient(patientId: string): Promise<Consultation[]> {\n    return await db\n      .select()\n      .from(consultations)\n      .where(eq(consultations.patientId, patientId))\n      .orderBy(desc(consultations.createdAt));\n  }\n\n  async getConsultationsByDoctor(doctorId: string): Promise<Consultation[]> {\n    return await db\n      .select()\n      .from(consultations)\n      .where(eq(consultations.doctorId, doctorId))\n      .orderBy(desc(consultations.createdAt));\n  }\n\n  async getPendingConsultations(): Promise<Consultation[]> {\n    return await db\n      .select()\n      .from(consultations)\n      .where(eq(consultations.status, \"pending\"))\n      .orderBy(asc(consultations.createdAt));\n  }\n\n  async getAllConsultations(): Promise<Consultation[]> {\n    return await db\n      .select()\n      .from(consultations)\n      .orderBy(desc(consultations.createdAt));\n  }\n\n  async updateConsultationStatus(\n    id: string,\n    status: \"pending\" | \"assigned\" | \"in_progress\" | \"completed\" | \"cancelled\",\n    doctorNotes?: string\n  ): Promise<void> {\n    const updateData: any = {\n      status,\n      updatedAt: new Date(),\n    };\n\n    if (doctorNotes) {\n      updateData.doctorNotes = doctorNotes;\n    }\n\n    if (status === \"completed\") {\n      updateData.completedAt = new Date();\n    }\n\n    await db.update(consultations).set(updateData).where(eq(consultations.id, id));\n  }\n\n  async assignDoctorToConsultation(consultationId: string, doctorId: string): Promise<void> {\n    await db\n      .update(consultations)\n      .set({\n        doctorId,\n        status: \"assigned\",\n        updatedAt: new Date(),\n      })\n      .where(eq(consultations.id, consultationId));\n\n    // Update doctor workload\n    await this.updateDoctorWorkload(doctorId, 1);\n  }\n\n  // Medical certificate operations\n  async createMedicalCertificate(certData: InsertMedicalCertificate): Promise<MedicalCertificate> {\n    const [certificate] = await db.insert(medicalCertificates).values(certData).returning();\n    return certificate;\n  }\n\n  async getMedicalCertificatesByPatient(patientId: string): Promise<MedicalCertificate[]> {\n    return await db\n      .select()\n      .from(medicalCertificates)\n      .where(eq(medicalCertificates.patientId, patientId))\n      .orderBy(desc(medicalCertificates.issuedAt));\n  }\n\n  async updateMedicalCertificatePdf(id: string, pdfPath: string): Promise<void> {\n    await db\n      .update(medicalCertificates)\n      .set({ pdfPath })\n      .where(eq(medicalCertificates.id, id));\n  }\n\n  // Prescription operations\n  async createPrescription(prescData: InsertPrescription): Promise<Prescription> {\n    const [prescription] = await db.insert(prescriptions).values(prescData).returning();\n    return prescription;\n  }\n\n  async getPrescriptionsByPatient(patientId: string): Promise<Prescription[]> {\n    return await db\n      .select()\n      .from(prescriptions)\n      .where(eq(prescriptions.patientId, patientId))\n      .orderBy(desc(prescriptions.issuedAt));\n  }\n\n  async updatePrescriptionPdf(id: string, pdfPath: string): Promise<void> {\n    await db.update(prescriptions).set({ pdfPath }).where(eq(prescriptions.id, id));\n  }\n\n  // Analytics\n  async getSystemStats(): Promise<{\n    totalUsers: number;\n    totalDoctors: number;\n    totalConsultations: number;\n    pendingConsultations: number;\n    completedConsultations: number;\n  }> {\n    const [userCount] = await db.select({ count: count() }).from(users);\n    const [doctorCount] = await db.select({ count: count() }).from(doctors);\n    const [consultationCount] = await db.select({ count: count() }).from(consultations);\n    const [pendingCount] = await db\n      .select({ count: count() })\n      .from(consultations)\n      .where(eq(consultations.status, \"pending\"));\n    const [completedCount] = await db\n      .select({ count: count() })\n      .from(consultations)\n      .where(eq(consultations.status, \"completed\"));\n\n    return {\n      totalUsers: userCount.count,\n      totalDoctors: doctorCount.count,\n      totalConsultations: consultationCount.count,\n      pendingConsultations: pendingCount.count,\n      completedConsultations: completedCount.count,\n    };\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":10993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport {\n  index,\n  jsonb,\n  pgEnum,\n  pgTable,\n  text,\n  timestamp,\n  varchar,\n  uuid,\n  integer,\n  boolean,\n} from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\nimport { relations } from \"drizzle-orm\";\n\n// Session storage table (required for Replit Auth)\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// User roles enum\nexport const userRoleEnum = pgEnum(\"user_role\", [\"patient\", \"doctor\", \"admin\"]);\n\n// Consultation status enum\nexport const consultationStatusEnum = pgEnum(\"consultation_status\", [\n  \"pending\",\n  \"assigned\",\n  \"in_progress\",\n  \"completed\",\n  \"cancelled\",\n]);\n\n// Service type enum\nexport const serviceTypeEnum = pgEnum(\"service_type\", [\n  \"prescription\",\n  \"medical_certificate\",\n  \"mental_health\",\n  \"telehealth\",\n  \"pathology\",\n]);\n\n// Certificate type enum\nexport const certificateTypeEnum = pgEnum(\"certificate_type\", [\n  \"sick_leave\",\n  \"fitness_to_work\",\n  \"study_exemption\",\n  \"general_medical\",\n]);\n\n// Users table (required for Replit Auth)\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  role: userRoleEnum(\"role\").default(\"patient\"),\n  dateOfBirth: varchar(\"date_of_birth\"),\n  medicareNumber: varchar(\"medicare_number\"),\n  phoneNumber: varchar(\"phone_number\"),\n  isEmailVerified: boolean(\"is_email_verified\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// OTP verification table\nexport const otpVerifications = pgTable(\"otp_verifications\", {\n  id: uuid(\"id\").defaultRandom().primaryKey(),\n  email: varchar(\"email\").notNull(),\n  otp: varchar(\"otp\").notNull(),\n  expiresAt: timestamp(\"expires_at\").notNull(),\n  verified: boolean(\"verified\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Doctors table\nexport const doctors = pgTable(\"doctors\", {\n  id: uuid(\"id\").defaultRandom().primaryKey(),\n  userId: varchar(\"user_id\").references(() => users.id),\n  licenseNumber: varchar(\"license_number\").unique().notNull(),\n  specialty: varchar(\"specialty\").notNull(),\n  qualifications: text(\"qualifications\"),\n  isActive: boolean(\"is_active\").default(true),\n  workloadCount: integer(\"workload_count\").default(0),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Consultations table\nexport const consultations = pgTable(\"consultations\", {\n  id: uuid(\"id\").defaultRandom().primaryKey(),\n  patientId: varchar(\"patient_id\").references(() => users.id).notNull(),\n  doctorId: uuid(\"doctor_id\").references(() => doctors.id),\n  serviceType: serviceTypeEnum(\"service_type\").notNull(),\n  status: consultationStatusEnum(\"status\").default(\"pending\"),\n  requestData: jsonb(\"request_data\").notNull(),\n  doctorNotes: text(\"doctor_notes\"),\n  prescriptionData: jsonb(\"prescription_data\"),\n  certificateData: jsonb(\"certificate_data\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n  completedAt: timestamp(\"completed_at\"),\n});\n\n// Medical certificates table\nexport const medicalCertificates = pgTable(\"medical_certificates\", {\n  id: uuid(\"id\").defaultRandom().primaryKey(),\n  consultationId: uuid(\"consultation_id\").references(() => consultations.id).notNull(),\n  patientId: varchar(\"patient_id\").references(() => users.id).notNull(),\n  doctorId: uuid(\"doctor_id\").references(() => doctors.id).notNull(),\n  certificateType: certificateTypeEnum(\"certificate_type\").notNull(),\n  dateFrom: timestamp(\"date_from\").notNull(),\n  dateTo: timestamp(\"date_to\").notNull(),\n  condition: text(\"condition\").notNull(),\n  restrictions: text(\"restrictions\"),\n  pdfPath: varchar(\"pdf_path\"),\n  issuedAt: timestamp(\"issued_at\").defaultNow(),\n});\n\n// Prescriptions table\nexport const prescriptions = pgTable(\"prescriptions\", {\n  id: uuid(\"id\").defaultRandom().primaryKey(),\n  consultationId: uuid(\"consultation_id\").references(() => consultations.id).notNull(),\n  patientId: varchar(\"patient_id\").references(() => users.id).notNull(),\n  doctorId: uuid(\"doctor_id\").references(() => doctors.id).notNull(),\n  medicationName: varchar(\"medication_name\").notNull(),\n  dosage: varchar(\"dosage\").notNull(),\n  quantity: varchar(\"quantity\").notNull(),\n  repeats: integer(\"repeats\").default(0),\n  instructions: text(\"instructions\"),\n  pdfPath: varchar(\"pdf_path\"),\n  issuedAt: timestamp(\"issued_at\").defaultNow(),\n  expiresAt: timestamp(\"expires_at\"),\n});\n\n// Relations\nexport const usersRelations = relations(users, ({ many, one }) => ({\n  doctorProfile: one(doctors, {\n    fields: [users.id],\n    references: [doctors.userId],\n  }),\n  consultationsAsPatient: many(consultations, {\n    relationName: \"patientConsultations\",\n  }),\n  medicalCertificates: many(medicalCertificates),\n  prescriptions: many(prescriptions),\n}));\n\nexport const doctorsRelations = relations(doctors, ({ one, many }) => ({\n  user: one(users, {\n    fields: [doctors.userId],\n    references: [users.id],\n  }),\n  consultations: many(consultations),\n  medicalCertificates: many(medicalCertificates),\n  prescriptions: many(prescriptions),\n}));\n\nexport const consultationsRelations = relations(consultations, ({ one, many }) => ({\n  patient: one(users, {\n    fields: [consultations.patientId],\n    references: [users.id],\n    relationName: \"patientConsultations\",\n  }),\n  doctor: one(doctors, {\n    fields: [consultations.doctorId],\n    references: [doctors.id],\n  }),\n  medicalCertificate: one(medicalCertificates),\n  prescription: one(prescriptions),\n}));\n\nexport const medicalCertificatesRelations = relations(medicalCertificates, ({ one }) => ({\n  consultation: one(consultations, {\n    fields: [medicalCertificates.consultationId],\n    references: [consultations.id],\n  }),\n  patient: one(users, {\n    fields: [medicalCertificates.patientId],\n    references: [users.id],\n  }),\n  doctor: one(doctors, {\n    fields: [medicalCertificates.doctorId],\n    references: [doctors.id],\n  }),\n}));\n\nexport const prescriptionsRelations = relations(prescriptions, ({ one }) => ({\n  consultation: one(consultations, {\n    fields: [prescriptions.consultationId],\n    references: [consultations.id],\n  }),\n  patient: one(users, {\n    fields: [prescriptions.patientId],\n    references: [users.id],\n  }),\n  doctor: one(doctors, {\n    fields: [prescriptions.doctorId],\n    references: [doctors.id],\n  }),\n}));\n\n// Insert schemas\nexport const upsertUserSchema = createInsertSchema(users).omit({\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertOtpSchema = createInsertSchema(otpVerifications).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertDoctorSchema = createInsertSchema(doctors).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertConsultationSchema = createInsertSchema(consultations).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertMedicalCertificateSchema = createInsertSchema(medicalCertificates).omit({\n  id: true,\n  issuedAt: true,\n});\n\nexport const insertPrescriptionSchema = createInsertSchema(prescriptions).omit({\n  id: true,\n  issuedAt: true,\n});\n\n// Registration schema with additional validation\nexport const registrationSchema = z.object({\n  email: z.string().email(\"Invalid email format\"),\n  firstName: z.string().min(1, \"First name is required\"),\n  lastName: z.string().min(1, \"Last name is required\"),\n  dateOfBirth: z.string().min(1, \"Date of birth is required\"),\n  medicareNumber: z.string().optional(),\n  phoneNumber: z.string().optional(),\n});\n\n// OTP verification schema\nexport const otpVerificationSchema = z.object({\n  email: z.string().email(\"Invalid email format\"),\n  otp: z.string().length(6, \"OTP must be 6 digits\"),\n});\n\n// Service request schemas\nexport const prescriptionRequestSchema = z.object({\n  medication: z.string().min(1, \"Medication name is required\"),\n  dosage: z.string().min(1, \"Dosage is required\"),\n  previous_doctor: z.string().optional(),\n  reason: z.string().min(1, \"Reason is required\"),\n});\n\nexport const medicalCertificateRequestSchema = z.object({\n  certificate_type: z.enum([\"sick_leave\", \"fitness_to_work\", \"study_exemption\", \"general_medical\"]),\n  date_from: z.string().min(1, \"Start date is required\"),\n  date_to: z.string().min(1, \"End date is required\"),\n  symptoms: z.string().min(1, \"Symptoms are required\"),\n});\n\nexport const mentalHealthRequestSchema = z.object({\n  support_type: z.enum([\"mental_health_plan\", \"counseling_referral\", \"medication_review\", \"crisis_support\"]),\n  symptoms: z.string().optional(),\n  previous_treatment: z.string().optional(),\n});\n\nexport const telehealthRequestSchema = z.object({\n  consultation_type: z.enum([\"general\", \"follow_up\", \"chronic_disease\", \"preventive\"]),\n  preferred_time: z.enum([\"morning\", \"afternoon\", \"evening\", \"anytime\"]),\n  health_concerns: z.string().min(1, \"Health concerns are required\"),\n  current_medications: z.string().optional(),\n});\n\nexport const pathologyRequestSchema = z.object({\n  test_type: z.enum([\"blood_work\", \"diabetes_screening\", \"cholesterol\", \"thyroid\", \"vitamin_d\", \"other\"]),\n  reason_for_test: z.string().min(1, \"Reason for test is required\"),\n  previous_tests: z.string().optional(),\n  preferred_lab: z.string().optional(),\n});\n\n// Types\nexport type UpsertUser = z.infer<typeof upsertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertOtp = z.infer<typeof insertOtpSchema>;\nexport type OtpVerification = typeof otpVerifications.$inferSelect;\nexport type InsertDoctor = z.infer<typeof insertDoctorSchema>;\nexport type Doctor = typeof doctors.$inferSelect;\nexport type InsertConsultation = z.infer<typeof insertConsultationSchema>;\nexport type Consultation = typeof consultations.$inferSelect;\nexport type InsertMedicalCertificate = z.infer<typeof insertMedicalCertificateSchema>;\nexport type MedicalCertificate = typeof medicalCertificates.$inferSelect;\nexport type InsertPrescription = z.infer<typeof insertPrescriptionSchema>;\nexport type Prescription = typeof prescriptions.$inferSelect;\nexport type RegistrationData = z.infer<typeof registrationSchema>;\nexport type OtpVerificationData = z.infer<typeof otpVerificationSchema>;\n","size_bytes":10531},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport Landing from \"@/pages/landing\";\nimport Register from \"@/pages/register\";\nimport OTPVerification from \"@/pages/otp-verification\";\nimport PatientDashboard from \"@/pages/patient-dashboard\";\nimport DoctorDashboard from \"@/pages/doctor-dashboard\";\nimport AdminDashboard from \"@/pages/admin-dashboard\";\nimport HowItWorks from \"@/pages/how-it-works\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  const { isAuthenticated, isLoading, user } = useAuth();\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"bg-freedoc-blue text-white p-4 rounded-lg w-fit mx-auto mb-4\">\n            <div className=\"h-8 w-8 animate-spin border-2 border-white border-t-transparent rounded-full\"></div>\n          </div>\n          <p className=\"text-freedoc-secondary\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Switch>\n      {!isAuthenticated ? (\n        <>\n          <Route path=\"/\" component={Landing} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/verify-otp\" component={OTPVerification} />\n          <Route path=\"/how-it-works\" component={HowItWorks} />\n        </>\n      ) : (\n        <>\n          {user?.role === \"patient\" && (\n            <>\n              <Route path=\"/\" component={PatientDashboard} />\n              <Route path=\"/dashboard\" component={PatientDashboard} />\n            </>\n          )}\n          {user?.role === \"doctor\" && (\n            <>\n              <Route path=\"/\" component={DoctorDashboard} />\n              <Route path=\"/dashboard\" component={DoctorDashboard} />\n            </>\n          )}\n          {user?.role === \"admin\" && (\n            <>\n              <Route path=\"/\" component={AdminDashboard} />\n              <Route path=\"/dashboard\" component={AdminDashboard} />\n            </>\n          )}\n          <Route path=\"/how-it-works\" component={HowItWorks} />\n        </>\n      )}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2592},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(210, 25%, 7.8431%);\n  --card: hsl(180, 6.6667%, 97.0588%);\n  --card-foreground: hsl(210, 25%, 7.8431%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(210, 25%, 7.8431%);\n  --primary: hsl(217, 91%, 52%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(210, 25%, 7.8431%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(240, 1.9608%, 90%);\n  --muted-foreground: hsl(210, 25%, 7.8431%);\n  --accent: hsl(217, 91%, 97%);\n  --accent-foreground: hsl(217, 91%, 52%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(214, 32%, 91%);\n  --input: hsl(214, 32%, 91%);\n  --ring: hsl(217, 91%, 52%);\n  --chart-1: hsl(217, 91%, 52%);\n  --chart-2: hsl(142, 76%, 36%);\n  --chart-3: hsl(47, 96%, 53%);\n  --chart-4: hsl(139, 84%, 37%);\n  --chart-5: hsl(340, 82%, 52%);\n  --sidebar: hsl(180, 6.6667%, 97.0588%);\n  --sidebar-foreground: hsl(210, 25%, 7.8431%);\n  --sidebar-primary: hsl(217, 91%, 52%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(217, 91%, 97%);\n  --sidebar-accent-foreground: hsl(217, 91%, 52%);\n  --sidebar-border: hsl(214, 32%, 91%);\n  --sidebar-ring: hsl(217, 91%, 52%);\n  --font-sans: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'JetBrains Mono', 'Fira Code', Consolas, monospace;\n  --radius: 0.5rem;\n  --freedoc-blue: hsl(217, 91%, 52%);\n  --freedoc-blue-light: hsl(217, 91%, 97%);\n  --freedoc-blue-dark: hsl(217, 91%, 42%);\n  --freedoc-dark: hsl(210, 25%, 15%);\n  --freedoc-secondary: hsl(210, 16%, 42%);\n}\n\n.dark {\n  --background: hsl(222, 84%, 5%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(222, 84%, 5%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(222, 84%, 5%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(217, 91%, 60%);\n  --primary-foreground: hsl(222, 84%, 5%);\n  --secondary: hsl(217, 19%, 27%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --muted: hsl(217, 19%, 27%);\n  --muted-foreground: hsl(215, 20%, 65%);\n  --accent: hsl(217, 19%, 27%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 63%, 31%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(217, 19%, 27%);\n  --input: hsl(217, 19%, 27%);\n  --ring: hsl(217, 91%, 60%);\n  --chart-1: hsl(220, 70%, 50%);\n  --chart-2: hsl(160, 60%, 45%);\n  --chart-3: hsl(30, 80%, 55%);\n  --chart-4: hsl(280, 65%, 60%);\n  --chart-5: hsl(340, 75%, 55%);\n  --freedoc-blue: hsl(217, 91%, 60%);\n  --freedoc-blue-light: hsl(217, 91%, 15%);\n  --freedoc-blue-dark: hsl(217, 91%, 70%);\n  --freedoc-dark: hsl(210, 40%, 98%);\n  --freedoc-secondary: hsl(215, 20%, 65%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply bg-background text-foreground font-sans antialiased;\n  }\n\n  .freedoc-blue {\n    color: var(--freedoc-blue);\n  }\n\n  .bg-freedoc-blue {\n    background-color: var(--freedoc-blue);\n  }\n\n  .border-freedoc-blue {\n    border-color: var(--freedoc-blue);\n  }\n\n  .text-freedoc-blue {\n    color: var(--freedoc-blue);\n  }\n\n  .bg-freedoc-light {\n    background-color: var(--freedoc-blue-light);\n  }\n\n  .text-freedoc-dark {\n    color: var(--freedoc-dark);\n  }\n\n  .text-freedoc-secondary {\n    color: var(--freedoc-secondary);\n  }\n\n  .hover\\:bg-freedoc-blue:hover {\n    background-color: var(--freedoc-blue);\n  }\n\n  .hover\\:text-freedoc-blue:hover {\n    color: var(--freedoc-blue);\n  }\n\n  .hover\\:border-freedoc-blue:hover {\n    border-color: var(--freedoc-blue);\n  }\n\n  /* Healthcare-specific styling */\n  .medical-card {\n    @apply bg-white rounded-lg shadow-sm border border-gray-200 hover:shadow-md transition-shadow;\n  }\n\n  .service-icon {\n    @apply p-3 rounded-lg w-fit mb-4;\n  }\n\n  .status-badge {\n    @apply px-2 py-1 rounded-full text-xs font-medium;\n  }\n\n  .consultation-card {\n    @apply border border-gray-200 rounded-lg p-4 hover:shadow-sm transition-shadow;\n  }\n\n  /* Form styling for medical forms */\n  .medical-form {\n    @apply space-y-6;\n  }\n\n  .medical-form input,\n  .medical-form textarea,\n  .medical-form select {\n    @apply w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-freedoc-blue focus:border-freedoc-blue transition-colors;\n  }\n\n  .medical-form label {\n    @apply block text-sm font-medium text-freedoc-dark mb-2;\n  }\n\n  /* Dashboard styling */\n  .dashboard-header {\n    @apply bg-white shadow-sm border-b;\n  }\n\n  .dashboard-stats {\n    @apply grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8;\n  }\n\n  .stat-card {\n    @apply bg-white p-6 rounded-lg shadow-sm;\n  }\n\n  /* Navigation styling */\n  .nav-link {\n    @apply text-freedoc-secondary hover:text-freedoc-blue transition-colors;\n  }\n\n  .nav-button {\n    @apply bg-freedoc-blue text-white px-4 py-2 rounded-lg hover:bg-freedoc-blue/90 transition-colors;\n  }\n\n  /* Healthcare-themed animations */\n  .fade-in {\n    animation: fadeIn 0.5s ease-in;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  .pulse-medical {\n    animation: pulseMedical 2s infinite;\n  }\n\n  @keyframes pulseMedical {\n    0%, 100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.5;\n    }\n  }\n\n  /* Accessibility improvements */\n  .focus-visible:focus {\n    @apply outline-none ring-2 ring-freedoc-blue ring-offset-2;\n  }\n\n  /* Print styles for medical documents */\n  @media print {\n    .no-print {\n      display: none !important;\n    }\n    \n    .print-break {\n      page-break-before: always;\n    }\n    \n    body {\n      @apply text-black bg-white;\n    }\n  }\n}\n\n/* Custom scrollbar for better UX */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: hsl(240, 1.9608%, 90%);\n}\n\n::-webkit-scrollbar-thumb {\n  background: var(--freedoc-blue);\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: var(--freedoc-blue-dark);\n}\n","size_bytes":6012},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"server/services/emailService.ts":{"content":"import nodemailer from \"nodemailer\";\n\ninterface EmailConfig {\n  host: string;\n  port: number;\n  secure: boolean;\n  auth: {\n    user: string;\n    pass: string;\n  };\n}\n\nclass EmailService {\n  private transporter: nodemailer.Transporter;\n\n  constructor() {\n    // Use environment variables for email configuration\n    const emailConfig: EmailConfig = {\n      host: process.env.SMTP_HOST || \"smtp.gmail.com\",\n      port: parseInt(process.env.SMTP_PORT || \"587\"),\n      secure: process.env.SMTP_SECURE === \"true\",\n      auth: {\n        user: process.env.SMTP_USER || process.env.EMAIL_USER || \"\",\n        pass: process.env.SMTP_PASS || process.env.EMAIL_PASS || \"\",\n      },\n    };\n\n    this.transporter = nodemailer.createTransport(emailConfig);\n  }\n\n  async sendOTP(email: string, otp: string): Promise<void> {\n    const mailOptions = {\n      from: {\n        name: \"FreeDoc Australia\",\n        address: process.env.SMTP_USER || process.env.EMAIL_USER || \"noreply@freedoc.com.au\",\n      },\n      to: email,\n      subject: \"FreeDoc Email Verification - Your OTP Code\",\n      html: `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset=\"utf-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>FreeDoc Email Verification</title>\n          <style>\n            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; }\n            .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n            .header { background-color: #0d6efd; color: white; text-align: center; padding: 20px; border-radius: 8px 8px 0 0; }\n            .content { background-color: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }\n            .otp-box { background-color: white; border: 2px solid #0d6efd; padding: 20px; text-align: center; margin: 20px 0; border-radius: 8px; }\n            .otp-code { font-size: 32px; font-weight: bold; color: #0d6efd; letter-spacing: 8px; }\n            .footer { text-align: center; margin-top: 20px; color: #6c757d; font-size: 14px; }\n            .warning { background-color: #fff3cd; border: 1px solid #ffeaa7; color: #856404; padding: 15px; border-radius: 4px; margin: 20px 0; }\n          </style>\n        </head>\n        <body>\n          <div class=\"container\">\n            <div class=\"header\">\n              <h1>🩺 FreeDoc Australia</h1>\n              <p>Australia's First Truly Free Online Doctor</p>\n            </div>\n            <div class=\"content\">\n              <h2>Email Verification Required</h2>\n              <p>Thank you for signing up with FreeDoc! To complete your registration and access free healthcare services, please verify your email address using the code below:</p>\n              \n              <div class=\"otp-box\">\n                <div class=\"otp-code\">${otp}</div>\n                <p><strong>Your verification code</strong></p>\n              </div>\n              \n              <p>Enter this 6-digit code in the verification form to activate your account. This code will expire in 10 minutes for security reasons.</p>\n              \n              <div class=\"warning\">\n                <strong>Security Notice:</strong> Never share this code with anyone. FreeDoc staff will never ask for your verification code via phone or email.\n              </div>\n              \n              <p>Once verified, you'll have access to:</p>\n              <ul>\n                <li>✅ Free online prescriptions</li>\n                <li>✅ Medical certificates</li>\n                <li>✅ Mental health support</li>\n                <li>✅ Telehealth consultations</li>\n                <li>✅ Pathology referrals</li>\n              </ul>\n              \n              <p>If you didn't create a FreeDoc account, please ignore this email.</p>\n            </div>\n            <div class=\"footer\">\n              <p>© 2025 FreeDoc Australia. All rights reserved.</p>\n              <p>This is an automated message, please do not reply to this email.</p>\n            </div>\n          </div>\n        </body>\n        </html>\n      `,\n      text: `\n        FreeDoc Australia - Email Verification\n        \n        Your verification code is: ${otp}\n        \n        Enter this code to complete your registration and access free healthcare services.\n        This code expires in 10 minutes.\n        \n        If you didn't create a FreeDoc account, please ignore this email.\n        \n        © 2025 FreeDoc Australia\n      `,\n    };\n\n    try {\n      await this.transporter.sendMail(mailOptions);\n      console.log(`OTP email sent successfully to ${email}`);\n    } catch (error) {\n      console.error(\"Failed to send OTP email:\", error);\n      throw new Error(\"Failed to send verification email\");\n    }\n  }\n\n  async sendConsultationUpdate(\n    email: string,\n    patientName: string,\n    consultationType: string,\n    status: string,\n    doctorName?: string\n  ): Promise<void> {\n    const statusMessages = {\n      assigned: `Your ${consultationType} consultation has been assigned to ${doctorName}.`,\n      in_progress: `${doctorName} is now reviewing your ${consultationType} consultation.`,\n      completed: `Your ${consultationType} consultation has been completed. You can now download your documents from your dashboard.`,\n    };\n\n    const message = statusMessages[status as keyof typeof statusMessages] || `Your consultation status has been updated to ${status}.`;\n\n    const mailOptions = {\n      from: {\n        name: \"FreeDoc Australia\",\n        address: process.env.SMTP_USER || process.env.EMAIL_USER || \"noreply@freedoc.com.au\",\n      },\n      to: email,\n      subject: `FreeDoc Consultation Update - ${consultationType}`,\n      html: `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset=\"utf-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>FreeDoc Consultation Update</title>\n          <style>\n            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; }\n            .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n            .header { background-color: #0d6efd; color: white; text-align: center; padding: 20px; border-radius: 8px 8px 0 0; }\n            .content { background-color: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }\n            .status-box { background-color: white; border-left: 4px solid #28a745; padding: 20px; margin: 20px 0; border-radius: 4px; }\n            .footer { text-align: center; margin-top: 20px; color: #6c757d; font-size: 14px; }\n          </style>\n        </head>\n        <body>\n          <div class=\"container\">\n            <div class=\"header\">\n              <h1>🩺 FreeDoc Australia</h1>\n              <p>Consultation Update</p>\n            </div>\n            <div class=\"content\">\n              <h2>Hello ${patientName},</h2>\n              \n              <div class=\"status-box\">\n                <h3>Consultation Update</h3>\n                <p>${message}</p>\n              </div>\n              \n              <p>You can view the full details and any available documents by logging into your FreeDoc dashboard.</p>\n              \n              <p>Thank you for choosing FreeDoc for your healthcare needs.</p>\n            </div>\n            <div class=\"footer\">\n              <p>© 2025 FreeDoc Australia. All rights reserved.</p>\n              <p>This is an automated message, please do not reply to this email.</p>\n            </div>\n          </div>\n        </body>\n        </html>\n      `,\n    };\n\n    try {\n      await this.transporter.sendMail(mailOptions);\n      console.log(`Consultation update email sent to ${email}`);\n    } catch (error) {\n      console.error(\"Failed to send consultation update email:\", error);\n    }\n  }\n}\n\nexport const emailService = new EmailService();\n","size_bytes":7816},"server/services/pdfService.ts":{"content":"import fs from \"fs\";\nimport path from \"path\";\n\ninterface MedicalCertificateData {\n  patientName: string;\n  dateOfBirth: string;\n  certificateType: string;\n  dateFrom: string;\n  dateTo: string;\n  condition: string;\n  doctorName: string;\n  doctorLicense: string;\n  issuedDate: string;\n}\n\ninterface PrescriptionData {\n  patientName: string;\n  dateOfBirth: string;\n  medicationName: string;\n  dosage: string;\n  quantity: string;\n  repeats: number;\n  instructions: string;\n  doctorName: string;\n  doctorLicense: string;\n  issuedDate: string;\n}\n\nclass PDFService {\n  private ensureDirectoryExists(dirPath: string): void {\n    if (!fs.existsSync(dirPath)) {\n      fs.mkdirSync(dirPath, { recursive: true });\n    }\n  }\n\n  generateMedicalCertificate(data: MedicalCertificateData): string {\n    const outputDir = path.join(process.cwd(), \"generated_documents\", \"certificates\");\n    this.ensureDirectoryExists(outputDir);\n\n    const fileName = `medical_certificate_${Date.now()}.html`;\n    const filePath = path.join(outputDir, fileName);\n\n    const htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Medical Certificate</title>\n    <style>\n        body { \n            font-family: Arial, sans-serif; \n            max-width: 800px; \n            margin: 0 auto; \n            padding: 40px; \n            background-color: #fff;\n        }\n        .header { \n            text-align: center; \n            border-bottom: 3px solid #0d6efd; \n            padding-bottom: 20px; \n            margin-bottom: 30px; \n        }\n        .logo { \n            color: #0d6efd; \n            font-size: 32px; \n            font-weight: bold; \n            margin-bottom: 10px; \n        }\n        .certificate-title { \n            font-size: 24px; \n            font-weight: bold; \n            margin: 30px 0; \n            text-align: center; \n            text-transform: uppercase; \n            letter-spacing: 2px; \n        }\n        .content { \n            line-height: 1.8; \n            font-size: 16px; \n        }\n        .patient-details { \n            background-color: #f8f9fa; \n            padding: 20px; \n            border-left: 4px solid #0d6efd; \n            margin: 20px 0; \n        }\n        .certificate-details { \n            margin: 30px 0; \n            padding: 20px; \n            border: 1px solid #dee2e6; \n            border-radius: 8px; \n        }\n        .doctor-signature { \n            margin-top: 50px; \n            text-align: right; \n        }\n        .signature-line { \n            border-top: 1px solid #000; \n            width: 300px; \n            margin-left: auto; \n            margin-top: 40px; \n        }\n        .footer { \n            margin-top: 50px; \n            text-align: center; \n            font-size: 12px; \n            color: #6c757d; \n            border-top: 1px solid #dee2e6; \n            padding-top: 20px; \n        }\n        @media print {\n            body { margin: 0; padding: 20px; }\n            .header { border-bottom: 2px solid #000; }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <div class=\"logo\">🩺 FreeDoc Australia</div>\n        <p>Australia's First Truly Free Online Doctor</p>\n        <p>Licensed Healthcare Provider - Telehealth Services</p>\n    </div>\n\n    <div class=\"certificate-title\">Medical Certificate</div>\n\n    <div class=\"patient-details\">\n        <h3>Patient Information</h3>\n        <p><strong>Name:</strong> ${data.patientName}</p>\n        <p><strong>Date of Birth:</strong> ${data.dateOfBirth}</p>\n        <p><strong>Certificate Type:</strong> ${data.certificateType.replace('_', ' ').toUpperCase()}</p>\n    </div>\n\n    <div class=\"content\">\n        <p>This is to certify that I have conducted a medical consultation with the above-named patient.</p>\n\n        <div class=\"certificate-details\">\n            <h3>Medical Assessment</h3>\n            <p><strong>Condition/Symptoms:</strong> ${data.condition}</p>\n            <p><strong>Period of Incapacity:</strong> From ${data.dateFrom} to ${data.dateTo}</p>\n            \n            ${data.certificateType === 'sick_leave' ? \n                '<p>The patient is medically unfit for work/study during the specified period due to the above condition.</p>' :\n                data.certificateType === 'fitness_to_work' ?\n                '<p>The patient is medically fit to return to work/normal activities from the specified date.</p>' :\n                '<p>This certificate is issued for the specified medical condition and period.</p>'\n            }\n        </div>\n\n        <p>This certificate is issued in accordance with medical standards and Australian healthcare regulations.</p>\n    </div>\n\n    <div class=\"doctor-signature\">\n        <p><strong>Issued by:</strong></p>\n        <div class=\"signature-line\"></div>\n        <p><strong>${data.doctorName}</strong></p>\n        <p>Medical License: ${data.doctorLicense}</p>\n        <p>FreeDoc Partner Doctor</p>\n        <p><strong>Date Issued:</strong> ${data.issuedDate}</p>\n    </div>\n\n    <div class=\"footer\">\n        <p>This is a digitally generated medical certificate from FreeDoc Australia.</p>\n        <p>For verification, contact FreeDoc at verify@freedoc.com.au with certificate reference.</p>\n        <p>© 2025 FreeDoc Australia - All rights reserved</p>\n    </div>\n</body>\n</html>`;\n\n    fs.writeFileSync(filePath, htmlContent);\n    return filePath;\n  }\n\n  generatePrescription(data: PrescriptionData): string {\n    const outputDir = path.join(process.cwd(), \"generated_documents\", \"prescriptions\");\n    this.ensureDirectoryExists(outputDir);\n\n    const fileName = `prescription_${Date.now()}.html`;\n    const filePath = path.join(outputDir, fileName);\n\n    const htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Medical Prescription</title>\n    <style>\n        body { \n            font-family: Arial, sans-serif; \n            max-width: 800px; \n            margin: 0 auto; \n            padding: 40px; \n            background-color: #fff;\n        }\n        .header { \n            text-align: center; \n            border-bottom: 3px solid #0d6efd; \n            padding-bottom: 20px; \n            margin-bottom: 30px; \n        }\n        .logo { \n            color: #0d6efd; \n            font-size: 32px; \n            font-weight: bold; \n            margin-bottom: 10px; \n        }\n        .prescription-title { \n            font-size: 24px; \n            font-weight: bold; \n            margin: 30px 0; \n            text-align: center; \n            text-transform: uppercase; \n            letter-spacing: 2px; \n        }\n        .content { \n            line-height: 1.8; \n            font-size: 16px; \n        }\n        .patient-details { \n            background-color: #f8f9fa; \n            padding: 20px; \n            border-left: 4px solid #0d6efd; \n            margin: 20px 0; \n        }\n        .prescription-details { \n            margin: 30px 0; \n            padding: 30px; \n            border: 2px solid #0d6efd; \n            border-radius: 8px; \n            background-color: #f0f7ff; \n        }\n        .medication { \n            font-size: 20px; \n            font-weight: bold; \n            color: #0d6efd; \n            margin-bottom: 15px; \n        }\n        .dosage-instructions { \n            background-color: #fff; \n            padding: 15px; \n            border-radius: 4px; \n            margin: 15px 0; \n        }\n        .doctor-signature { \n            margin-top: 50px; \n            text-align: right; \n        }\n        .signature-line { \n            border-top: 1px solid #000; \n            width: 300px; \n            margin-left: auto; \n            margin-top: 40px; \n        }\n        .footer { \n            margin-top: 50px; \n            text-align: center; \n            font-size: 12px; \n            color: #6c757d; \n            border-top: 1px solid #dee2e6; \n            padding-top: 20px; \n        }\n        .warning { \n            background-color: #fff3cd; \n            border: 1px solid #ffeaa7; \n            color: #856404; \n            padding: 15px; \n            border-radius: 4px; \n            margin: 20px 0; \n        }\n        @media print {\n            body { margin: 0; padding: 20px; }\n            .header { border-bottom: 2px solid #000; }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <div class=\"logo\">🩺 FreeDoc Australia</div>\n        <p>Australia's First Truly Free Online Doctor</p>\n        <p>Licensed Healthcare Provider - Telehealth Services</p>\n    </div>\n\n    <div class=\"prescription-title\">Medical Prescription</div>\n\n    <div class=\"patient-details\">\n        <h3>Patient Information</h3>\n        <p><strong>Name:</strong> ${data.patientName}</p>\n        <p><strong>Date of Birth:</strong> ${data.dateOfBirth}</p>\n        <p><strong>Prescription Date:</strong> ${data.issuedDate}</p>\n    </div>\n\n    <div class=\"prescription-details\">\n        <div class=\"medication\">📋 ${data.medicationName}</div>\n        \n        <div class=\"dosage-instructions\">\n            <p><strong>Dosage:</strong> ${data.dosage}</p>\n            <p><strong>Quantity:</strong> ${data.quantity}</p>\n            <p><strong>Repeats:</strong> ${data.repeats}</p>\n            ${data.instructions ? `<p><strong>Instructions:</strong> ${data.instructions}</p>` : ''}\n        </div>\n    </div>\n\n    <div class=\"warning\">\n        <strong>Important:</strong> Take this medication exactly as prescribed. Do not exceed the recommended dosage. \n        Consult your doctor if you experience any adverse effects.\n    </div>\n\n    <div class=\"content\">\n        <h3>Prescription Notes:</h3>\n        <ul>\n            <li>This prescription is valid for 12 months from the date of issue (unless otherwise specified)</li>\n            <li>Present this prescription to any Australian pharmacy</li>\n            <li>If you have any questions about this medication, consult your pharmacist or doctor</li>\n            <li>Store medications as directed and keep out of reach of children</li>\n        </ul>\n    </div>\n\n    <div class=\"doctor-signature\">\n        <p><strong>Prescribed by:</strong></p>\n        <div class=\"signature-line\"></div>\n        <p><strong>${data.doctorName}</strong></p>\n        <p>Medical License: ${data.doctorLicense}</p>\n        <p>FreeDoc Partner Doctor</p>\n        <p><strong>Date Issued:</strong> ${data.issuedDate}</p>\n    </div>\n\n    <div class=\"footer\">\n        <p>This is a digitally generated prescription from FreeDoc Australia.</p>\n        <p>For verification, contact FreeDoc at verify@freedoc.com.au with prescription reference.</p>\n        <p>© 2025 FreeDoc Australia - All rights reserved</p>\n    </div>\n</body>\n</html>`;\n\n    fs.writeFileSync(filePath, htmlContent);\n    return filePath;\n  }\n}\n\nexport const pdfService = new PDFService();\n","size_bytes":10758},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useAuth.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport type { User } from \"@shared/schema\";\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery<User>({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n}\n","size_bytes":307},"client/src/lib/authUtils.ts":{"content":"export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}","size_bytes":115},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/admin-dashboard.tsx":{"content":"import { useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport {\n  Users,\n  UserCheck,\n  Calendar,\n  Clock,\n  FileText,\n  Activity,\n  LogOut,\n  TrendingUp,\n  BarChart3,\n} from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\n\ntype SystemStats = {\n  totalUsers: number;\n  totalDoctors: number;\n  totalConsultations: number;\n  pendingConsultations: number;\n  completedConsultations: number;\n};\n\ntype Consultation = {\n  id: string;\n  patientId: string;\n  doctorId: string;\n  serviceType: string;\n  status: string;\n  createdAt: string;\n  requestData: any;\n};\n\nexport default function AdminDashboard() {\n  const { user, isLoading } = useAuth();\n  const { toast } = useToast();\n\n  // Redirect to login if not authenticated or not an admin\n  useEffect(() => {\n    if (!isLoading && (!user || user.role !== \"admin\")) {\n      toast({\n        title: \"Unauthorized\",\n        description: \"You are logged out. Logging in again...\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n      return;\n    }\n  }, [user, isLoading, toast]);\n\n  const { data: stats, isLoading: statsLoading } = useQuery<SystemStats>({\n    queryKey: [\"/api/admin/stats\"],\n    retry: false,\n    refetchInterval: 60000, // Refetch every minute\n  });\n\n  const { data: consultations = [], isLoading: consultationsLoading } = useQuery<Consultation[]>({\n    queryKey: [\"/api/admin/consultations\"],\n    retry: false,\n    refetchInterval: 30000, // Refetch every 30 seconds\n  });\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"pending\":\n        return \"bg-orange-100 text-orange-800\";\n      case \"assigned\":\n      case \"in_progress\":\n        return \"bg-blue-100 text-blue-800\";\n      case \"completed\":\n        return \"bg-green-100 text-green-800\";\n      case \"cancelled\":\n        return \"bg-red-100 text-red-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const getServiceTypeLabel = (serviceType: string) => {\n    return serviceType.replace(\"_\", \" \").replace(/\\b\\w/g, l => l.toUpperCase());\n  };\n\n  if (isLoading || !user) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"bg-freedoc-blue text-white p-4 rounded-lg w-fit mx-auto mb-4\">\n            <div className=\"h-8 w-8 animate-spin border-2 border-white border-t-transparent rounded-full\"></div>\n          </div>\n          <p className=\"text-freedoc-secondary\">Loading admin dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Dashboard Header */}\n      <div className=\"dashboard-header\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-freedoc-dark\">Admin Dashboard</h1>\n              <p className=\"text-freedoc-secondary\">\n                System Administration & Analytics\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Badge className=\"bg-green-100 text-green-800\">System Online</Badge>\n              <Button\n                variant=\"ghost\"\n                onClick={() => (window.location.href = \"/api/logout\")}\n                className=\"text-freedoc-secondary hover:text-freedoc-blue\"\n                data-testid=\"button-logout\"\n              >\n                <LogOut className=\"h-5 w-5\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* System Stats */}\n        <div className=\"dashboard-stats\">\n          <Card className=\"stat-card\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-freedoc-secondary text-sm\">Total Users</p>\n                <p className=\"text-2xl font-bold text-freedoc-dark\" data-testid=\"text-total-users\">\n                  {statsLoading ? \"...\" : stats?.totalUsers.toLocaleString() || \"0\"}\n                </p>\n              </div>\n              <div className=\"bg-blue-100 text-freedoc-blue p-3 rounded-lg\">\n                <Users className=\"h-6 w-6\" />\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"stat-card\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-freedoc-secondary text-sm\">Active Doctors</p>\n                <p className=\"text-2xl font-bold text-freedoc-dark\" data-testid=\"text-total-doctors\">\n                  {statsLoading ? \"...\" : stats?.totalDoctors.toLocaleString() || \"0\"}\n                </p>\n              </div>\n              <div className=\"bg-green-100 text-green-600 p-3 rounded-lg\">\n                <UserCheck className=\"h-6 w-6\" />\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"stat-card\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-freedoc-secondary text-sm\">Total Consultations</p>\n                <p className=\"text-2xl font-bold text-freedoc-dark\" data-testid=\"text-total-consultations\">\n                  {statsLoading ? \"...\" : stats?.totalConsultations.toLocaleString() || \"0\"}\n                </p>\n              </div>\n              <div className=\"bg-purple-100 text-purple-600 p-3 rounded-lg\">\n                <Calendar className=\"h-6 w-6\" />\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"stat-card\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-freedoc-secondary text-sm\">Pending Queue</p>\n                <p className=\"text-2xl font-bold text-freedoc-dark\" data-testid=\"text-pending-consultations\">\n                  {statsLoading ? \"...\" : stats?.pendingConsultations.toLocaleString() || \"0\"}\n                </p>\n              </div>\n              <div className=\"bg-orange-100 text-orange-600 p-3 rounded-lg\">\n                <Clock className=\"h-6 w-6\" />\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"stat-card\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-freedoc-secondary text-sm\">Completed</p>\n                <p className=\"text-2xl font-bold text-freedoc-dark\" data-testid=\"text-completed-consultations\">\n                  {statsLoading ? \"...\" : stats?.completedConsultations.toLocaleString() || \"0\"}\n                </p>\n              </div>\n              <div className=\"bg-green-100 text-green-600 p-3 rounded-lg\">\n                <FileText className=\"h-6 w-6\" />\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Management Tabs */}\n        <Card className=\"shadow-sm\">\n          <Tabs defaultValue=\"consultations\" className=\"w-full\">\n            <div className=\"border-b px-6\">\n              <TabsList className=\"grid w-full grid-cols-3 lg:w-auto lg:grid-cols-none lg:flex\">\n                <TabsTrigger \n                  value=\"consultations\" \n                  className=\"data-[state=active]:bg-freedoc-blue data-[state=active]:text-white\"\n                  data-testid=\"tab-consultations\"\n                >\n                  <Activity className=\"h-4 w-4 mr-2\" />\n                  All Consultations\n                </TabsTrigger>\n                <TabsTrigger \n                  value=\"analytics\" \n                  className=\"data-[state=active]:bg-freedoc-blue data-[state=active]:text-white\"\n                  data-testid=\"tab-analytics\"\n                >\n                  <BarChart3 className=\"h-4 w-4 mr-2\" />\n                  Analytics\n                </TabsTrigger>\n                <TabsTrigger \n                  value=\"system\" \n                  className=\"data-[state=active]:bg-freedoc-blue data-[state=active]:text-white\"\n                  data-testid=\"tab-system\"\n                >\n                  <TrendingUp className=\"h-4 w-4 mr-2\" />\n                  System Health\n                </TabsTrigger>\n              </TabsList>\n            </div>\n\n            <TabsContent value=\"consultations\" className=\"p-6\">\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold text-freedoc-dark\">All System Consultations</h3>\n                \n                {consultationsLoading ? (\n                  <div className=\"text-center py-8\">\n                    <div className=\"h-8 w-8 animate-spin border-2 border-freedoc-blue border-t-transparent rounded-full mx-auto mb-4\"></div>\n                    <p className=\"text-freedoc-secondary\">Loading consultations...</p>\n                  </div>\n                ) : consultations.length === 0 ? (\n                  <div className=\"text-center text-freedoc-secondary py-8\">\n                    <Activity className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                    <p>No consultations in the system yet.</p>\n                  </div>\n                ) : (\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Consultation ID\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Service Type\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Status\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Created Date\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Patient ID\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\n                        {consultations.map((consultation) => (\n                          <tr key={consultation.id} data-testid={`consultation-row-${consultation.id}`}>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                              {consultation.id.slice(0, 8)}...\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                              {getServiceTypeLabel(consultation.serviceType)}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <Badge className={getStatusColor(consultation.status)}>\n                                {consultation.status.replace(\"_\", \" \").toUpperCase()}\n                              </Badge>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {new Date(consultation.createdAt).toLocaleDateString()}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {consultation.patientId.slice(0, 8)}...\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"analytics\" className=\"p-6\">\n              <div className=\"space-y-6\">\n                <h3 className=\"text-lg font-semibold text-freedoc-dark\">System Analytics</h3>\n                \n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <Card className=\"p-6\">\n                    <h4 className=\"text-md font-semibold text-freedoc-dark mb-4\">Consultation Distribution</h4>\n                    <div className=\"space-y-3\">\n                      {stats && (\n                        <>\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm text-freedoc-secondary\">Pending</span>\n                            <span className=\"text-sm font-medium text-freedoc-dark\">\n                              {stats.pendingConsultations} ({stats.totalConsultations > 0 ? Math.round((stats.pendingConsultations / stats.totalConsultations) * 100) : 0}%)\n                            </span>\n                          </div>\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm text-freedoc-secondary\">Completed</span>\n                            <span className=\"text-sm font-medium text-freedoc-dark\">\n                              {stats.completedConsultations} ({stats.totalConsultations > 0 ? Math.round((stats.completedConsultations / stats.totalConsultations) * 100) : 0}%)\n                            </span>\n                          </div>\n                        </>\n                      )}\n                    </div>\n                  </Card>\n\n                  <Card className=\"p-6\">\n                    <h4 className=\"text-md font-semibold text-freedoc-dark mb-4\">System Growth</h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm text-freedoc-secondary\">Doctor/Patient Ratio</span>\n                        <span className=\"text-sm font-medium text-freedoc-dark\">\n                          {stats ? `1:${stats.totalDoctors > 0 ? Math.round(stats.totalUsers / stats.totalDoctors) : 0}` : \"...\"}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm text-freedoc-secondary\">Avg Consultations per User</span>\n                        <span className=\"text-sm font-medium text-freedoc-dark\">\n                          {stats ? (stats.totalUsers > 0 ? (stats.totalConsultations / stats.totalUsers).toFixed(1) : \"0\") : \"...\"}\n                        </span>\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"system\" className=\"p-6\">\n              <div className=\"space-y-6\">\n                <h3 className=\"text-lg font-semibold text-freedoc-dark\">System Health</h3>\n                \n                <div className=\"grid md:grid-cols-3 gap-6\">\n                  <Card className=\"p-6\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n                      <div>\n                        <h4 className=\"text-md font-semibold text-freedoc-dark\">Database</h4>\n                        <p className=\"text-sm text-freedoc-secondary\">Operational</p>\n                      </div>\n                    </div>\n                  </Card>\n\n                  <Card className=\"p-6\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n                      <div>\n                        <h4 className=\"text-md font-semibold text-freedoc-dark\">Email Service</h4>\n                        <p className=\"text-sm text-freedoc-secondary\">Operational</p>\n                      </div>\n                    </div>\n                  </Card>\n\n                  <Card className=\"p-6\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n                      <div>\n                        <h4 className=\"text-md font-semibold text-freedoc-dark\">Authentication</h4>\n                        <p className=\"text-sm text-freedoc-secondary\">Operational</p>\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n\n                <Card className=\"p-6\">\n                  <h4 className=\"text-md font-semibold text-freedoc-dark mb-4\">Recent Activity</h4>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm text-freedoc-secondary\">All systems operational</p>\n                    <p className=\"text-sm text-freedoc-secondary\">Last system check: {new Date().toLocaleString()}</p>\n                    <p className=\"text-sm text-freedoc-secondary\">Uptime: 99.9%</p>\n                  </div>\n                </Card>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":17663},"client/src/pages/doctor-dashboard.tsx":{"content":"import { useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport {\n  ClipboardList,\n  Clock,\n  CheckCircle,\n  Users,\n  Timer,\n  LogOut,\n  Calendar,\n} from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\n\ntype Consultation = {\n  id: string;\n  patientId: string;\n  serviceType: string;\n  status: string;\n  requestData: any;\n  createdAt: string;\n  doctorNotes?: string;\n};\n\nexport default function DoctorDashboard() {\n  const { user, isLoading } = useAuth();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Redirect to login if not authenticated or not a doctor\n  useEffect(() => {\n    if (!isLoading && (!user || user.role !== \"doctor\")) {\n      toast({\n        title: \"Unauthorized\",\n        description: \"You are logged out. Logging in again...\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n      return;\n    }\n  }, [user, isLoading, toast]);\n\n  const { data: pendingConsultations = [], isLoading: consultationsLoading } = useQuery<Consultation[]>({\n    queryKey: [\"/api/consultations/pending\"],\n    retry: false,\n    refetchInterval: 30000, // Refetch every 30 seconds\n  });\n\n  const updateStatusMutation = useMutation({\n    mutationFn: async ({\n      consultationId,\n      status,\n      doctorNotes,\n    }: {\n      consultationId: string;\n      status: string;\n      doctorNotes?: string;\n    }) => {\n      const response = await apiRequest(\"PATCH\", `/api/consultations/${consultationId}/status`, {\n        status,\n        doctorNotes,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Status Updated\",\n        description: \"Consultation status has been updated successfully.\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/consultations/pending\"] });\n    },\n    onError: (error: Error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Update Failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleStatusUpdate = (consultationId: string, status: string, doctorNotes?: string) => {\n    updateStatusMutation.mutate({ consultationId, status, doctorNotes });\n  };\n\n  const getServiceIcon = (serviceType: string) => {\n    switch (serviceType) {\n      case \"prescription\":\n        return \"💊\";\n      case \"medical_certificate\":\n        return \"📄\";\n      case \"telehealth\":\n        return \"📹\";\n      case \"mental_health\":\n        return \"❤️\";\n      case \"pathology\":\n        return \"🔬\";\n      default:\n        return \"📋\";\n    }\n  };\n\n  if (isLoading || !user) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"bg-freedoc-blue text-white p-4 rounded-lg w-fit mx-auto mb-4\">\n            <div className=\"h-8 w-8 animate-spin border-2 border-white border-t-transparent rounded-full\"></div>\n          </div>\n          <p className=\"text-freedoc-secondary\">Loading dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Dashboard Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-freedoc-dark\">Doctor Dashboard</h1>\n              <p className=\"text-freedoc-secondary\">\n                Dr.{\" \"}\n                <span className=\"font-medium\" data-testid=\"text-doctor-name\">\n                  {user.firstName} {user.lastName}\n                </span>{\" \"}\n                - General Practitioner\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Badge className=\"bg-green-100 text-green-800\">Online</Badge>\n              <Button\n                variant=\"ghost\"\n                onClick={() => (window.location.href = \"/api/logout\")}\n                className=\"text-freedoc-secondary hover:text-freedoc-blue\"\n                data-testid=\"button-logout\"\n              >\n                <LogOut className=\"h-5 w-5\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Stats Cards */}\n        <div className=\"grid md:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-freedoc-secondary text-sm\">Pending Consultations</p>\n                  <p className=\"text-2xl font-bold text-freedoc-dark\" data-testid=\"text-pending-count\">\n                    {pendingConsultations.length}\n                  </p>\n                </div>\n                <div className=\"bg-orange-100 text-orange-600 p-2 rounded-lg\">\n                  <Clock className=\"h-5 w-5\" />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-freedoc-secondary text-sm\">Completed Today</p>\n                  <p className=\"text-2xl font-bold text-freedoc-dark\">0</p>\n                </div>\n                <div className=\"bg-green-100 text-green-600 p-2 rounded-lg\">\n                  <CheckCircle className=\"h-5 w-5\" />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-freedoc-secondary text-sm\">Total Patients</p>\n                  <p className=\"text-2xl font-bold text-freedoc-dark\">0</p>\n                </div>\n                <div className=\"bg-blue-100 text-freedoc-blue p-2 rounded-lg\">\n                  <Users className=\"h-5 w-5\" />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-freedoc-secondary text-sm\">Avg Response Time</p>\n                  <p className=\"text-2xl font-bold text-freedoc-dark\">-</p>\n                </div>\n                <div className=\"bg-purple-100 text-purple-600 p-2 rounded-lg\">\n                  <Timer className=\"h-5 w-5\" />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Consultation Queue */}\n        <Card className=\"shadow-sm\">\n          <div className=\"p-6 border-b\">\n            <h2 className=\"text-xl font-semibold text-freedoc-dark\">Consultation Queue</h2>\n          </div>\n          <CardContent className=\"p-6\">\n            {consultationsLoading ? (\n              <div className=\"text-center py-8\">\n                <div className=\"h-8 w-8 animate-spin border-2 border-freedoc-blue border-t-transparent rounded-full mx-auto mb-4\"></div>\n                <p className=\"text-freedoc-secondary\">Loading consultations...</p>\n              </div>\n            ) : pendingConsultations.length === 0 ? (\n              <div className=\"text-center text-freedoc-secondary py-8\">\n                <ClipboardList className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <p>No pending consultations at the moment.</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {pendingConsultations.map((consultation) => (\n                  <ConsultationCard\n                    key={consultation.id}\n                    consultation={consultation}\n                    onStatusUpdate={handleStatusUpdate}\n                    isUpdating={updateStatusMutation.isPending}\n                  />\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nfunction ConsultationCard({\n  consultation,\n  onStatusUpdate,\n  isUpdating,\n}: {\n  consultation: Consultation;\n  onStatusUpdate: (id: string, status: string, notes?: string) => void;\n  isUpdating: boolean;\n}) {\n  const getServiceIcon = (serviceType: string) => {\n    switch (serviceType) {\n      case \"prescription\":\n        return \"💊\";\n      case \"medical_certificate\":\n        return \"📄\";\n      case \"telehealth\":\n        return \"📹\";\n      case \"mental_health\":\n        return \"❤️\";\n      case \"pathology\":\n        return \"🔬\";\n      default:\n        return \"📋\";\n    }\n  };\n\n  return (\n    <div className=\"border border-gray-200 rounded-lg p-4\" data-testid={`consultation-card-${consultation.id}`}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"text-2xl\">{getServiceIcon(consultation.serviceType)}</div>\n          <div>\n            <h4 className=\"font-semibold text-freedoc-dark\">\n              {consultation.serviceType.replace(\"_\", \" \").toUpperCase()} Request\n            </h4>\n            <p className=\"text-sm text-freedoc-secondary\">\n              Submitted: {new Date(consultation.createdAt).toLocaleDateString()}\n            </p>\n          </div>\n        </div>\n        <div className=\"flex space-x-2\">\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => onStatusUpdate(consultation.id, \"in_progress\")}\n            disabled={isUpdating}\n            className=\"text-blue-600 border-blue-600 hover:bg-blue-50\"\n            data-testid={`button-in-progress-${consultation.id}`}\n          >\n            In Progress\n          </Button>\n          <Button\n            size=\"sm\"\n            onClick={() => onStatusUpdate(consultation.id, \"completed\")}\n            disabled={isUpdating}\n            className=\"bg-green-600 hover:bg-green-700 text-white\"\n            data-testid={`button-complete-${consultation.id}`}\n          >\n            Complete\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"space-y-2 text-sm text-freedoc-dark\">\n        <h5 className=\"font-medium\">Request Details:</h5>\n        {Object.entries(consultation.requestData)\n          .filter(([key, value]) => key !== \"service_type\" && value)\n          .map(([key, value]) => (\n            <div key={key} className=\"flex\">\n              <strong className=\"capitalize w-32 flex-shrink-0\">\n                {key.replace(\"_\", \" \")}:\n              </strong>\n              <span className=\"flex-1\">{value as string}</span>\n            </div>\n          ))}\n      </div>\n\n      <div className=\"mt-4\">\n        <label className=\"block text-sm font-medium text-freedoc-dark mb-2\">\n          Doctor Notes (Optional)\n        </label>\n        <Textarea\n          placeholder=\"Add notes for the patient...\"\n          className=\"w-full\"\n          id={`notes-${consultation.id}`}\n          data-testid={`textarea-notes-${consultation.id}`}\n        />\n      </div>\n    </div>\n  );\n}\n","size_bytes":11912},"client/src/pages/how-it-works.tsx":{"content":"import { Navbar } from \"@/components/layout/navbar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Link } from \"wouter\";\nimport {\n  Check,\n  Shield,\n  Clock,\n  Users,\n  Star,\n  ArrowRight,\n} from \"lucide-react\";\n\nexport default function HowItWorks() {\n  const steps = [\n    {\n      number: 1,\n      title: \"Create Your Secure Account\",\n      description: \"Sign up with your email and verify your identity through our secure OTP system. Your medical information is protected with bank-level encryption and complies with Australian privacy laws.\",\n      features: [\n        \"Email verification via secure OTP\",\n        \"Bank-level security encryption\",\n        \"HIPAA-compliant data handling\",\n      ],\n      illustration: (\n        <div className=\"bg-freedoc-light rounded-xl p-8\">\n          <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n            <div className=\"h-4 bg-gray-200 rounded mb-3\"></div>\n            <div className=\"h-4 bg-gray-200 rounded mb-6 w-3/4\"></div>\n            <div className=\"flex space-x-2 mb-4\">\n              <div className=\"w-8 h-8 bg-freedoc-blue rounded\"></div>\n              <div className=\"w-8 h-8 bg-gray-200 rounded\"></div>\n              <div className=\"w-8 h-8 bg-gray-200 rounded\"></div>\n            </div>\n            <div className=\"h-10 bg-freedoc-blue rounded\"></div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      number: 2,\n      title: \"Choose Your Healthcare Service\",\n      description: \"Select from our comprehensive range of services and provide your medical details through our secure forms. Our intelligent system matches you with the most suitable Australian Partner Doctor.\",\n      features: [\n        \"5 specialized healthcare services\",\n        \"Smart doctor matching algorithm\",\n        \"Equal workload distribution\",\n      ],\n      illustration: (\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n            <div className=\"text-2xl mb-2\">💊</div>\n            <p className=\"text-sm font-medium\">Prescriptions</p>\n          </div>\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <div className=\"text-2xl mb-2\">📄</div>\n            <p className=\"text-sm font-medium\">Certificates</p>\n          </div>\n          <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n            <div className=\"text-2xl mb-2\">📹</div>\n            <p className=\"text-sm font-medium\">Telehealth</p>\n          </div>\n          <div className=\"bg-red-50 p-4 rounded-lg text-center\">\n            <div className=\"text-2xl mb-2\">❤️</div>\n            <p className=\"text-sm font-medium\">Mental Health</p>\n          </div>\n        </div>\n      ),\n    },\n    {\n      number: 3,\n      title: \"Receive Professional Care\",\n      description: \"Your assigned Australian Partner Doctor reviews your case and provides the necessary healthcare service. Download your prescriptions, certificates, or schedule follow-up consultations - all completely free.\",\n      features: [\n        \"Qualified Australian doctors\",\n        \"Fast response times\",\n        \"100% free service\",\n      ],\n      illustration: (\n        <div className=\"bg-freedoc-light rounded-xl p-8\">\n          <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"w-10 h-10 bg-freedoc-blue rounded-full flex items-center justify-center text-white text-sm font-bold mr-3\">\n                Dr\n              </div>\n              <div>\n                <div className=\"h-3 bg-gray-300 rounded w-20 mb-1\"></div>\n                <div className=\"h-2 bg-gray-200 rounded w-16\"></div>\n              </div>\n            </div>\n            <div className=\"space-y-2 mb-4\">\n              <div className=\"h-3 bg-gray-200 rounded\"></div>\n              <div className=\"h-3 bg-gray-200 rounded w-4/5\"></div>\n              <div className=\"h-3 bg-gray-200 rounded w-3/5\"></div>\n            </div>\n            <div className=\"h-8 bg-green-500 rounded text-white flex items-center justify-center text-sm\">\n              ✓ Prescription Ready\n            </div>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  const benefits = [\n    {\n      icon: <Shield className=\"h-6 w-6\" />,\n      title: \"100% Secure\",\n      description: \"Your medical data is protected with enterprise-grade security and encryption.\",\n    },\n    {\n      icon: <Clock className=\"h-6 w-6\" />,\n      title: \"Fast Response\",\n      description: \"Most consultations are reviewed within 24 hours by qualified doctors.\",\n    },\n    {\n      icon: <Users className=\"h-6 w-6\" />,\n      title: \"Licensed Doctors\",\n      description: \"All our partner doctors are licensed practitioners in Australia.\",\n    },\n    {\n      icon: <Star className=\"h-6 w-6\" />,\n      title: \"Free Service\",\n      description: \"Completely free consultations with no hidden fees or charges.\",\n    },\n  ];\n\n  const services = [\n    {\n      name: \"Online Prescriptions\",\n      description: \"Renew your regular medications quickly and easily online.\",\n      included: [\"Script renewals\", \"Medication reviews\", \"Digital prescriptions\"],\n    },\n    {\n      name: \"Medical Certificates\",\n      description: \"Get medical certificates for work, study, or other requirements.\",\n      included: [\"Sick leave certificates\", \"Fitness to work\", \"Study exemptions\"],\n    },\n    {\n      name: \"Mental Health Support\",\n      description: \"Access mental health care plans and support services.\",\n      included: [\"Care plan creation\", \"Counseling referrals\", \"Medication reviews\"],\n    },\n    {\n      name: \"Telehealth Consultations\",\n      description: \"Video consultations with Australian partner doctors.\",\n      included: [\"General consultations\", \"Follow-up appointments\", \"Health assessments\"],\n    },\n    {\n      name: \"Pathology Referrals\",\n      description: \"Get referrals for blood tests and other pathology services.\",\n      included: [\"Blood work referrals\", \"Health screenings\", \"Diagnostic tests\"],\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navbar />\n\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-freedoc-blue to-freedoc-blue/80 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <div className=\"max-w-3xl mx-auto\">\n            <h1 className=\"text-5xl md:text-6xl font-bold mb-6\">\n              How FreeDoc Works\n            </h1>\n            <p className=\"text-xl mb-8 text-blue-100\">\n              Our streamlined process makes accessing quality healthcare simple, fast, and completely free for all Australians.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Detailed Process Steps */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"space-y-24\">\n            {steps.map((step, index) => (\n              <div\n                key={step.number}\n                className={`flex flex-col lg:flex-row items-center space-y-8 lg:space-y-0 lg:space-x-12 ${\n                  index % 2 === 1 ? 'lg:flex-row-reverse lg:space-x-reverse' : ''\n                }`}\n              >\n                <div className=\"lg:w-1/2\">\n                  <div className=\"bg-freedoc-blue text-white w-16 h-16 rounded-full flex items-center justify-center text-2xl font-bold mb-6\">\n                    {step.number}\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-freedoc-dark mb-4\">\n                    {step.title}\n                  </h3>\n                  <p className=\"text-freedoc-secondary mb-6\">\n                    {step.description}\n                  </p>\n                  <ul className=\"space-y-2 text-freedoc-secondary\">\n                    {step.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center\">\n                        <Check className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"lg:w-1/2\">\n                  {step.illustration}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Benefits Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-freedoc-dark mb-4\">\n              Why Choose FreeDoc?\n            </h2>\n            <p className=\"text-xl text-freedoc-secondary\">\n              Trusted by thousands of Australians for quality healthcare\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {benefits.map((benefit, index) => (\n              <Card key={index} className=\"text-center hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-6\">\n                  <div className=\"bg-freedoc-blue text-white p-3 rounded-lg w-fit mx-auto mb-4\">\n                    {benefit.icon}\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-freedoc-dark mb-2\">\n                    {benefit.title}\n                  </h3>\n                  <p className=\"text-freedoc-secondary\">\n                    {benefit.description}\n                  </p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Services Breakdown */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-freedoc-dark mb-4\">\n              Complete Healthcare Services\n            </h2>\n            <p className=\"text-xl text-freedoc-secondary\">\n              Everything you need for your healthcare journey\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {services.map((service, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-lg font-semibold text-freedoc-dark mb-3\">\n                    {service.name}\n                  </h3>\n                  <p className=\"text-freedoc-secondary mb-4\">\n                    {service.description}\n                  </p>\n                  <ul className=\"space-y-2\">\n                    {service.included.map((item, itemIndex) => (\n                      <li key={itemIndex} className=\"flex items-center text-sm text-freedoc-secondary\">\n                        <Check className=\"h-4 w-4 text-green-500 mr-2 flex-shrink-0\" />\n                        {item}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-freedoc-dark mb-4\">\n              Frequently Asked Questions\n            </h2>\n          </div>\n\n          <div className=\"space-y-8\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-freedoc-dark mb-2\">\n                  Is FreeDoc really free?\n                </h3>\n                <p className=\"text-freedoc-secondary\">\n                  Yes! All our consultations and services are completely free. There are no hidden fees, subscription charges, or costs to patients.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-freedoc-dark mb-2\">\n                  Are your doctors qualified?\n                </h3>\n                <p className=\"text-freedoc-secondary\">\n                  All our partner doctors are fully licensed medical practitioners registered with AHPRA (Australian Health Practitioner Regulation Agency).\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-freedoc-dark mb-2\">\n                  How long does it take to get a response?\n                </h3>\n                <p className=\"text-freedoc-secondary\">\n                  Most consultations are reviewed within 24 hours. Urgent cases are prioritized and may be reviewed sooner.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-freedoc-dark mb-2\">\n                  Is my medical information secure?\n                </h3>\n                <p className=\"text-freedoc-secondary\">\n                  Yes, we use bank-level encryption and comply with Australian privacy laws and HIPAA standards to protect your medical information.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-freedoc-blue\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold text-white mb-4\">\n            Ready to Get Started?\n          </h2>\n          <p className=\"text-xl text-blue-100 mb-8\">\n            Join thousands of Australians who trust FreeDoc for their healthcare needs\n          </p>\n          <Link href=\"/register\">\n            <Button\n              size=\"lg\"\n              className=\"bg-white text-freedoc-blue hover:bg-gray-50 text-lg px-8 py-4\"\n              data-testid=\"button-get-started\"\n            >\n              Create Free Account\n              <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Button>\n          </Link>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":14358},"client/src/pages/landing.tsx":{"content":"import { Navbar } from \"@/components/layout/navbar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Link } from \"wouter\";\nimport {\n  Stethoscope,\n  Pill,\n  FileText,\n  Heart,\n  Video,\n  Microscope,\n  HelpCircle,\n  CheckCircle,\n} from \"lucide-react\";\n\nexport default function Landing() {\n  const services = [\n    {\n      icon: Pill,\n      title: \"Online Prescriptions\",\n      description: \"Renew your scripts online quickly and easily.\",\n      href: \"/register\",\n      color: \"bg-blue-100 text-freedoc-blue\",\n    },\n    {\n      icon: FileText,\n      title: \"Medical Certificates\",\n      description: \"Get medical certificates for work or study.\",\n      href: \"/register\",\n      color: \"bg-green-100 text-green-600\",\n    },\n    {\n      icon: Heart,\n      title: \"Mental Health Support\",\n      description: \"Access mental health care plans and support.\",\n      href: \"/register\",\n      color: \"bg-red-100 text-red-600\",\n    },\n    {\n      icon: Video,\n      title: \"Telehealth Consults\",\n      description: \"Speak to an Australian Partner Doctor online.\",\n      href: \"/register\",\n      color: \"bg-purple-100 text-purple-600\",\n    },\n    {\n      icon: Microscope,\n      title: \"Pathology Referrals\",\n      description: \"Online referrals for a range of pathology tests.\",\n      href: \"/register\",\n      color: \"bg-orange-100 text-orange-600\",\n    },\n    {\n      icon: HelpCircle,\n      title: \"How It Works\",\n      description: \"Learn how our online services operate.\",\n      href: \"/how-it-works\",\n      color: \"bg-freedoc-blue text-white\",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navbar />\n\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-freedoc-blue to-freedoc-blue/80 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <div className=\"max-w-3xl mx-auto\">\n            <h1 className=\"text-5xl md:text-6xl font-bold mb-6\">\n              Healthcare Made<br />\n              <span className=\"text-yellow-300\">Simple & Free</span>\n            </h1>\n            <p className=\"text-xl mb-8 text-blue-100\">\n              Connect with Australian Partner Doctors for prescriptions, medical certificates, and more — all from the comfort of your home, completely free of charge.\n            </p>\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-lg p-6 mb-8\">\n              <div className=\"flex items-center justify-center space-x-2 text-lg font-semibold\">\n                <CheckCircle className=\"h-6 w-6 text-green-300\" />\n                <span>100% Free Consultations & Services</span>\n              </div>\n            </div>\n            <Link href=\"/register\">\n              <Button\n                size=\"lg\"\n                className=\"bg-white text-freedoc-blue hover:bg-gray-50 text-lg px-8 py-4\"\n                data-testid=\"button-start-consultation\"\n              >\n                Start Free Consultation\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Services Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-freedoc-dark mb-4\">How We Can Help You</h2>\n            <p className=\"text-xl text-freedoc-secondary\">\n              Choose from our comprehensive range of free online healthcare services\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {services.map((service, index) => (\n              <Link key={index} href={service.href}>\n                <Card className=\"hover:shadow-lg transition-shadow cursor-pointer bg-freedoc-light border-none\">\n                  <CardContent className=\"p-6\">\n                    <div className={`${service.color} p-3 rounded-lg w-fit mb-4`}>\n                      <service.icon className=\"h-6 w-6\" />\n                    </div>\n                    <h3 className=\"text-xl font-semibold text-freedoc-dark mb-2\">\n                      {service.title}\n                    </h3>\n                    <p className=\"text-freedoc-secondary mb-4\">{service.description}</p>\n                    <span className=\"text-freedoc-blue font-medium hover:underline\">\n                      Learn More →\n                    </span>\n                  </CardContent>\n                </Card>\n              </Link>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* How It Works Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-freedoc-dark mb-4\">Simple 3-Step Process</h2>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div className=\"text-center\">\n              <div className=\"bg-freedoc-blue text-white w-16 h-16 rounded-full flex items-center justify-center text-2xl font-bold mx-auto mb-6\">\n                1\n              </div>\n              <h3 className=\"text-xl font-semibold text-freedoc-dark mb-4\">Sign Up & Verify</h3>\n              <p className=\"text-freedoc-secondary\">\n                Create your free account with email verification for secure access to healthcare services.\n              </p>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"bg-freedoc-blue text-white w-16 h-16 rounded-full flex items-center justify-center text-2xl font-bold mx-auto mb-6\">\n                2\n              </div>\n              <h3 className=\"text-xl font-semibold text-freedoc-dark mb-4\">Book Consultation</h3>\n              <p className=\"text-freedoc-secondary\">\n                Choose your service and provide medical details. Get matched with an Australian partner doctor.\n              </p>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"bg-freedoc-blue text-white w-16 h-16 rounded-full flex items-center justify-center text-2xl font-bold mx-auto mb-6\">\n                3\n              </div>\n              <h3 className=\"text-xl font-semibold text-freedoc-dark mb-4\">Receive Care</h3>\n              <p className=\"text-freedoc-secondary\">\n                Get your prescriptions, certificates, or consultation completely free with no hidden costs.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":6592},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/otp-verification.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { MailCheck } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nexport default function OTPVerification() {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const [otp, setOtp] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [email, setEmail] = useState(\"\");\n  const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\n\n  useEffect(() => {\n    const storedEmail = sessionStorage.getItem(\"otpEmail\");\n    if (!storedEmail) {\n      setLocation(\"/register\");\n      return;\n    }\n    setEmail(storedEmail);\n  }, [setLocation]);\n\n  const verifyOtpMutation = useMutation({\n    mutationFn: async ({ email, otp }: { email: string; otp: string }) => {\n      const response = await apiRequest(\"POST\", \"/api/auth/verify-otp\", { email, otp });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Email Verified!\",\n        description: \"Your account has been created successfully. Please sign in to continue.\",\n      });\n      sessionStorage.removeItem(\"otpEmail\");\n      // Redirect to Replit Auth login\n      window.location.href = \"/api/login\";\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Verification Failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n      // Clear OTP inputs on error\n      setOtp([\"\", \"\", \"\", \"\", \"\", \"\"]);\n      inputRefs.current[0]?.focus();\n    },\n  });\n\n  const resendOtpMutation = useMutation({\n    mutationFn: async (email: string) => {\n      const response = await apiRequest(\"POST\", \"/api/auth/resend-otp\", { email });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"OTP Resent\",\n        description: \"A new verification code has been sent to your email.\",\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Resend Failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleOtpChange = (index: number, value: string) => {\n    if (!/^\\d*$/.test(value)) return; // Only allow digits\n\n    const newOtp = [...otp];\n    newOtp[index] = value;\n    setOtp(newOtp);\n\n    // Auto-focus next input\n    if (value && index < 5) {\n      inputRefs.current[index + 1]?.focus();\n    }\n\n    // Auto-submit when all fields are filled\n    if (newOtp.every(digit => digit !== \"\") && value) {\n      const otpString = newOtp.join(\"\");\n      verifyOtpMutation.mutate({ email, otp: otpString });\n    }\n  };\n\n  const handleKeyDown = (index: number, e: React.KeyboardEvent) => {\n    if (e.key === \"Backspace\" && !otp[index] && index > 0) {\n      inputRefs.current[index - 1]?.focus();\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const otpString = otp.join(\"\");\n    if (otpString.length === 6) {\n      verifyOtpMutation.mutate({ email, otp: otpString });\n    } else {\n      toast({\n        title: \"Invalid OTP\",\n        description: \"Please enter all 6 digits\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleResendOtp = () => {\n    resendOtpMutation.mutate(email);\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8 bg-gray-50\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"bg-green-500 text-white p-3 rounded-lg w-fit mx-auto mb-4\">\n            <MailCheck className=\"h-8 w-8\" />\n          </div>\n          <h2 className=\"text-3xl font-bold text-freedoc-dark\">Verify Your Email</h2>\n          <p className=\"text-freedoc-secondary mt-2\">\n            We've sent a 6-digit code to{\" \"}\n            <span className=\"font-medium text-freedoc-dark\" data-testid=\"text-email\">\n              {email}\n            </span>\n          </p>\n        </div>\n\n        <Card className=\"border-none shadow-lg\">\n          <CardContent className=\"p-6\">\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-freedoc-dark mb-4 text-center\">\n                  Enter Verification Code\n                </label>\n                <div className=\"flex justify-center space-x-2\">\n                  {otp.map((digit, index) => (\n                    <Input\n                      key={index}\n                      ref={(el) => {\n                        inputRefs.current[index] = el;\n                      }}\n                      type=\"text\"\n                      inputMode=\"numeric\"\n                      maxLength={1}\n                      value={digit}\n                      onChange={(e) => handleOtpChange(index, e.target.value)}\n                      onKeyDown={(e) => handleKeyDown(index, e)}\n                      className=\"w-12 h-12 text-center text-lg font-bold border-2 focus:border-freedoc-blue\"\n                      data-testid={`input-otp-${index}`}\n                    />\n                  ))}\n                </div>\n              </div>\n\n              <Button\n                type=\"submit\"\n                className=\"w-full bg-freedoc-blue hover:bg-freedoc-blue/90\"\n                disabled={verifyOtpMutation.isPending || otp.some(digit => !digit)}\n                data-testid=\"button-verify-email\"\n              >\n                {verifyOtpMutation.isPending ? \"Verifying...\" : \"Verify Email\"}\n              </Button>\n            </form>\n\n            <div className=\"text-center space-y-2 mt-6\">\n              <p className=\"text-sm text-freedoc-secondary\">Didn't receive the code?</p>\n              <Button\n                variant=\"ghost\"\n                onClick={handleResendOtp}\n                disabled={resendOtpMutation.isPending}\n                className=\"text-freedoc-blue hover:text-freedoc-blue/80\"\n                data-testid=\"button-resend-code\"\n              >\n                {resendOtpMutation.isPending ? \"Resending...\" : \"Resend Code\"}\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6360},"client/src/pages/patient-dashboard.tsx":{"content":"import { useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Calendar, Pill, FileText, Video, Heart, LogOut, Download } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ServiceFormModal } from \"@/components/ui/service-form-modal\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\n\ntype Consultation = {\n  id: string;\n  serviceType: string;\n  status: string;\n  requestData: any;\n  createdAt: string;\n  doctorNotes?: string;\n};\n\nexport default function PatientDashboard() {\n  const { user, isLoading } = useAuth();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Redirect to login if not authenticated\n  useEffect(() => {\n    if (!isLoading && !user) {\n      toast({\n        title: \"Unauthorized\",\n        description: \"You are logged out. Logging in again...\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n      return;\n    }\n  }, [user, isLoading, toast]);\n\n  const { data: consultations = [], isLoading: consultationsLoading } = useQuery<Consultation[]>({\n    queryKey: [\"/api/consultations/patient\"],\n    retry: false,\n  });\n\n  const createConsultationMutation = useMutation({\n    mutationFn: async ({ serviceType, formData }: { serviceType: string; formData: any }) => {\n      const response = await apiRequest(\"POST\", \"/api/consultations\", { serviceType, formData });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Request Submitted\",\n        description: \"Your consultation request has been submitted successfully!\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/consultations/patient\"] });\n    },\n    onError: (error: Error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Request Failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"pending\":\n        return \"bg-orange-100 text-orange-800\";\n      case \"assigned\":\n      case \"in_progress\":\n        return \"bg-blue-100 text-blue-800\";\n      case \"completed\":\n        return \"bg-green-100 text-green-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const getServiceIcon = (serviceType: string) => {\n    switch (serviceType) {\n      case \"prescription\":\n        return <Pill className=\"h-5 w-5\" />;\n      case \"medical_certificate\":\n        return <FileText className=\"h-5 w-5\" />;\n      case \"telehealth\":\n        return <Video className=\"h-5 w-5\" />;\n      case \"mental_health\":\n        return <Heart className=\"h-5 w-5\" />;\n      default:\n        return <Calendar className=\"h-5 w-5\" />;\n    }\n  };\n\n  const quickActions = [\n    {\n      title: \"New Prescription\",\n      description: \"Request script renewal\",\n      icon: <Pill className=\"h-5 w-5\" />,\n      color: \"bg-blue-100 text-freedoc-blue\",\n      serviceType: \"prescription\",\n    },\n    {\n      title: \"Medical Certificate\",\n      description: \"Get work/study certificate\",\n      icon: <FileText className=\"h-5 w-5\" />,\n      color: \"bg-green-100 text-green-600\",\n      serviceType: \"medical_certificate\",\n    },\n    {\n      title: \"Video Consultation\",\n      description: \"Book telehealth session\",\n      icon: <Video className=\"h-5 w-5\" />,\n      color: \"bg-purple-100 text-purple-600\",\n      serviceType: \"telehealth\",\n    },\n    {\n      title: \"Mental Health\",\n      description: \"Access support services\",\n      icon: <Heart className=\"h-5 w-5\" />,\n      color: \"bg-red-100 text-red-600\",\n      serviceType: \"mental_health\",\n    },\n  ];\n\n  if (isLoading || !user) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"bg-freedoc-blue text-white p-4 rounded-lg w-fit mx-auto mb-4\">\n            <div className=\"h-8 w-8 animate-spin border-2 border-white border-t-transparent rounded-full\"></div>\n          </div>\n          <p className=\"text-freedoc-secondary\">Loading dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Dashboard Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-freedoc-dark\">Patient Dashboard</h1>\n              <p className=\"text-freedoc-secondary\">\n                Welcome back,{\" \"}\n                <span className=\"font-medium\" data-testid=\"text-patient-name\">\n                  {user.firstName} {user.lastName}\n                </span>\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Button\n                variant=\"ghost\"\n                onClick={() => (window.location.href = \"/api/logout\")}\n                className=\"text-freedoc-secondary hover:text-freedoc-blue\"\n                data-testid=\"button-logout\"\n              >\n                <LogOut className=\"h-5 w-5\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Quick Actions */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          {quickActions.map((action, index) => (\n            <ServiceFormModal\n              key={index}\n              serviceType={action.serviceType}\n              onSubmit={(formData) =>\n                createConsultationMutation.mutate({\n                  serviceType: action.serviceType,\n                  formData,\n                })\n              }\n              isLoading={createConsultationMutation.isPending}\n            >\n              <Card className=\"hover:shadow-md transition-shadow cursor-pointer\">\n                <CardContent className=\"p-6 text-left\">\n                  <div className={`${action.color} p-2 rounded-lg w-fit mb-3`}>\n                    {action.icon}\n                  </div>\n                  <h3 className=\"font-semibold text-freedoc-dark mb-1\" data-testid={`text-${action.serviceType}-title`}>\n                    {action.title}\n                  </h3>\n                  <p className=\"text-sm text-freedoc-secondary\">{action.description}</p>\n                </CardContent>\n              </Card>\n            </ServiceFormModal>\n          ))}\n        </div>\n\n        {/* Recent Consultations */}\n        <Card className=\"shadow-sm\">\n          <div className=\"p-6 border-b\">\n            <h2 className=\"text-xl font-semibold text-freedoc-dark\">Recent Consultations</h2>\n          </div>\n          <CardContent className=\"p-6\">\n            {consultationsLoading ? (\n              <div className=\"text-center py-8\">\n                <div className=\"h-8 w-8 animate-spin border-2 border-freedoc-blue border-t-transparent rounded-full mx-auto mb-4\"></div>\n                <p className=\"text-freedoc-secondary\">Loading consultations...</p>\n              </div>\n            ) : consultations.length === 0 ? (\n              <div className=\"text-center text-freedoc-secondary py-8\">\n                <Calendar className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <p>No consultations yet. Book your first free consultation above!</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {consultations.map((consultation) => (\n                  <div\n                    key={consultation.id}\n                    className=\"border border-gray-200 rounded-lg p-4\"\n                    data-testid={`consultation-${consultation.id}`}\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex items-center space-x-2\">\n                        <div className=\"bg-gray-100 p-2 rounded\">\n                          {getServiceIcon(consultation.serviceType)}\n                        </div>\n                        <h4 className=\"font-semibold text-freedoc-dark capitalize\">\n                          {consultation.serviceType.replace(\"_\", \" \")} Request\n                        </h4>\n                      </div>\n                      <Badge\n                        className={getStatusColor(consultation.status)}\n                        data-testid={`status-${consultation.id}`}\n                      >\n                        {consultation.status.replace(\"_\", \" \").toUpperCase()}\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm text-freedoc-secondary mb-2\">\n                      Submitted: {new Date(consultation.createdAt).toLocaleDateString()}\n                    </p>\n                    {consultation.doctorNotes && (\n                      <p className=\"text-sm text-freedoc-dark mb-2\">\n                        <strong>Doctor Notes:</strong> {consultation.doctorNotes}\n                      </p>\n                    )}\n                    {consultation.status === \"completed\" && (\n                      <div className=\"mt-3 flex space-x-2\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          className=\"text-freedoc-blue border-freedoc-blue hover:bg-freedoc-blue hover:text-white\"\n                          data-testid={`button-download-${consultation.id}`}\n                        >\n                          <Download className=\"h-4 w-4 mr-1\" />\n                          Download Result\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":10431},"client/src/pages/register.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Link, useLocation } from \"wouter\";\nimport { UserPlus } from \"lucide-react\";\nimport { z } from \"zod\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nconst registrationSchema = z.object({\n  email: z.string().email(\"Invalid email format\"),\n  firstName: z.string().min(1, \"First name is required\"),\n  lastName: z.string().min(1, \"Last name is required\"),\n  dateOfBirth: z.string().min(1, \"Date of birth is required\"),\n  medicareNumber: z.string().optional(),\n  phoneNumber: z.string().optional(),\n  agreeToTerms: z.boolean().refine((val) => val === true, \"You must agree to the terms\"),\n});\n\ntype RegistrationFormData = z.infer<typeof registrationSchema>;\n\nexport default function Register() {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n\n  const form = useForm<RegistrationFormData>({\n    resolver: zodResolver(registrationSchema),\n    defaultValues: {\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      dateOfBirth: \"\",\n      medicareNumber: \"\",\n      phoneNumber: \"\",\n      agreeToTerms: false,\n    },\n  });\n\n  const registerMutation = useMutation({\n    mutationFn: async (data: Omit<RegistrationFormData, \"agreeToTerms\">) => {\n      const response = await apiRequest(\"POST\", \"/api/auth/register\", data);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Registration Successful\",\n        description: `We've sent a verification code to ${data.email}`,\n      });\n      // Store email for OTP verification\n      sessionStorage.setItem(\"otpEmail\", data.email);\n      setLocation(\"/verify-otp\");\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Registration Failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: RegistrationFormData) => {\n    const { agreeToTerms, ...registrationData } = data;\n    registerMutation.mutate(registrationData);\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8 bg-gray-50\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"bg-freedoc-blue text-white p-3 rounded-lg w-fit mx-auto mb-4\">\n            <UserPlus className=\"h-8 w-8\" />\n          </div>\n          <h2 className=\"text-3xl font-bold text-freedoc-dark\">Create Your Account</h2>\n          <p className=\"text-freedoc-secondary mt-2\">\n            Join thousands of Australians accessing free healthcare\n          </p>\n        </div>\n\n        <Card className=\"border-none shadow-lg\">\n          <CardContent className=\"p-6\">\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <FormField\n                    control={form.control}\n                    name=\"firstName\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>First Name</FormLabel>\n                        <FormControl>\n                          <Input\n                            {...field}\n                            placeholder=\"John\"\n                            data-testid=\"input-first-name\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"lastName\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Last Name</FormLabel>\n                        <FormControl>\n                          <Input\n                            {...field}\n                            placeholder=\"Smith\"\n                            data-testid=\"input-last-name\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Email Address</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type=\"email\"\n                          placeholder=\"john@example.com\"\n                          data-testid=\"input-email\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"dateOfBirth\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Date of Birth</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type=\"date\"\n                          data-testid=\"input-date-of-birth\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"medicareNumber\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Medicare Number (Optional)</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          placeholder=\"1234 56789 0\"\n                          data-testid=\"input-medicare-number\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"phoneNumber\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Phone Number (Optional)</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type=\"tel\"\n                          placeholder=\"0412 345 678\"\n                          data-testid=\"input-phone-number\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"agreeToTerms\"\n                  render={({ field }) => (\n                    <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                      <FormControl>\n                        <Checkbox\n                          checked={field.value}\n                          onCheckedChange={field.onChange}\n                          data-testid=\"checkbox-agree-terms\"\n                        />\n                      </FormControl>\n                      <div className=\"space-y-1 leading-none\">\n                        <FormLabel className=\"text-sm text-freedoc-secondary\">\n                          I agree to the{\" \"}\n                          <Link href=\"/terms\" className=\"text-freedoc-blue hover:underline\">\n                            Terms of Service\n                          </Link>{\" \"}\n                          and{\" \"}\n                          <Link href=\"/privacy\" className=\"text-freedoc-blue hover:underline\">\n                            Privacy Policy\n                          </Link>\n                        </FormLabel>\n                        <FormMessage />\n                      </div>\n                    </FormItem>\n                  )}\n                />\n\n                <Button\n                  type=\"submit\"\n                  className=\"w-full bg-freedoc-blue hover:bg-freedoc-blue/90\"\n                  disabled={registerMutation.isPending}\n                  data-testid=\"button-create-account\"\n                >\n                  {registerMutation.isPending ? \"Creating Account...\" : \"Create Account\"}\n                </Button>\n              </form>\n            </Form>\n\n            <div className=\"text-center mt-6\">\n              <p className=\"text-sm text-freedoc-secondary\">\n                Already have an account?{\" \"}\n                <button\n                  onClick={() => (window.location.href = \"/api/login\")}\n                  className=\"text-freedoc-blue hover:underline font-medium\"\n                  data-testid=\"link-sign-in\"\n                >\n                  Sign in\n                </button>\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":9509},"client/src/components/layout/navbar.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { Stethoscope, Menu, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useAuth } from \"@/hooks/useAuth\";\n\nexport function Navbar() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const { isAuthenticated, user } = useAuth();\n\n  const toggleMenu = () => setIsMenuOpen(!isMenuOpen);\n\n  return (\n    <nav className=\"bg-white shadow-sm border-b border-gray-200 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <Link href=\"/\">\n            <div className=\"flex items-center space-x-2 cursor-pointer\" data-testid=\"link-home\">\n              <div className=\"bg-freedoc-blue text-white p-2 rounded-lg\">\n                <Stethoscope className=\"h-6 w-6\" />\n              </div>\n              <span className=\"text-2xl font-bold text-freedoc-dark\">FreeDoc</span>\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-6\">\n            <Link href=\"/how-it-works\">\n              <a className=\"nav-link\" data-testid=\"link-how-it-works\">\n                How It Works\n              </a>\n            </Link>\n            <Link href=\"/#services\">\n              <a className=\"nav-link\" data-testid=\"link-services\">\n                Services\n              </a>\n            </Link>\n            <a href=\"#about\" className=\"nav-link\" data-testid=\"link-about\">\n              About\n            </a>\n\n            {!isAuthenticated ? (\n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={() => (window.location.href = \"/api/login\")}\n                  className=\"text-freedoc-blue hover:text-freedoc-blue/80 font-medium transition-colors\"\n                  data-testid=\"button-sign-in\"\n                >\n                  Sign In\n                </button>\n                <Link href=\"/register\">\n                  <Button className=\"nav-button\" data-testid=\"button-get-started\">\n                    Get Started\n                  </Button>\n                </Link>\n              </div>\n            ) : (\n              <div className=\"flex items-center space-x-4\">\n                <span className=\"text-freedoc-secondary text-sm\">\n                  Welcome, {user?.firstName}\n                </span>\n                <Link href=\"/dashboard\">\n                  <Button variant=\"outline\" className=\"border-freedoc-blue text-freedoc-blue hover:bg-freedoc-blue hover:text-white\" data-testid=\"button-dashboard\">\n                    Dashboard\n                  </Button>\n                </Link>\n                <button\n                  onClick={() => (window.location.href = \"/api/logout\")}\n                  className=\"text-freedoc-secondary hover:text-freedoc-blue transition-colors\"\n                  data-testid=\"button-logout\"\n                >\n                  Logout\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={toggleMenu}\n              className=\"text-freedoc-secondary\"\n              data-testid=\"button-mobile-menu\"\n            >\n              {isMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </Button>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isMenuOpen && (\n          <div className=\"md:hidden border-t border-gray-200 py-4 fade-in\">\n            <div className=\"flex flex-col space-y-4\">\n              <Link href=\"/how-it-works\">\n                <a\n                  className=\"nav-link block py-2\"\n                  onClick={() => setIsMenuOpen(false)}\n                  data-testid=\"mobile-link-how-it-works\"\n                >\n                  How It Works\n                </a>\n              </Link>\n              <Link href=\"/#services\">\n                <a\n                  className=\"nav-link block py-2\"\n                  onClick={() => setIsMenuOpen(false)}\n                  data-testid=\"mobile-link-services\"\n                >\n                  Services\n                </a>\n              </Link>\n              <a\n                href=\"#about\"\n                className=\"nav-link block py-2\"\n                onClick={() => setIsMenuOpen(false)}\n                data-testid=\"mobile-link-about\"\n              >\n                About\n              </a>\n\n              <div className=\"border-t border-gray-200 pt-4\">\n                {!isAuthenticated ? (\n                  <div className=\"flex flex-col space-y-3\">\n                    <button\n                      onClick={() => {\n                        setIsMenuOpen(false);\n                        window.location.href = \"/api/login\";\n                      }}\n                      className=\"text-freedoc-blue hover:text-freedoc-blue/80 font-medium text-left\"\n                      data-testid=\"mobile-button-sign-in\"\n                    >\n                      Sign In\n                    </button>\n                    <Link href=\"/register\">\n                      <Button\n                        className=\"nav-button w-full\"\n                        onClick={() => setIsMenuOpen(false)}\n                        data-testid=\"mobile-button-get-started\"\n                      >\n                        Get Started\n                      </Button>\n                    </Link>\n                  </div>\n                ) : (\n                  <div className=\"flex flex-col space-y-3\">\n                    <span className=\"text-freedoc-secondary text-sm\">\n                      Welcome, {user?.firstName}\n                    </span>\n                    <Link href=\"/dashboard\">\n                      <Button\n                        variant=\"outline\"\n                        className=\"border-freedoc-blue text-freedoc-blue hover:bg-freedoc-blue hover:text-white w-full\"\n                        onClick={() => setIsMenuOpen(false)}\n                        data-testid=\"mobile-button-dashboard\"\n                      >\n                        Dashboard\n                      </Button>\n                    </Link>\n                    <button\n                      onClick={() => {\n                        setIsMenuOpen(false);\n                        window.location.href = \"/api/logout\";\n                      }}\n                      className=\"text-freedoc-secondary hover:text-freedoc-blue text-left\"\n                      data-testid=\"mobile-button-logout\"\n                    >\n                      Logout\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}\n","size_bytes":6875},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/service-form-modal.tsx":{"content":"import { useState, ReactNode } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\n// Service request schemas\nconst prescriptionSchema = z.object({\n  medication: z.string().min(1, \"Medication name is required\"),\n  dosage: z.string().min(1, \"Dosage is required\"),\n  previous_doctor: z.string().optional(),\n  reason: z.string().min(1, \"Reason is required\"),\n});\n\nconst medicalCertificateSchema = z.object({\n  certificate_type: z.enum([\"sick_leave\", \"fitness_to_work\", \"study_exemption\", \"general_medical\"]),\n  date_from: z.string().min(1, \"Start date is required\"),\n  date_to: z.string().min(1, \"End date is required\"),\n  symptoms: z.string().min(1, \"Symptoms are required\"),\n});\n\nconst mentalHealthSchema = z.object({\n  support_type: z.enum([\"mental_health_plan\", \"counseling_referral\", \"medication_review\", \"crisis_support\"]),\n  symptoms: z.string().optional(),\n  previous_treatment: z.string().optional(),\n});\n\nconst telehealthSchema = z.object({\n  consultation_type: z.enum([\"general\", \"follow_up\", \"chronic_disease\", \"preventive\"]),\n  preferred_time: z.enum([\"morning\", \"afternoon\", \"evening\", \"anytime\"]),\n  health_concerns: z.string().min(1, \"Health concerns are required\"),\n  current_medications: z.string().optional(),\n});\n\nconst pathologySchema = z.object({\n  test_type: z.enum([\"blood_work\", \"diabetes_screening\", \"cholesterol\", \"thyroid\", \"vitamin_d\", \"other\"]),\n  reason_for_test: z.string().min(1, \"Reason for test is required\"),\n  previous_tests: z.string().optional(),\n  preferred_lab: z.string().optional(),\n});\n\ntype ServiceFormProps = {\n  serviceType: string;\n  onSubmit: (data: any) => void;\n  isLoading: boolean;\n  children: ReactNode;\n};\n\nexport function ServiceFormModal({ serviceType, onSubmit, isLoading, children }: ServiceFormProps) {\n  const [open, setOpen] = useState(false);\n\n  const getSchema = () => {\n    switch (serviceType) {\n      case \"prescription\":\n        return prescriptionSchema;\n      case \"medical_certificate\":\n        return medicalCertificateSchema;\n      case \"mental_health\":\n        return mentalHealthSchema;\n      case \"telehealth\":\n        return telehealthSchema;\n      case \"pathology\":\n        return pathologySchema;\n      default:\n        return z.object({});\n    }\n  };\n\n  const getDefaultValues = () => {\n    switch (serviceType) {\n      case \"prescription\":\n        return {\n          medication: \"\",\n          dosage: \"\",\n          previous_doctor: \"\",\n          reason: \"\",\n        };\n      case \"medical_certificate\":\n        return {\n          certificate_type: \"sick_leave\" as const,\n          date_from: \"\",\n          date_to: \"\",\n          symptoms: \"\",\n        };\n      case \"mental_health\":\n        return {\n          support_type: \"mental_health_plan\" as const,\n          symptoms: \"\",\n          previous_treatment: \"\",\n        };\n      case \"telehealth\":\n        return {\n          consultation_type: \"general\" as const,\n          preferred_time: \"anytime\" as const,\n          health_concerns: \"\",\n          current_medications: \"\",\n        };\n      case \"pathology\":\n        return {\n          test_type: \"blood_work\" as const,\n          reason_for_test: \"\",\n          previous_tests: \"\",\n          preferred_lab: \"\",\n        };\n      default:\n        return {};\n    }\n  };\n\n  const getTitle = () => {\n    switch (serviceType) {\n      case \"prescription\":\n        return \"Request Prescription Renewal\";\n      case \"medical_certificate\":\n        return \"Request Medical Certificate\";\n      case \"mental_health\":\n        return \"Mental Health Support Request\";\n      case \"telehealth\":\n        return \"Book Telehealth Consultation\";\n      case \"pathology\":\n        return \"Request Pathology Referral\";\n      default:\n        return \"Request Service\";\n    }\n  };\n\n  const form = useForm<any>({\n    resolver: zodResolver(getSchema()),\n    defaultValues: getDefaultValues(),\n  });\n\n  const handleSubmit = (data: any) => {\n    onSubmit(data);\n    setOpen(false);\n    form.reset();\n  };\n\n  const renderFormFields = () => {\n    switch (serviceType) {\n      case \"prescription\":\n        return (\n          <div className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"medication\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Medication Name</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...field}\n                      placeholder=\"e.g. Panadol, Ventolin\"\n                      data-testid=\"input-medication\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"dosage\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Dosage</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...field}\n                      placeholder=\"e.g. 500mg twice daily\"\n                      data-testid=\"input-dosage\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"previous_doctor\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Previous Prescribing Doctor (Optional)</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...field}\n                      placeholder=\"Dr. Smith\"\n                      data-testid=\"input-previous-doctor\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"reason\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Reason for Prescription</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      {...field}\n                      rows={3}\n                      placeholder=\"Brief description of medical condition requiring this medication\"\n                      data-testid=\"textarea-reason\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n        );\n\n      case \"medical_certificate\":\n        return (\n          <div className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"certificate_type\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Certificate Type</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-certificate-type\">\n                        <SelectValue placeholder=\"Select type\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"sick_leave\">Sick Leave</SelectItem>\n                      <SelectItem value=\"fitness_to_work\">Fitness to Work</SelectItem>\n                      <SelectItem value=\"study_exemption\">Study Exemption</SelectItem>\n                      <SelectItem value=\"general_medical\">General Medical Certificate</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"date_from\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Date From</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...field}\n                      type=\"date\"\n                      data-testid=\"input-date-from\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"date_to\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Date To</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...field}\n                      type=\"date\"\n                      data-testid=\"input-date-to\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"symptoms\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Symptoms/Condition</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      {...field}\n                      rows={3}\n                      placeholder=\"Describe your symptoms or medical condition\"\n                      data-testid=\"textarea-symptoms\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n        );\n\n      case \"mental_health\":\n        return (\n          <div className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"support_type\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Support Type</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-support-type\">\n                        <SelectValue placeholder=\"Select support type\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"mental_health_plan\">Mental Health Care Plan</SelectItem>\n                      <SelectItem value=\"counseling_referral\">Counseling Referral</SelectItem>\n                      <SelectItem value=\"medication_review\">Medication Review</SelectItem>\n                      <SelectItem value=\"crisis_support\">Crisis Support</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"symptoms\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Current Symptoms (Optional)</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      {...field}\n                      rows={3}\n                      placeholder=\"Briefly describe what you're experiencing\"\n                      data-testid=\"textarea-current-symptoms\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"previous_treatment\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Previous Mental Health Treatment</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      {...field}\n                      rows={3}\n                      placeholder=\"Any previous counseling, medications, or treatment\"\n                      data-testid=\"textarea-previous-treatment\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <p className=\"text-sm text-freedoc-dark\">\n                <strong>Crisis Support:</strong> If you're having thoughts of self-harm, please call Lifeline 13 11 14 or visit your nearest emergency department.\n              </p>\n            </div>\n          </div>\n        );\n\n      case \"telehealth\":\n        return (\n          <div className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"consultation_type\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Consultation Type</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-consultation-type\">\n                        <SelectValue placeholder=\"Select consultation type\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"general\">General Consultation</SelectItem>\n                      <SelectItem value=\"follow_up\">Follow-up Appointment</SelectItem>\n                      <SelectItem value=\"chronic_disease\">Chronic Disease Management</SelectItem>\n                      <SelectItem value=\"preventive\">Preventive Health Check</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"preferred_time\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Preferred Time</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-preferred-time\">\n                        <SelectValue placeholder=\"Select preferred time\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"morning\">Morning (9am-12pm)</SelectItem>\n                      <SelectItem value=\"afternoon\">Afternoon (12pm-5pm)</SelectItem>\n                      <SelectItem value=\"evening\">Evening (5pm-8pm)</SelectItem>\n                      <SelectItem value=\"anytime\">Any time available</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"health_concerns\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Current Health Concerns</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      {...field}\n                      rows={4}\n                      placeholder=\"Describe your current health concerns or symptoms\"\n                      data-testid=\"textarea-health-concerns\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"current_medications\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Current Medications (Optional)</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      {...field}\n                      rows={2}\n                      placeholder=\"List any medications you're currently taking\"\n                      data-testid=\"textarea-current-medications\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n        );\n\n      case \"pathology\":\n        return (\n          <div className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"test_type\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Test Type Required</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-test-type\">\n                        <SelectValue placeholder=\"Select test type\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"blood_work\">Blood Work (FBC, Iron Studies, etc.)</SelectItem>\n                      <SelectItem value=\"diabetes_screening\">Diabetes Screening</SelectItem>\n                      <SelectItem value=\"cholesterol\">Cholesterol Check</SelectItem>\n                      <SelectItem value=\"thyroid\">Thyroid Function</SelectItem>\n                      <SelectItem value=\"vitamin_d\">Vitamin D Level</SelectItem>\n                      <SelectItem value=\"other\">Other (specify below)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"reason_for_test\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Symptoms or Reason for Test</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      {...field}\n                      rows={3}\n                      placeholder=\"Describe symptoms or reason for requesting these tests\"\n                      data-testid=\"textarea-reason-for-test\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"previous_tests\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Last Similar Tests (Optional)</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...field}\n                      placeholder=\"When and what results (optional)\"\n                      data-testid=\"input-previous-tests\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"preferred_lab\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Preferred Pathology Lab (Optional)</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-preferred-lab\">\n                        <SelectValue placeholder=\"No preference\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"australian_clinical_labs\">Australian Clinical Labs</SelectItem>\n                      <SelectItem value=\"healius\">Healius Pathology</SelectItem>\n                      <SelectItem value=\"qml\">QML Pathology</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n        );\n\n      default:\n        return <div>Form not available</div>;\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        {children}\n      </DialogTrigger>\n      <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"text-xl font-semibold text-freedoc-dark\">\n            {getTitle()}\n          </DialogTitle>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-6\">\n            {renderFormFields()}\n\n            <div className=\"flex space-x-4 pt-4\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => setOpen(false)}\n                className=\"flex-1\"\n                data-testid=\"button-cancel\"\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                className=\"flex-1 bg-freedoc-blue hover:bg-freedoc-blue/90\"\n                disabled={isLoading}\n                data-testid=\"button-submit-request\"\n              >\n                {isLoading ? \"Submitting...\" : \"Submit Request\"}\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":21456},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}